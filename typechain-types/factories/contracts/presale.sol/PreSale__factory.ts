/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PreSale,
  PreSaleInterface,
} from "../../../contracts/presale.sol/PreSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "TransferKeys",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accessPass",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "image",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getAccessPass",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
        ],
        internalType: "struct PreSale.AccessPassStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEthBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "transferPreSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEthBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620029463803806200294683398101604081905262000034916200079d565b6040518060600160405280602c81526020016200291a602c913962000059816200019c565b506200006533620001b5565b81516200007a9060049060208501906200067f565b5080600581905550620000a8336001617530604051806020016040528060008152506200020760201b60201c565b60016000819052600660209081527f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a3191825560408051808201909152600a808252694163636573735061737360b01b919092019081526200012c917f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a3291906200067f565b5061753081600201819055508181600301819055506200015860016200032760201b62000c391760201c565b6040516020016200016a919062000849565b604051602081830303815290604052816004019080519060200190620001929291906200067f565b5050505062000b09565b8051620001b19060029060208401906200067f565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166200026d5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084015b60405180910390fd5b336200029381600087620002818862000444565b6200028c8862000444565b5050505050565b6000848152602081815260408083206001600160a01b038916845290915281208054859290620002c5908490620008b6565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46200028c816000878787876200049a565b6060816200034c5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156200037c57806200036381620008d1565b9150620003749050600a8362000905565b915062000350565b6000816001600160401b0381111562000399576200039962000725565b6040519080825280601f01601f191660200182016040528015620003c4576020820181803683370190505b5090505b84156200043c57620003dc6001836200091c565b9150620003eb600a8662000936565b620003f8906030620008b6565b60f81b8183815181106200041057620004106200094d565b60200101906001600160f81b031916908160001a90535062000434600a8662000905565b9450620003c8565b949350505050565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106200048157620004816200094d565b602090810291909101015292915050565b505050505050565b620004b9846001600160a01b03166200067060201b62000d3f1760201c565b15620004925760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190620004f5908990899088908890889060040162000991565b6020604051808303816000875af192505050801562000533575060408051601f3d908101601f191682019092526200053091810190620009d8565b60015b620005f4576200054262000a0b565b806308c379a014156200058357506200055a62000a28565b8062000567575062000585565b8060405162461bcd60e51b815260040162000264919062000ab7565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840162000264565b6001600160e01b0319811663f23a6e6160e01b14620006675760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840162000264565b50505050505050565b6001600160a01b03163b151590565b8280546200068d9062000acc565b90600052602060002090601f016020900481019282620006b15760008555620006fc565b82601f10620006cc57805160ff1916838001178555620006fc565b82800160010185558215620006fc579182015b82811115620006fc578251825591602001919060010190620006df565b506200070a9291506200070e565b5090565b5b808211156200070a57600081556001016200070f565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b038111828210171562000763576200076362000725565b6040525050565b60005b83811015620007875781810151838201526020016200076d565b8381111562000797576000848401525b50505050565b60008060408385031215620007b157600080fd5b82516001600160401b0380821115620007c957600080fd5b818501915085601f830112620007de57600080fd5b815181811115620007f357620007f362000725565b60405191506200080e601f8201601f1916602001836200073b565b8082528660208285010111156200082457600080fd5b620008378160208401602086016200076a565b50602094909401519395939450505050565b7f68747470733a2f2f7777772e6e667478742e78797a2f6170692f696d616765708152666173733f69643d60c81b602082015260008251620008938160278501602087016200076a565b9190910160270192915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115620008cc57620008cc620008a0565b500190565b6000600019821415620008e857620008e8620008a0565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082620009175762000917620008ef565b500490565b600082821015620009315762000931620008a0565b500390565b600082620009485762000948620008ef565b500690565b634e487b7160e01b600052603260045260246000fd5b600081518084526200097d8160208601602086016200076a565b601f01601f19169290920160200192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090620009cd9083018462000963565b979650505050505050565b600060208284031215620009eb57600080fd5b81516001600160e01b03198116811462000a0457600080fd5b9392505050565b600060033d111562000a255760046000803e5060005160e01c5b90565b600060443d101562000a375790565b6040516003193d81016004833e81513d6001600160401b03808311602484018310171562000a6757505050505090565b828501915081518181111562000a805750505050505090565b843d870101602082850101111562000a9b5750505050505090565b62000aac602082860101876200073b565b509095945050505050565b60208152600062000a04602083018462000963565b600181811c9082168062000ae157607f821691505b6020821081141562000b0357634e487b7160e01b600052602260045260246000fd5b50919050565b611e018062000b196000396000f3fe6080604052600436106101085760003560e01c8063715018a611610095578063d420823611610064578063d4208236146102e4578063e8ddf15a146102f7578063e985e9c5146102ff578063f242432a14610348578063f2fde38b1461036857600080fd5b8063715018a6146102725780638da5cb5b1461028757806398d5fdca146102af578063a22cb465146102c457600080fd5b80632ad81f4a116100dc5780632ad81f4a146101ce5780632eb2c2d6146101fb5780634e1273f41461021d57806370ed0ada1461024a578063714c53981461025d57600080fd5b8062fdd58e1461010d57806301ffc9a7146101405780630e89341c146101705780630e8d96291461019d575b600080fd5b34801561011957600080fd5b5061012d610128366004611402565b610388565b6040519081526020015b60405180910390f35b34801561014c57600080fd5b5061016061015b366004611442565b61041f565b6040519015158152602001610137565b34801561017c57600080fd5b5061019061018b366004611466565b610471565b60405161013791906114db565b3480156101a957600080fd5b506101bd6101b8366004611466565b6104a2565b6040516101379594939291906114ee565b3480156101da57600080fd5b506101ee6101e9366004611466565b6105e1565b6040516101379190611531565b34801561020757600080fd5b5061021b6102163660046116dd565b61077a565b005b34801561022957600080fd5b5061023d610238366004611787565b610811565b604051610137919061188d565b34801561025657600080fd5b504761012d565b34801561026957600080fd5b5061019061093b565b34801561027e57600080fd5b5061021b6109cd565b34801561029357600080fd5b506003546040516001600160a01b039091168152602001610137565b3480156102bb57600080fd5b5060055461012d565b3480156102d057600080fd5b5061021b6102df3660046118a0565b610a03565b61021b6102f23660046118dc565b610a12565b61021b610abe565b34801561030b57600080fd5b5061016061031a366004611929565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561035457600080fd5b5061021b61036336600461195c565b610b17565b34801561037457600080fd5b5061021b6103833660046119c1565b610b9e565b60006001600160a01b0383166103f95760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061045057506001600160e01b031982166303a24d0760e21b145b8061046b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606061047c82610c39565b60405160200161048c91906119dc565b6040516020818303038152906040529050919050565b600660205260009081526040902080546001820180549192916104c490611a32565b80601f01602080910402602001604051908101604052809291908181526020018280546104f090611a32565b801561053d5780601f106105125761010080835404028352916020019161053d565b820191906000526020600020905b81548152906001019060200180831161052057829003601f168201915b50505050509080600201549080600301549080600401805461055e90611a32565b80601f016020809104026020016040519081016040528092919081815260200182805461058a90611a32565b80156105d75780601f106105ac576101008083540402835291602001916105d7565b820191906000526020600020905b8154815290600101906020018083116105ba57829003601f168201915b5050505050905085565b6106136040518060a0016040528060008152602001606081526020016000815260200160008152602001606081525090565b600660008381526020019081526020016000206040518060a00160405290816000820154815260200160018201805461064b90611a32565b80601f016020809104026020016040519081016040528092919081815260200182805461067790611a32565b80156106c45780601f10610699576101008083540402835291602001916106c4565b820191906000526020600020905b8154815290600101906020018083116106a757829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820180546106f190611a32565b80601f016020809104026020016040519081016040528092919081815260200182805461071d90611a32565b801561076a5780601f1061073f5761010080835404028352916020019161076a565b820191906000526020600020905b81548152906001019060200180831161074d57829003601f168201915b5050505050815250509050919050565b6001600160a01b0385163314806107965750610796853361031a565b6107fd5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016103f0565b61080a8585858585610d4e565b5050505050565b606081518351146108765760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016103f0565b6000835167ffffffffffffffff81111561089257610892611591565b6040519080825280602002602001820160405280156108bb578160200160208202803683370190505b50905060005b8451811015610933576109068582815181106108df576108df611a6d565b60200260200101518583815181106108f9576108f9611a6d565b6020026020010151610388565b82828151811061091857610918611a6d565b602090810291909101015261092c81611a99565b90506108c1565b509392505050565b60606004805461094a90611a32565b80601f016020809104026020016040519081016040528092919081815260200182805461097690611a32565b80156109c35780601f10610998576101008083540402835291602001916109c3565b820191906000526020600020905b8154815290600101906020018083116109a657829003601f168201915b5050505050905090565b6003546001600160a01b031633146109f75760405162461bcd60e51b81526004016103f090611ab4565b610a016000610f2b565b565b610a0e338383610f7d565b5050565b8060ff16600554610a239190611ae9565b341015610a585760405162461bcd60e51b81526020600482015260036024820152624e454360e81b60448201526064016103f0565b610a78838360018460ff1660405180602001604052806000815250610b17565b60405160ff821681526001600160a01b038316907f10c0903ec2066f2d17b6259882243b084e1ad4aaccd0be7f57df8b1b8b91eb059060200160405180910390a2505050565b6003546001600160a01b03163314610ae85760405162461bcd60e51b81526004016103f090611ab4565b6040514790339082156108fc029083906000818181858888f19350505050158015610a0e573d6000803e3d6000fd5b6001600160a01b038516331480610b335750610b33853361031a565b610b915760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016103f0565b61080a858585858561105e565b6003546001600160a01b03163314610bc85760405162461bcd60e51b81526004016103f090611ab4565b6001600160a01b038116610c2d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f0565b610c3681610f2b565b50565b606081610c5d5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610c875780610c7181611a99565b9150610c809050600a83611b1e565b9150610c61565b60008167ffffffffffffffff811115610ca257610ca2611591565b6040519080825280601f01601f191660200182016040528015610ccc576020820181803683370190505b5090505b8415610d3757610ce1600183611b32565b9150610cee600a86611b49565b610cf9906030611b5d565b60f81b818381518110610d0e57610d0e611a6d565b60200101906001600160f81b031916908160001a905350610d30600a86611b1e565b9450610cd0565b949350505050565b6001600160a01b03163b151590565b8151835114610db05760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016103f0565b6001600160a01b038416610dd65760405162461bcd60e51b81526004016103f090611b75565b3360005b8451811015610ebd576000858281518110610df757610df7611a6d565b602002602001015190506000858381518110610e1557610e15611a6d565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610e655760405162461bcd60e51b81526004016103f090611bba565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610ea2908490611b5d565b9250508190555050505080610eb690611a99565b9050610dda565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610f0d929190611c04565b60405180910390a4610f23818787878787611184565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610ff15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016103f0565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166110845760405162461bcd60e51b81526004016103f090611b75565b3361109d818787611094886112e0565b61080a886112e0565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156110de5760405162461bcd60e51b81526004016103f090611bba565b6000858152602081815260408083206001600160a01b038b811685529252808320878503905590881682528120805486929061111b908490611b5d565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461117b82888888888861132b565b50505050505050565b6001600160a01b0384163b15610f235760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906111c89089908990889088908890600401611c29565b6020604051808303816000875af1925050508015611203575060408051601f3d908101601f1916820190925261120091810190611c7b565b60015b6112b05761120f611c98565b806308c379a014156112495750611224611cb4565b8061122f575061124b565b8060405162461bcd60e51b81526004016103f091906114db565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016103f0565b6001600160e01b0319811663bc197c8160e01b1461117b5760405162461bcd60e51b81526004016103f090611d3e565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061131a5761131a611a6d565b602090810291909101015292915050565b6001600160a01b0384163b15610f235760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061136f9089908990889088908890600401611d86565b6020604051808303816000875af19250505080156113aa575060408051601f3d908101601f191682019092526113a791810190611c7b565b60015b6113b65761120f611c98565b6001600160e01b0319811663f23a6e6160e01b1461117b5760405162461bcd60e51b81526004016103f090611d3e565b80356001600160a01b03811681146113fd57600080fd5b919050565b6000806040838503121561141557600080fd5b61141e836113e6565b946020939093013593505050565b6001600160e01b031981168114610c3657600080fd5b60006020828403121561145457600080fd5b813561145f8161142c565b9392505050565b60006020828403121561147857600080fd5b5035919050565b60005b8381101561149a578181015183820152602001611482565b838111156114a9576000848401525b50505050565b600081518084526114c781602086016020860161147f565b601f01601f19169290920160200192915050565b60208152600061145f60208301846114af565b85815260a06020820152600061150760a08301876114af565b856040840152846060840152828103608084015261152581856114af565b98975050505050505050565b60208152815160208201526000602083015160a0604084015261155760c08401826114af565b905060408401516060840152606084015160808401526080840151601f198483030160a085015261158882826114af565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156115cd576115cd611591565b6040525050565b600067ffffffffffffffff8211156115ee576115ee611591565b5060051b60200190565b600082601f83011261160957600080fd5b81356020611616826115d4565b60405161162382826115a7565b83815260059390931b850182019282810191508684111561164357600080fd5b8286015b8481101561165e5780358352918301918301611647565b509695505050505050565b600082601f83011261167a57600080fd5b813567ffffffffffffffff81111561169457611694611591565b6040516116ab601f8301601f1916602001826115a7565b8181528460208386010111156116c057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156116f557600080fd5b6116fe866113e6565b945061170c602087016113e6565b9350604086013567ffffffffffffffff8082111561172957600080fd5b61173589838a016115f8565b9450606088013591508082111561174b57600080fd5b61175789838a016115f8565b9350608088013591508082111561176d57600080fd5b5061177a88828901611669565b9150509295509295909350565b6000806040838503121561179a57600080fd5b823567ffffffffffffffff808211156117b257600080fd5b818501915085601f8301126117c657600080fd5b813560206117d3826115d4565b6040516117e082826115a7565b83815260059390931b850182019282810191508984111561180057600080fd5b948201945b8386101561182557611816866113e6565b82529482019490820190611805565b9650508601359250508082111561183b57600080fd5b50611848858286016115f8565b9150509250929050565b600081518084526020808501945080840160005b8381101561188257815187529582019590820190600101611866565b509495945050505050565b60208152600061145f6020830184611852565b600080604083850312156118b357600080fd5b6118bc836113e6565b9150602083013580151581146118d157600080fd5b809150509250929050565b6000806000606084860312156118f157600080fd5b6118fa846113e6565b9250611908602085016113e6565b9150604084013560ff8116811461191e57600080fd5b809150509250925092565b6000806040838503121561193c57600080fd5b611945836113e6565b9150611953602084016113e6565b90509250929050565b600080600080600060a0868803121561197457600080fd5b61197d866113e6565b945061198b602087016113e6565b93506040860135925060608601359150608086013567ffffffffffffffff8111156119b557600080fd5b61177a88828901611669565b6000602082840312156119d357600080fd5b61145f826113e6565b7f68747470733a2f2f7777772e6e667478742e78797a2f6170692f616363657373815267706173733f69643d60c01b602082015260008251611a2581602885016020870161147f565b9190910160280192915050565b600181811c90821680611a4657607f821691505b60208210811415611a6757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611aad57611aad611a83565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000816000190483118215151615611b0357611b03611a83565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611b2d57611b2d611b08565b500490565b600082821015611b4457611b44611a83565b500390565b600082611b5857611b58611b08565b500690565b60008219821115611b7057611b70611a83565b500190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000611c176040830185611852565b82810360208401526115888185611852565b6001600160a01b0386811682528516602082015260a060408201819052600090611c5590830186611852565b8281036060840152611c678186611852565b9050828103608084015261152581856114af565b600060208284031215611c8d57600080fd5b815161145f8161142c565b600060033d1115611cb15760046000803e5060005160e01c5b90565b600060443d1015611cc25790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611cf257505050505090565b8285019150815181811115611d0a5750505050505090565b843d8701016020828501011115611d245750505050505090565b611d33602082860101876115a7565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611dc0908301846114af565b97965050505050505056fea2646970667358221220fc3b36df9a3e85e5a9921d6e2318ddc0a1e1b36e6544182e36c7da7d6440fa1164736f6c634300080b003368747470733a2f2f7777772e6e667478742e78797a2f6170692f616363657373706173733f69643d7b69647d";

type PreSaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PreSaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PreSale__factory extends ContractFactory {
  constructor(...args: PreSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PreSale> {
    return super.deploy(
      _baseTokenURI,
      _price,
      overrides || {}
    ) as Promise<PreSale>;
  }
  override getDeployTransaction(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseTokenURI, _price, overrides || {});
  }
  override attach(address: string): PreSale {
    return super.attach(address) as PreSale;
  }
  override connect(signer: Signer): PreSale__factory {
    return super.connect(signer) as PreSale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PreSaleInterface {
    return new utils.Interface(_abi) as PreSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PreSale {
    return new Contract(address, _abi, signerOrProvider) as PreSale;
  }
}
