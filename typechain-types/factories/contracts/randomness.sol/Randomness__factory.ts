/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Randomness,
  RandomnessInterface,
} from "../../../contracts/randomness.sol/Randomness";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLinkBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintedTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "epoch",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "tickets",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Randomness.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneTicket",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRemainingTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_epoch",
        type: "uint8",
      },
    ],
    name: "getWinningPercentage",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalTickets",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_epoch",
        type: "uint8",
      },
    ],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_epoch",
        type: "uint8",
      },
    ],
    name: "unlockNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526203ac1460025562056ec8600355610fab600455600060058190556006805460ff1916905560075534801561003857600080fd5b50604051611331380380611331833981016040819052610057916100f2565b6001600160a01b0384811660a052831660805261007333610084565b600c91909155600d55506101359050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146100ed57600080fd5b919050565b6000806000806080858703121561010857600080fd5b610111856100d6565b935061011f602086016100d6565b6040860151606090960151949790965092505050565b60805160a0516111c261016f600039600081816107710152610b2d015260008181610418015281816105e70152610afe01526111c26000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636445dc0d116100a2578063832747fd11610071578063832747fd1461020f5780638da5cb5b1461026057806394985ddd1461027b578063ced72f871461028e578063f2fde38b1461029657600080fd5b80636445dc0d146101e4578063692f1d12146101f757806370cc89ad146101ff578063715018a61461020757600080fd5b8063331bf125116100e9578063331bf125146101825780634b46cdd11461018a57806350c5f975146101b55780635c3e0da2146101bd5780635ff0c75b146101c557600080fd5b80630211bd0e1461011b578063037bee481461013257806306e8337f146101655780630c7e3b281461016d575b600080fd5b6005545b6040519081526020015b60405180910390f35b610145610140366004610dec565b6102a9565b6040805160ff948516815293909216602084015290820152606001610129565b60045461011f565b61018061017b366004610e37565b610327565b005b600c5461011f565b61019d610198366004610e63565b6103a2565b6040516001600160801b039091168152602001610129565b61011f610400565b610180610490565b6101d460065460ff1660011490565b6040519015158152602001610129565b6101806101f2366004610e7e565b6104c6565b61011f610698565b61011f6106a3565b6101806106b5565b61022261021d366004610dec565b6106eb565b6040516101299190600060808201905060ff835116825260ff6020840151166020830152604083015160408301526060830151606083015292915050565b6001546040516001600160a01b039091168152602001610129565b610180610289366004610ec3565b610766565b600d5461011f565b6101806102a4366004610ee5565b6107e8565b6000806000600a846040516102be9190610f3e565b9081526040519081900360200181205460ff1690600a906102e0908790610f3e565b9081526040519081900360200181205460ff6101009091041690600a90610308908890610f3e565b9081526020016040518091039020600101549250925092509193909250565b6001546001600160a01b0316331461035a5760405162461bcd60e51b815260040161035190610f5a565b60405180910390fd5b6006805460ff1916600117905560048290556000600555600760ff821614156103915760035461038a9042610fa5565b6007555050565b60025461038a9042610fa5565b5050565b600080426007546103b39190610fbd565b905060006103c2603c83610fea565b6005546004546103d29190610fbd565b6103dd906064610ffe565b6103e79190610fea565b90508360ff16600714156103f9575060655b9392505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610467573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048b919061101d565b905090565b6001546001600160a01b031633146104ba5760405162461bcd60e51b815260040161035190610f5a565b6006805460ff19169055565b60065460ff166001146105015760405162461bcd60e51b81526020600482015260036024820152624d505360e81b6044820152606401610351565b6009826040516105119190610f3e565b9081526040519081900360200190205460ff610100909104161561055d5760405162461bcd60e51b81526020600482015260036024820152624b414560e81b6044820152606401610351565b4260075410156105955760405162461bcd60e51b81526020600482015260036024820152624d504560e81b6044820152606401610351565b60055460045410156105cf5760405162461bcd60e51b81526020600482015260036024820152624d545560e81b6044820152606401610351565b600d546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065a919061101d565b101561068e5760405162461bcd60e51b81526020600482015260036024820152624e454360e81b6044820152606401610351565b61039e8282610883565b600061048b600b5490565b600060055460045461048b9190610fbd565b6001546001600160a01b031633146106df5760405162461bcd60e51b815260040161035190610f5a565b6106e960006108f5565b565b6040805160808101825260008082526020820181905281830181905260608201529051600a9061071c908490610f3e565b908152604080519182900360209081018320608084018352805460ff8082168652610100909104169184019190915260018101549183019190915260020154606082015292915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107de5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610351565b61039e8282610947565b6001546001600160a01b031633146108125760405162461bcd60e51b815260040161035190610f5a565b6001600160a01b0381166108775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610351565b610880816108f5565b50565b6000610893600c54600d54610afa565b600081815260086020908152604090912085519293506108b7929091860190610cb0565b5060006009846040516108ca9190610f3e565b908152604051908190036020019020805461ffff191660ff9094169390931761010017909255505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610954606483611036565b61095f906001610fa5565b90506000426007546109719190610fbd565b90506000610980603c83610fea565b6005546004546109909190610fbd565b61099b906064610ffe565b6109a59190610fea565b90506009600860008781526020019081526020016000206040516109c99190611085565b90815260405190819003602001902054600760ff90911614156109ea575060655b60006109f68285610c75565b9050600960086000888152602001908152602001600020604051610a1a9190611085565b90815260405190819003602001902054600760ff909116148015610a3f575060ff8116155b15610a48575060015b8060ff16600554610a599190610fa5565b6005556000868152600860205260408082209051600a91610a7991611085565b90815260200160405180910390209050600960086000898152602001908152602001600020604051610aab9190611085565b90815260405190819003602001902054815460ff8481166101000261ffff1990921692169190911717815560018101869055426002820155610af1600b80546001019055565b50505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610b6a929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610b9793929190611121565b6020604051808303816000875af1158015610bb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bda919061116a565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152610c34906001610fa5565b60008581526020818152604091829020929092558051808301879052808201849052815180820383018152606090910190915280519101205b949350505050565b6000806103e8610c8e846001600160801b038716610ffe565b610c989190610fea565b9050600a8160ff1611156103f95750600a9392505050565b828054610cbc9061104a565b90600052602060002090601f016020900481019282610cde5760008555610d24565b82601f10610cf757805160ff1916838001178555610d24565b82800160010185558215610d24579182015b82811115610d24578251825591602001919060010190610d09565b50610d30929150610d34565b5090565b5b80821115610d305760008155600101610d35565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610d7057600080fd5b813567ffffffffffffffff80821115610d8b57610d8b610d49565b604051601f8301601f19908116603f01168101908282118183101715610db357610db3610d49565b81604052838152866020858801011115610dcc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610dfe57600080fd5b813567ffffffffffffffff811115610e1557600080fd5b610c6d84828501610d5f565b803560ff81168114610e3257600080fd5b919050565b60008060408385031215610e4a57600080fd5b82359150610e5a60208401610e21565b90509250929050565b600060208284031215610e7557600080fd5b6103f982610e21565b60008060408385031215610e9157600080fd5b823567ffffffffffffffff811115610ea857600080fd5b610eb485828601610d5f565b925050610e5a60208401610e21565b60008060408385031215610ed657600080fd5b50508035926020909101359150565b600060208284031215610ef757600080fd5b81356001600160a01b03811681146103f957600080fd5b60005b83811015610f29578181015183820152602001610f11565b83811115610f38576000848401525b50505050565b60008251610f50818460208701610f0e565b9190910192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610fb857610fb8610f8f565b500190565b600082821015610fcf57610fcf610f8f565b500390565b634e487b7160e01b600052601260045260246000fd5b600082610ff957610ff9610fd4565b500490565b600081600019048311821515161561101857611018610f8f565b500290565b60006020828403121561102f57600080fd5b5051919050565b60008261104557611045610fd4565b500690565b600181811c9082168061105e57607f821691505b6020821081141561107f57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806110a157607f831692505b60208084108214156110c157634e487b7160e01b86526022600452602486fd5b8180156110d557600181146110e657611113565b60ff19861689528489019650611113565b60008a81526020902060005b8681101561110b5781548b8201529085019083016110f2565b505084890196505b509498975050505050505050565b60018060a01b03841681528260208201526060604082015260008251806060840152611154816080850160208701610f0e565b601f01601f191691909101608001949350505050565b60006020828403121561117c57600080fd5b815180151581146103f957600080fdfea2646970667358221220dc4e1501eabc38f4c43e5c8427fbe26c2b3ee4329f1df12a4b002a6b62f53f4064736f6c634300080b0033";

type RandomnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Randomness__factory extends ContractFactory {
  constructor(...args: RandomnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Randomness> {
    return super.deploy(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      overrides || {}
    ) as Promise<Randomness>;
  }
  override getDeployTransaction(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      overrides || {}
    );
  }
  override attach(address: string): Randomness {
    return super.attach(address) as Randomness;
  }
  override connect(signer: Signer): Randomness__factory {
    return super.connect(signer) as Randomness__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomnessInterface {
    return new utils.Interface(_abi) as RandomnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Randomness {
    return new Contract(address, _abi, signerOrProvider) as Randomness;
  }
}
