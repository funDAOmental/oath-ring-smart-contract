/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ZEROKeys,
  ZEROKeysInterface,
} from "../../../contracts/zerokeys.sol/ZEROKeys";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "MintKeys",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "TransferKeys",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burnKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "seed",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "epoch",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "epochType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct ZEROKeys.NftStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEthBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintedKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "seed",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "epoch",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "epochType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct ZEROKeys.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "mintKeys",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPhase",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintedKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "seed",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "epoch",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "epochType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalKeys",
        type: "uint256",
      },
    ],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "updateMintedKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEthBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526006805460ff60a01b1916905560006007819055617530600a55600b553480156200002e57600080fd5b50604051620027a1380380620027a183398101604081905262000051916200021b565b604080518082018252601881527f5a45524f4b6579732062792066756e44414f6d656e74616c00000000000000006020808301918252835180850190945260088452675a45524f4b45595360c01b908401528151919291620000b6916000916200015f565b508051620000cc9060019060208401906200015f565b505050620000e9620000e36200010960201b60201c565b6200010d565b8151620000fe9060089060208501906200015f565b50600955506200033d565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200016d9062000300565b90600052602060002090601f016020900481019282620001915760008555620001dc565b82601f10620001ac57805160ff1916838001178555620001dc565b82800160010185558215620001dc579182015b82811115620001dc578251825591602001919060010190620001bf565b50620001ea929150620001ee565b5090565b5b80821115620001ea5760008155600101620001ef565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200022f57600080fd5b82516001600160401b03808211156200024757600080fd5b818501915085601f8301126200025c57600080fd5b81518181111562000271576200027162000205565b604051601f8201601f19908116603f011681019083821181831017156200029c576200029c62000205565b81604052828152602093508884848701011115620002b957600080fd5b600091505b82821015620002dd5784820184015181830185015290830190620002be565b82821115620002ef5760008484830101525b969092015195979596505050505050565b600181811c908216806200031557607f821691505b602082108114156200033757634e487b7160e01b600052602260045260246000fd5b50919050565b612454806200034d6000396000f3fe6080604052600436106102255760003560e01c806364d68988116101235780639a65ea26116100ab578063ca0f9b311161006f578063ca0f9b3114610665578063e08c708214610685578063e8ddf15a146106a5578063e985e9c5146106ad578063f2fde38b146106cd57600080fd5b80639a65ea26146105db578063a22cb465146105f0578063b8046b1c14610610578063b88d4fde14610625578063c87b56dd1461064557600080fd5b8063714c5398116100f2578063714c539814610569578063715018a61461057e5780638da5cb5b1461059357806395d89b41146105b157806398d5fdca146105c657600080fd5b806364d6898814610501578063692f1d121461052157806370a082311461053657806370ed0ada1461055657600080fd5b8063265aa621116101b157806342966c681161017557806342966c68146104685780635c3e0da2146104885780635ff0c75b1461049d5780636352211e146104bf57806363ba31cf146104df57600080fd5b8063265aa6211461039a5780632924bff31461040a57806330b5abdc1461041d5780633e3e0b121461043357806342842e0e1461044857600080fd5b806308e4c25f116101f857806308e4c25f146102db578063095ea7b31461030857806317881cbf146103285780632294bf4d1461035b57806323b872dd1461037a57600080fd5b806301ffc9a71461022a57806302a7e3a31461025f57806306fdde0314610281578063081812fc146102a3575b600080fd5b34801561023657600080fd5b5061024a610245366004611dc6565b6106ed565b60405190151581526020015b60405180910390f35b34801561026b57600080fd5b5061027f61027a366004611de3565b61073f565b005b34801561028d57600080fd5b5061029661077f565b6040516102569190611e54565b3480156102af57600080fd5b506102c36102be366004611de3565b610811565b6040516001600160a01b039091168152602001610256565b3480156102e757600080fd5b506102fb6102f6366004611de3565b610899565b6040516102569190611ec2565b34801561031457600080fd5b5061027f610323366004611eec565b61098f565b34801561033457600080fd5b5060065461034990600160a01b900460ff1681565b60405160ff9091168152602001610256565b34801561036757600080fd5b506007545b604051908152602001610256565b34801561038657600080fd5b5061027f610395366004611f16565b610aa5565b3480156103a657600080fd5b506103ba6103b5366004611de3565b610ad7565b604080516001600160a01b03909816885260208801969096526001600160801b039094169486019490945260ff918216606086015216608084015260a083019190915260c082015260e001610256565b61027f610418366004611f63565b610b41565b34801561042957600080fd5b5061036c60075481565b34801561043f57600080fd5b5061027f610df4565b34801561045457600080fd5b5061027f610463366004611f16565b610e2d565b34801561047457600080fd5b5061027f610483366004611de3565b610e48565b34801561049457600080fd5b5061027f610ec2565b3480156104a957600080fd5b50600654600160a01b900460ff1660011461024a565b3480156104cb57600080fd5b506102c36104da366004611de3565b610ef6565b3480156104eb57600080fd5b506104f4610f6d565b6040516102569190611f96565b34801561050d57600080fd5b5061027f61051c366004611de3565b61102b565b34801561052d57600080fd5b5061036c6110e2565b34801561054257600080fd5b5061036c610551366004611fe4565b6110f2565b34801561056257600080fd5b504761036c565b34801561057557600080fd5b50610296611179565b34801561058a57600080fd5b5061027f611188565b34801561059f57600080fd5b506006546001600160a01b03166102c3565b3480156105bd57600080fd5b506102966111bc565b3480156105d257600080fd5b5060095461036c565b3480156105e757600080fd5b5061027f6111cb565b3480156105fc57600080fd5b5061027f61060b366004611fff565b61120f565b34801561061c57600080fd5b50600b5461036c565b34801561063157600080fd5b5061027f610640366004612051565b61121e565b34801561065157600080fd5b50610296610660366004611de3565b611256565b34801561067157600080fd5b5061027f61068036600461212d565b611321565b34801561069157600080fd5b5061027f6106a0366004611f16565b611338565b61027f6113ff565b3480156106b957600080fd5b5061024a6106c8366004612148565b611458565b3480156106d957600080fd5b5061027f6106e8366004611fe4565b611486565b60006001600160e01b031982166380ac58cd60e01b148061071e57506001600160e01b03198216635b5e139f60e01b145b8061073957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6006546001600160a01b031633146107725760405162461bcd60e51b815260040161076990612172565b60405180910390fd5b61077a6111cb565b600b55565b60606000805461078e906121a7565b80601f01602080910402602001604051908101604052809291908181526020018280546107ba906121a7565b80156108075780601f106107dc57610100808354040283529160200191610807565b820191906000526020600020905b8154815290600101906020018083116107ea57829003601f168201915b5050505050905090565b600061081c8261151e565b61087d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610769565b506000908152600460205260409020546001600160a01b031690565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091526108db8261151e565b6108f75760405162461bcd60e51b8152600401610769906121e2565b600d828154811061090a5761090a6121ff565b60009182526020918290206040805160e081018252600590930290910180546001600160a01b0316835260018101549383019390935260028301546001600160801b0381169183019190915260ff600160801b820481166060840152600160881b909104166080820152600382015460a082015260049091015460c082015292915050565b600061099a82610ef6565b9050806001600160a01b0316836001600160a01b03161415610a085760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610769565b336001600160a01b0382161480610a245750610a248133611458565b610a965760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610769565b610aa0838361153b565b505050565b610ab0335b826115a9565b610acc5760405162461bcd60e51b815260040161076990612215565b610aa0838383611673565b600d8181548110610ae757600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b03909316945090926001600160801b0382169260ff600160801b8404811693600160881b900416919087565b600654600160a01b900460ff16600114610b835760405162461bcd60e51b81526020600482015260036024820152624d505360e81b6044820152606401610769565b8060ff16600954610b94919061227c565b341015610bc95760405162461bcd60e51b81526020600482015260036024820152624e454360e81b6044820152606401610769565b8060ff16610bd6600c5490565b610be0919061229b565b600a541015610c175760405162461bcd60e51b815260206004820152600360248201526226a9a960e91b6044820152606401610769565b6000610c416040805142602080830191909152825180830382018152918301909252805191012090565b905060015b8260ff168160ff1611610da4576000610c70610c61600c5490565b610c6b908561229b565b61180f565b9050600d6040518060e00160405280876001600160a01b03168152602001610c97600c5490565b81526001600160801b0384811660208084019190915260006040808501829052606080860183905260808087018c90524260a097880152885460018082018b5599855293859020885160059095020180546001600160a01b0319166001600160a01b03909516949094178455938701519783019790975585015160028201805497870151938701519190941670ffffffffffffffffffffffffffffffffff1990971696909617600160801b60ff938416021760ff60881b1916600160881b9290961691909102949094179055810151600383015560c00151600490910155600c54610d83908690611845565b610d91600c80546001019055565b5080610d9c816122b3565b915050610c46565b610dad83611321565b60405160ff841681526001600160a01b038516907ff4813ce11ec830392e00915869b84ecdd501fbc061e169aff8c99ef2163a1f529060200160405180910390a250505050565b6006546001600160a01b03163314610e1e5760405162461bcd60e51b815260040161076990612172565b6006805460ff60a01b19169055565b610aa08383836040518060200160405280600081525061121e565b610e5133610aaa565b610eb65760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610769565b610ebf8161185f565b50565b6006546001600160a01b03163314610eec5760405162461bcd60e51b815260040161076990612172565b610ef4610df4565b565b6000818152600260205260408120546001600160a01b0316806107395760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610769565b6060600d805480602002602001604051908101604052809291908181526020016000905b828210156110225760008481526020908190206040805160e0810182526005860290920180546001600160a01b031683526001808201548486015260028201546001600160801b0381169385019390935260ff600160801b840481166060860152600160881b9093049092166080840152600381015460a08401526004015460c08301529083529092019101610f91565b50505050905090565b6006546001600160a01b031633146110555760405162461bcd60e51b815260040161076990612172565b61105e8161151e565b61107a5760405162461bcd60e51b8152600401610769906121e2565b600d818154811061108d5761108d6121ff565b60009182526020822060059091020180546001600160a01b03191681556001810182905560028101805471ffffffffffffffffffffffffffffffffffff191690556003810182905560040155610ebf8161185f565b60006110ed600c5490565b905090565b60006001600160a01b03821661115d5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610769565b506001600160a01b031660009081526003602052604090205490565b60606008805461078e906121a7565b6006546001600160a01b031633146111b25760405162461bcd60e51b815260040161076990612172565b610ef460006118fa565b60606001805461078e906121a7565b6006546001600160a01b031633146111f55760405162461bcd60e51b815260040161076990612172565b6006805460ff60a01b1916600160a01b1790556000600755565b61121a33838361194c565b5050565b61122833836115a9565b6112445760405162461bcd60e51b815260040161076990612215565b61125084848484611a1b565b50505050565b60606112618261151e565b6112c55760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610769565b60006112cf611179565b905060008151116112ef576040518060200160405280600081525061131a565b806112f984611a4e565b60405160200161130a9291906122d3565b6040516020818303038152906040525b9392505050565b8060ff16600754611332919061229b565b60075550565b6113418161151e565b61135d5760405162461bcd60e51b8152600401610769906121e2565b61136681610ef6565b6001600160a01b0316836001600160a01b0316146113ac5760405162461bcd60e51b815260206004820152600360248201526249474f60e81b6044820152606401610769565b6113b7838383610aa5565b816001600160a01b03167f10c0903ec2066f2d17b6259882243b084e1ad4aaccd0be7f57df8b1b8b91eb05826040516113f291815260200190565b60405180910390a2505050565b6006546001600160a01b031633146114295760405162461bcd60e51b815260040161076990612172565b6040514790339082156108fc029083906000818181858888f1935050505015801561121a573d6000803e3d6000fd5b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6006546001600160a01b031633146114b05760405162461bcd60e51b815260040161076990612172565b6001600160a01b0381166115155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610769565b610ebf816118fa565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061157082610ef6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006115b48261151e565b6116155760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610769565b600061162083610ef6565b9050806001600160a01b0316846001600160a01b0316148061165b5750836001600160a01b031661165084610811565b6001600160a01b0316145b8061166b575061166b8185611458565b949350505050565b826001600160a01b031661168682610ef6565b6001600160a01b0316146116ea5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610769565b6001600160a01b03821661174c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610769565b61175760008261153b565b6001600160a01b0383166000908152600360205260408120805460019290611780908490612302565b90915550506001600160a01b03821660009081526003602052604081208054600192906117ae90849061229b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6040805160208082018490528251808303820181529183019092528051910120600090662386f26fc100009061166b828261232f565b61121a828260405180602001604052806000815250611b4c565b600061186a82610ef6565b905061187760008361153b565b6001600160a01b03811660009081526003602052604081208054600192906118a0908490612302565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156119ae5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610769565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611a26848484611673565b611a3284848484611b7f565b6112505760405162461bcd60e51b815260040161076990612343565b606081611a725750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a9c5780611a8681612395565b9150611a959050600a836123b0565b9150611a76565b60008167ffffffffffffffff811115611ab757611ab761203b565b6040519080825280601f01601f191660200182016040528015611ae1576020820181803683370190505b5090505b841561166b57611af6600183612302565b9150611b03600a8661232f565b611b0e90603061229b565b60f81b818381518110611b2357611b236121ff565b60200101906001600160f81b031916908160001a905350611b45600a866123b0565b9450611ae5565b611b568383611c7d565b611b636000848484611b7f565b610aa05760405162461bcd60e51b815260040161076990612343565b60006001600160a01b0384163b15611c7257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611bc39033908990889088906004016123c4565b6020604051808303816000875af1925050508015611bfe575060408051601f3d908101601f19168201909252611bfb91810190612401565b60015b611c58573d808015611c2c576040519150601f19603f3d011682016040523d82523d6000602084013e611c31565b606091505b508051611c505760405162461bcd60e51b815260040161076990612343565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061166b565b506001949350505050565b6001600160a01b038216611cd35760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610769565b611cdc8161151e565b15611d295760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610769565b6001600160a01b0382166000908152600360205260408120805460019290611d5290849061229b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610ebf57600080fd5b600060208284031215611dd857600080fd5b813561131a81611db0565b600060208284031215611df557600080fd5b5035919050565b60005b83811015611e17578181015183820152602001611dff565b838111156112505750506000910152565b60008151808452611e40816020860160208601611dfc565b601f01601f19169290920160200192915050565b60208152600061131a6020830184611e28565b60018060a01b038151168252602081015160208301526001600160801b03604082015116604083015260ff606082015116606083015260ff608082015116608083015260a081015160a083015260c081015160c08301525050565b60e081016107398284611e67565b80356001600160a01b0381168114611ee757600080fd5b919050565b60008060408385031215611eff57600080fd5b611f0883611ed0565b946020939093013593505050565b600080600060608486031215611f2b57600080fd5b611f3484611ed0565b9250611f4260208501611ed0565b9150604084013590509250925092565b803560ff81168114611ee757600080fd5b60008060408385031215611f7657600080fd5b611f7f83611ed0565b9150611f8d60208401611f52565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611fd857611fc5838551611e67565b9284019260e09290920191600101611fb2565b50909695505050505050565b600060208284031215611ff657600080fd5b61131a82611ed0565b6000806040838503121561201257600080fd5b61201b83611ed0565b91506020830135801515811461203057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561206757600080fd5b61207085611ed0565b935061207e60208601611ed0565b925060408501359150606085013567ffffffffffffffff808211156120a257600080fd5b818701915087601f8301126120b657600080fd5b8135818111156120c8576120c861203b565b604051601f8201601f19908116603f011681019083821181831017156120f0576120f061203b565b816040528281528a602084870101111561210957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60006020828403121561213f57600080fd5b61131a82611f52565b6000806040838503121561215b57600080fd5b61216483611ed0565b9150611f8d60208401611ed0565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c908216806121bb57607f821691505b602082108114156121dc57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526003908201526215125160ea1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561229657612296612266565b500290565b600082198211156122ae576122ae612266565b500190565b600060ff821660ff8114156122ca576122ca612266565b60010192915050565b600083516122e5818460208801611dfc565b8351908301906122f9818360208801611dfc565b01949350505050565b60008282101561231457612314612266565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261233e5761233e612319565b500690565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006000198214156123a9576123a9612266565b5060010190565b6000826123bf576123bf612319565b500490565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906123f790830184611e28565b9695505050505050565b60006020828403121561241357600080fd5b815161131a81611db056fea2646970667358221220f412585046d49fbed2d22a61b02de1b4e9aee8db74d01e89d3f5c943aa287e4c64736f6c634300080b0033";

type ZEROKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZEROKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZEROKeys__factory extends ContractFactory {
  constructor(...args: ZEROKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZEROKeys> {
    return super.deploy(
      _baseTokenURI,
      _price,
      overrides || {}
    ) as Promise<ZEROKeys>;
  }
  override getDeployTransaction(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseTokenURI, _price, overrides || {});
  }
  override attach(address: string): ZEROKeys {
    return super.attach(address) as ZEROKeys;
  }
  override connect(signer: Signer): ZEROKeys__factory {
    return super.connect(signer) as ZEROKeys__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZEROKeysInterface {
    return new utils.Interface(_abi) as ZEROKeysInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZEROKeys {
    return new Contract(address, _abi, signerOrProvider) as ZEROKeys;
  }
}
