/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GMKeys,
  GMKeysInterface,
} from "../../../contracts/gmkeys.sol/GMKeys";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCount",
        type: "uint256",
      },
    ],
    name: "MintKeys",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address",
        name: "currentAddress",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "currentUnit",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burnKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "seed",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "epoch",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "epochType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintedKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneAddress",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currentAddress",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "currentUnit",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct GMKeys.AddressStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "seed",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "epoch",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "epochType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneTicket",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "mintKeys",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "seed",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "epoch",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "epochType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalKeys",
        type: "uint256",
      },
    ],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526175306009556000600a819055600b55600c805460ff191690553480156200002b57600080fd5b5060405162002c1b38038062002c1b8339810160408190526200004e9162000216565b604080518082018252601681527f474d4b6579732062792066756e44414f6d656e74616c00000000000000000000602080830191825283518085019094526006845265474d4b45595360d01b908401528151919291620000b1916000916200015a565b508051620000c79060019060208401906200015a565b505050620000e4620000de6200010460201b60201c565b62000108565b8151620000f99060079060208501906200015a565b506008555062000338565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200016890620002fb565b90600052602060002090601f0160209004810192826200018c5760008555620001d7565b82601f10620001a757805160ff1916838001178555620001d7565b82800160010185558215620001d7579182015b82811115620001d7578251825591602001919060010190620001ba565b50620001e5929150620001e9565b5090565b5b80821115620001e55760008155600101620001ea565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200022a57600080fd5b82516001600160401b03808211156200024257600080fd5b818501915085601f8301126200025757600080fd5b8151818111156200026c576200026c62000200565b604051601f8201601f19908116603f0116810190838211818310171562000297576200029762000200565b81604052828152602093508884848701011115620002b457600080fd5b600091505b82821015620002d85784820184015181830185015290830190620002b9565b82821115620002ea5760008484830101525b969092015195979596505050505050565b600181811c908216806200031057607f821691505b602082108114156200033257634e487b7160e01b600052602260045260246000fd5b50919050565b6128d380620003486000396000f3fe6080604052600436106102045760003560e01c8063692f1d1211610118578063a22cb465116100a0578063bdfe7d471161006f578063bdfe7d4714610636578063c87b56dd146106c5578063e08c7082146106e5578063e985e9c514610705578063f2fde38b1461072557600080fd5b8063a22cb465146105a1578063b8046b1c146105c1578063b88d4fde146105d6578063bbdaea6b146105f657600080fd5b8063715018a6116100e7578063715018a61461053157806382831721146105465780638da5cb5b1461055957806395d89b411461057757806398d5fdca1461058c57600080fd5b8063692f1d12146104915780636bd449aa146104a657806370a08231146104fc578063714c53981461051c57600080fd5b8063265aa6211161019b5780635c3e0da21161016a5780635c3e0da2146103fe5780635ff0c75b146104135780636352211e1461042f57806363ba31cf1461044f57806364d689881461047157600080fd5b8063265aa621146103465780633ccfd60b146103b657806342842e0e146103be57806342966c68146103de57600080fd5b806308e4c25f116101d757806308e4c25f146102ba578063095ea7b3146102e75780632294bf4d1461030757806323b872dd1461032657600080fd5b806301ffc9a71461020957806302a7e3a31461023e57806306fdde0314610260578063081812fc14610282575b600080fd5b34801561021557600080fd5b506102296102243660046120bb565b610745565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b5061025e6102593660046120d8565b610797565b005b34801561026c57600080fd5b506102756107e1565b6040516102359190612149565b34801561028e57600080fd5b506102a261029d3660046120d8565b610873565b6040516001600160a01b039091168152602001610235565b3480156102c657600080fd5b506102da6102d53660046120d8565b6108fb565b60405161023591906121b7565b3480156102f357600080fd5b5061025e6103023660046121e1565b6109f1565b34801561031357600080fd5b50600b545b604051908152602001610235565b34801561033257600080fd5b5061025e61034136600461220b565b610b07565b34801561035257600080fd5b506103666103613660046120d8565b610b39565b604080516001600160a01b03909816885260208801969096526001600160801b039094169486019490945260ff918216606086015216608084015260a083019190915260c082015260e001610235565b61025e610ba3565b3480156103ca57600080fd5b5061025e6103d936600461220b565b610c00565b3480156103ea57600080fd5b5061025e6103f93660046120d8565b610c1b565b34801561040a57600080fd5b5061025e610c95565b34801561041f57600080fd5b50610229600c5460ff1660011490565b34801561043b57600080fd5b506102a261044a3660046120d8565b610ccb565b34801561045b57600080fd5b50610464610d42565b6040516102359190612247565b34801561047d57600080fd5b5061025e61048c3660046120d8565b610e00565b34801561049d57600080fd5b50610318610eb7565b3480156104b257600080fd5b506104c66104c1366004612341565b610ec7565b6040805182516001600160a01b031681526020808401516001600160801b03169082015291810151151590820152606001610235565b34801561050857600080fd5b50610318610517366004612376565b610f41565b34801561052857600080fd5b50610275610fc8565b34801561053d57600080fd5b5061025e610fd7565b61025e6105543660046123a0565b61100d565b34801561056557600080fd5b506006546001600160a01b03166102a2565b34801561058357600080fd5b5061027561142c565b34801561059857600080fd5b50600854610318565b3480156105ad57600080fd5b5061025e6105bc366004612411565b61143b565b3480156105cd57600080fd5b50600a54610318565b3480156105e257600080fd5b5061025e6105f136600461244d565b611446565b34801561060257600080fd5b506106166106113660046124c9565b61147e565b6040805160ff948516815293909216602084015290820152606001610235565b34801561064257600080fd5b50610696610651366004612341565b8051602081830181018051600d82529282019190930120915280546001909101546001600160a01b03909116906001600160801b03811690600160801b900460ff1683565b604080516001600160a01b0390941684526001600160801b039092166020840152151590820152606001610235565b3480156106d157600080fd5b506102756106e03660046120d8565b611505565b3480156106f157600080fd5b5061025e61070036600461220b565b6115d0565b34801561071157600080fd5b50610229610720366004612517565b61164f565b34801561073157600080fd5b5061025e610740366004612376565b61167d565b60006001600160e01b031982166380ac58cd60e01b148061077657506001600160e01b03198216635b5e139f60e01b145b8061079157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6006546001600160a01b031633146107ca5760405162461bcd60e51b81526004016107c19061254a565b60405180910390fd5b600c805460ff19166001179055600a556000600b55565b6060600080546107f09061257f565b80601f016020809104026020016040519081016040528092919081815260200182805461081c9061257f565b80156108695780601f1061083e57610100808354040283529160200191610869565b820191906000526020600020905b81548152906001019060200180831161084c57829003601f168201915b5050505050905090565b600061087e82611715565b6108df5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107c1565b506000908152600460205260409020546001600160a01b031690565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915261093d82611715565b6109595760405162461bcd60e51b81526004016107c1906125ba565b600f828154811061096c5761096c6125d7565b60009182526020918290206040805160e081018252600590930290910180546001600160a01b0316835260018101549383019390935260028301546001600160801b0381169183019190915260ff600160801b820481166060840152600160881b909104166080820152600382015460a082015260049091015460c082015292915050565b60006109fc82610ccb565b9050806001600160a01b0316836001600160a01b03161415610a6a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016107c1565b336001600160a01b0382161480610a865750610a86813361164f565b610af85760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016107c1565b610b028383611732565b505050565b610b12335b826117a0565b610b2e5760405162461bcd60e51b81526004016107c1906125ed565b610b0283838361186a565b600f8181548110610b4957600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b03909316945090926001600160801b0382169260ff600160801b8404811693600160881b900416919087565b6006546001600160a01b03163314610bcd5760405162461bcd60e51b81526004016107c19061254a565b6040514790339082156108fc029083906000818181858888f19350505050158015610bfc573d6000803e3d6000fd5b5050565b610b0283838360405180602001604052806000815250611446565b610c2433610b0c565b610c895760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016107c1565b610c9281611a06565b50565b6006546001600160a01b03163314610cbf5760405162461bcd60e51b81526004016107c19061254a565b600c805460ff19169055565b6000818152600260205260408120546001600160a01b0316806107915760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016107c1565b6060600f805480602002602001604051908101604052809291908181526020016000905b82821015610df75760008481526020908190206040805160e0810182526005860290920180546001600160a01b031683526001808201548486015260028201546001600160801b0381169385019390935260ff600160801b840481166060860152600160881b9093049092166080840152600381015460a08401526004015460c08301529083529092019101610d66565b50505050905090565b6006546001600160a01b03163314610e2a5760405162461bcd60e51b81526004016107c19061254a565b610e3381611715565b610e4f5760405162461bcd60e51b81526004016107c1906125ba565b600f8181548110610e6257610e626125d7565b60009182526020822060059091020180546001600160a01b03191681556001810182905560028101805471ffffffffffffffffffffffffffffffffffff191690556003810182905560040155610c9281611a06565b6000610ec2600e5490565b905090565b60408051606081018252600080825260208201819052818301529051600d90610ef190849061263e565b908152604080516020928190038301812060608201835280546001600160a01b03168252600101546001600160801b03811693820193909352600160801b90920460ff1615159082015292915050565b60006001600160a01b038216610fac5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016107c1565b506001600160a01b031660009081526003602052604090205490565b6060600780546107f09061257f565b6006546001600160a01b031633146110015760405162461bcd60e51b81526004016107c19061254a565b61100b6000611aa1565b565b600c5460ff166001146110485760405162461bcd60e51b81526020600482015260036024820152624d505360e81b60448201526064016107c1565b8060ff166008546110599190612670565b34101561108e5760405162461bcd60e51b81526020600482015260036024820152624e454360e81b60448201526064016107c1565b8060ff1661109b600e5490565b6110a5919061268f565b60095410156110dc5760405162461bcd60e51b815260206004820152600360248201526226a9a960e91b60448201526064016107c1565b60008060006110eb858761147e565b91945092509050600160ff8316101561112c5760405162461bcd60e51b8152602060048201526003602482015262272ca960e91b60448201526064016107c1565b6000600d8760405161113e919061263e565b908152604051908190036020019020600181015490915060ff600160801b909104161561120e5760018101546111819060ff8716906001600160801b03166126a7565b6001600160801b03168360ff1610156111c25760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b60448201526064016107c1565b60018101805460ff871691906000906111e59084906001600160801b03166126a7565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611255565b8460ff168360ff16101561124a5760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b60448201526064016107c1565b611255888887611af3565b60015b8560ff168160ff16116113c3576000611282611273600e5490565b61127d908661268f565b611bbb565b9050600f6040518060e001604052808c6001600160a01b031681526020016112a9600e5490565b8152602001836001600160801b031681526020018860ff1681526020016112d0848a611bf1565b60ff9081168252602080830189905242604093840152845460018181018755600096875295829020855160059092020180546001600160a01b039092166001600160a01b0319909216919091178155908401519481019490945590820151600284018054606085015160808601518516600160881b0260ff60881b1991909516600160801b026001600160881b03199092166001600160801b0390941693909317179190911691909117905560a0810151600383015560c001516004909101556113a28a61139d600e5490565b611c27565b6113b0600e80546001019055565b50806113bb816126d2565b915050611258565b8560ff16600b546113d4919061268f565b600b8190556040805160ff8916815260208101929092526001600160a01b038b16917f3cd3543ca4496d4ff557ba17c2e827932e1cc93e7069aadc76c1cb14ccf0a94d910160405180910390a2505050505050505050565b6060600180546107f09061257f565b610bfc338383611c41565b61145033836117a0565b61146c5760405162461bcd60e51b81526004016107c1906125ed565b61147884848484611d10565b50505050565b600080600080600080876001600160a01b031663037bee48886040518263ffffffff1660e01b81526004016114b39190612149565b606060405180830381865afa1580156114d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f491906126f2565b919750955093505050509250925092565b606061151082611715565b6115745760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016107c1565b600061157e610fc8565b9050600081511161159e57604051806020016040528060008152506115c9565b806115a884611d43565b6040516020016115b9929190612735565b6040516020818303038152906040525b9392505050565b6115d981611715565b6115f55760405162461bcd60e51b81526004016107c1906125ba565b6115fe81610ccb565b6001600160a01b0316836001600160a01b0316146116445760405162461bcd60e51b815260206004820152600360248201526249474f60e81b60448201526064016107c1565b610b02838383610b07565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6006546001600160a01b031633146116a75760405162461bcd60e51b81526004016107c19061254a565b6001600160a01b03811661170c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107c1565b610c9281611aa1565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061176782610ccb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006117ab82611715565b61180c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107c1565b600061181783610ccb565b9050806001600160a01b0316846001600160a01b031614806118525750836001600160a01b031661184784610873565b6001600160a01b0316145b806118625750611862818561164f565b949350505050565b826001600160a01b031661187d82610ccb565b6001600160a01b0316146118e15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016107c1565b6001600160a01b0382166119435760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016107c1565b61194e600082611732565b6001600160a01b038316600090815260036020526040812080546001929061197790849061275b565b90915550506001600160a01b03821660009081526003602052604081208054600192906119a590849061268f565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611a1182610ccb565b9050611a1e600083611732565b6001600160a01b0381166000908152600360205260408120805460019290611a4790849061275b565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600d82604051611b03919061263e565b9081526040519081900360200190206001015460ff600160801b9091041615611b545760405162461bcd60e51b815260206004820152600360248201526241414560e81b60448201526064016107c1565b6000600d83604051611b66919061263e565b90815260405190819003602001902080546001600160a01b039095166001600160a01b031990951694909417845550600190920180546001600160881b03191660ff90931692909217600160801b1790915550565b6040805160208082018490528251808303820181529183019092528051910120600090662386f26fc10000906118628282612788565b600080611bff600a8561279c565b611c0a9060016126a7565b905060078160ff1611611c1e579050610791565b82915050610791565b610bfc828260405180602001604052806000815250611e41565b816001600160a01b0316836001600160a01b03161415611ca35760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016107c1565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611d1b84848461186a565b611d2784848484611e74565b6114785760405162461bcd60e51b81526004016107c1906127c2565b606081611d675750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611d915780611d7b81612814565b9150611d8a9050600a8361282f565b9150611d6b565b60008167ffffffffffffffff811115611dac57611dac612295565b6040519080825280601f01601f191660200182016040528015611dd6576020820181803683370190505b5090505b841561186257611deb60018361275b565b9150611df8600a86612788565b611e0390603061268f565b60f81b818381518110611e1857611e186125d7565b60200101906001600160f81b031916908160001a905350611e3a600a8661282f565b9450611dda565b611e4b8383611f72565b611e586000848484611e74565b610b025760405162461bcd60e51b81526004016107c1906127c2565b60006001600160a01b0384163b15611f6757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611eb8903390899088908890600401612843565b6020604051808303816000875af1925050508015611ef3575060408051601f3d908101601f19168201909252611ef091810190612880565b60015b611f4d573d808015611f21576040519150601f19603f3d011682016040523d82523d6000602084013e611f26565b606091505b508051611f455760405162461bcd60e51b81526004016107c1906127c2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611862565b506001949350505050565b6001600160a01b038216611fc85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107c1565b611fd181611715565b1561201e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107c1565b6001600160a01b038216600090815260036020526040812080546001929061204790849061268f565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610c9257600080fd5b6000602082840312156120cd57600080fd5b81356115c9816120a5565b6000602082840312156120ea57600080fd5b5035919050565b60005b8381101561210c5781810151838201526020016120f4565b838111156114785750506000910152565b600081518084526121358160208601602086016120f1565b601f01601f19169290920160200192915050565b6020815260006115c9602083018461211d565b60018060a01b038151168252602081015160208301526001600160801b03604082015116604083015260ff606082015116606083015260ff608082015116608083015260a081015160a083015260c081015160c08301525050565b60e08101610791828461215c565b80356001600160a01b03811681146121dc57600080fd5b919050565b600080604083850312156121f457600080fd5b6121fd836121c5565b946020939093013593505050565b60008060006060848603121561222057600080fd5b612229846121c5565b9250612237602085016121c5565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b818110156122895761227683855161215c565b9284019260e09290920191600101612263565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156122c6576122c6612295565b604051601f8501601f19908116603f011681019082821181831017156122ee576122ee612295565b8160405280935085815286868601111561230757600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261233257600080fd5b6115c9838335602085016122ab565b60006020828403121561235357600080fd5b813567ffffffffffffffff81111561236a57600080fd5b61186284828501612321565b60006020828403121561238857600080fd5b6115c9826121c5565b60ff81168114610c9257600080fd5b600080600080608085870312156123b657600080fd5b6123bf856121c5565b9350602085013567ffffffffffffffff8111156123db57600080fd5b6123e787828801612321565b9350506123f6604086016121c5565b9150606085013561240681612391565b939692955090935050565b6000806040838503121561242457600080fd5b61242d836121c5565b91506020830135801515811461244257600080fd5b809150509250929050565b6000806000806080858703121561246357600080fd5b61246c856121c5565b935061247a602086016121c5565b925060408501359150606085013567ffffffffffffffff81111561249d57600080fd5b8501601f810187136124ae57600080fd5b6124bd878235602084016122ab565b91505092959194509250565b600080604083850312156124dc57600080fd5b6124e5836121c5565b9150602083013567ffffffffffffffff81111561250157600080fd5b61250d85828601612321565b9150509250929050565b6000806040838503121561252a57600080fd5b612533836121c5565b9150612541602084016121c5565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061259357607f821691505b602082108114156125b457634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526003908201526215125160ea1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082516126508184602087016120f1565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561268a5761268a61265a565b500290565b600082198211156126a2576126a261265a565b500190565b60006001600160801b038083168185168083038211156126c9576126c961265a565b01949350505050565b600060ff821660ff8114156126e9576126e961265a565b60010192915050565b60008060006060848603121561270757600080fd5b835161271281612391565b602085015190935061272381612391565b80925050604084015190509250925092565b600083516127478184602088016120f1565b8351908301906126c98183602088016120f1565b60008282101561276d5761276d61265a565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261279757612797612772565b500690565b60006001600160801b03808416806127b6576127b6612772565b92169190910692915050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006000198214156128285761282861265a565b5060010190565b60008261283e5761283e612772565b500490565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906128769083018461211d565b9695505050505050565b60006020828403121561289257600080fd5b81516115c9816120a556fea26469706673582212202fa568e2067adbde0c4ad0c7f6e7a79c94f0315a546339f262a1593eff9b387a64736f6c634300080b0033";

type GMKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GMKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GMKeys__factory extends ContractFactory {
  constructor(...args: GMKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GMKeys> {
    return super.deploy(
      _baseTokenURI,
      _price,
      overrides || {}
    ) as Promise<GMKeys>;
  }
  override getDeployTransaction(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseTokenURI, _price, overrides || {});
  }
  override attach(address: string): GMKeys {
    return super.attach(address) as GMKeys;
  }
  override connect(signer: Signer): GMKeys__factory {
    return super.connect(signer) as GMKeys__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GMKeysInterface {
    return new utils.Interface(_abi) as GMKeysInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GMKeys {
    return new Contract(address, _abi, signerOrProvider) as GMKeys;
  }
}
