/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GMKeys,
  GMKeysInterface,
} from "../../../contracts/gmkeys.sol/GMKeys";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "MintKeys",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "TransferKeys",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address",
        name: "currentAddress",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "currentUnit",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burnKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "seed",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "epoch",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "epochType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEthBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintedKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneAddress",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currentAddress",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "currentUnit",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct GMKeys.AddressStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "seed",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "epoch",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "epochType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneTicket",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "mintKeys",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPhase",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "mintTestKeys",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintedKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "seed",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "epoch",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "epochType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalKeys",
        type: "uint256",
      },
    ],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "updateMintedKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEthBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526006805460ff60a01b1916905560006007819055617530600a55600b553480156200002e57600080fd5b506040516200320d3803806200320d833981016040819052620000519162000219565b604080518082018252601681527f474d4b6579732062792066756e44414f6d656e74616c00000000000000000000602080830191825283518085019094526006845265474d4b45595360d01b908401528151919291620000b4916000916200015d565b508051620000ca9060019060208401906200015d565b505050620000e7620000e16200010760201b60201c565b6200010b565b8151620000fc9060089060208501906200015d565b50600955506200033b565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200016b90620002fe565b90600052602060002090601f0160209004810192826200018f5760008555620001da565b82601f10620001aa57805160ff1916838001178555620001da565b82800160010185558215620001da579182015b82811115620001da578251825591602001919060010190620001bd565b50620001e8929150620001ec565b5090565b5b80821115620001e85760008155600101620001ed565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200022d57600080fd5b82516001600160401b03808211156200024557600080fd5b818501915085601f8301126200025a57600080fd5b8151818111156200026f576200026f62000203565b604051601f8201601f19908116603f011681019083821181831017156200029a576200029a62000203565b81604052828152602093508884848701011115620002b757600080fd5b600091505b82821015620002db5784820184015181830185015290830190620002bc565b82821115620002ed5760008484830101525b969092015195979596505050505050565b600181811c908216806200031357607f821691505b602082108114156200033557634e487b7160e01b600052602260045260246000fd5b50919050565b612ec2806200034b6000396000f3fe6080604052600436106102515760003560e01c806370a0823111610139578063b8046b1c116100b6578063ca0f9b311161007a578063ca0f9b31146107b6578063df0270e1146107d6578063e08c7082146107e9578063e8ddf15a14610809578063e985e9c514610811578063f2fde38b1461083157600080fd5b8063b8046b1c14610692578063b88d4fde146106a7578063bbdaea6b146106c7578063bdfe7d4714610707578063c87b56dd1461079657600080fd5b80638da5cb5b116100fd5780638da5cb5b1461061557806395d89b411461063357806398d5fdca146106485780639a65ea261461065d578063a22cb4651461067257600080fd5b806370a08231146105a557806370ed0ada146105c5578063714c5398146105d8578063715018a6146105ed578063828317211461060257600080fd5b806330b5abdc116101d25780635ff0c75b116101965780635ff0c75b146104b65780636352211e146104d857806363ba31cf146104f857806364d689881461051a578063692f1d121461053a5780636bd449aa1461054f57600080fd5b806330b5abdc146104365780633e3e0b121461044c57806342842e0e1461046157806342966c68146104815780635c3e0da2146104a157600080fd5b8063095ea7b311610219578063095ea7b31461033457806317881cbf146103545780632294bf4d1461038757806323b872dd146103a6578063265aa621146103c657600080fd5b806301ffc9a71461025657806302a7e3a31461028b57806306fdde03146102ad578063081812fc146102cf57806308e4c25f14610307575b600080fd5b34801561026257600080fd5b5061027661027136600461264c565b610851565b60405190151581526020015b60405180910390f35b34801561029757600080fd5b506102ab6102a6366004612669565b6108a3565b005b3480156102b957600080fd5b506102c26108e3565b60405161028291906126da565b3480156102db57600080fd5b506102ef6102ea366004612669565b610975565b6040516001600160a01b039091168152602001610282565b34801561031357600080fd5b50610327610322366004612669565b6109fd565b6040516102829190612748565b34801561034057600080fd5b506102ab61034f366004612772565b610af3565b34801561036057600080fd5b5060065461037590600160a01b900460ff1681565b60405160ff9091168152602001610282565b34801561039357600080fd5b506007545b604051908152602001610282565b3480156103b257600080fd5b506102ab6103c136600461279c565b610c09565b3480156103d257600080fd5b506103e66103e1366004612669565b610c3b565b604080516001600160a01b03909816885260208801969096526001600160801b039094169486019490945260ff918216606086015216608084015260a083019190915260c082015260e001610282565b34801561044257600080fd5b5061039860075481565b34801561045857600080fd5b506102ab610ca5565b34801561046d57600080fd5b506102ab61047c36600461279c565b610cde565b34801561048d57600080fd5b506102ab61049c366004612669565b610cf9565b3480156104ad57600080fd5b506102ab610d73565b3480156104c257600080fd5b50600654600160a01b900460ff16600114610276565b3480156104e457600080fd5b506102ef6104f3366004612669565b610da7565b34801561050457600080fd5b5061050d610e1e565b60405161028291906127d8565b34801561052657600080fd5b506102ab610535366004612669565b610edc565b34801561054657600080fd5b50610398610f93565b34801561055b57600080fd5b5061056f61056a3660046128d2565b610fa3565b6040805182516001600160a01b031681526020808401516001600160801b03169082015291810151151590820152606001610282565b3480156105b157600080fd5b506103986105c0366004612907565b61101d565b3480156105d157600080fd5b5047610398565b3480156105e457600080fd5b506102c26110a4565b3480156105f957600080fd5b506102ab6110b3565b6102ab610610366004612931565b6110e7565b34801561062157600080fd5b506006546001600160a01b03166102ef565b34801561063f57600080fd5b506102c26114cd565b34801561065457600080fd5b50600954610398565b34801561066957600080fd5b506102ab6114dc565b34801561067e57600080fd5b506102ab61068d3660046129a2565b611520565b34801561069e57600080fd5b50600b54610398565b3480156106b357600080fd5b506102ab6106c23660046129de565b61152f565b3480156106d357600080fd5b506106e76106e2366004612a5a565b611567565b6040805160ff948516815293909216602084015290820152606001610282565b34801561071357600080fd5b506107676107223660046128d2565b8051602081830181018051600c82529282019190930120915280546001909101546001600160a01b03909116906001600160801b03811690600160801b900460ff1683565b604080516001600160a01b0390941684526001600160801b039092166020840152151590820152606001610282565b3480156107a257600080fd5b506102c26107b1366004612669565b6115ee565b3480156107c257600080fd5b506102ab6107d1366004612aa8565b6116b9565b6102ab6107e4366004612931565b6116d0565b3480156107f557600080fd5b506102ab61080436600461279c565b611a58565b6102ab611b1f565b34801561081d57600080fd5b5061027661082c366004612ac5565b611b78565b34801561083d57600080fd5b506102ab61084c366004612907565b611ba6565b60006001600160e01b031982166380ac58cd60e01b148061088257506001600160e01b03198216635b5e139f60e01b145b8061089d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6006546001600160a01b031633146108d65760405162461bcd60e51b81526004016108cd90612af8565b60405180910390fd5b6108de6114dc565b600b55565b6060600080546108f290612b2d565b80601f016020809104026020016040519081016040528092919081815260200182805461091e90612b2d565b801561096b5780601f106109405761010080835404028352916020019161096b565b820191906000526020600020905b81548152906001019060200180831161094e57829003601f168201915b5050505050905090565b600061098082611c3e565b6109e15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016108cd565b506000908152600460205260409020546001600160a01b031690565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152610a3f82611c3e565b610a5b5760405162461bcd60e51b81526004016108cd90612b68565b600e8281548110610a6e57610a6e612b85565b60009182526020918290206040805160e081018252600590930290910180546001600160a01b0316835260018101549383019390935260028301546001600160801b0381169183019190915260ff600160801b820481166060840152600160881b909104166080820152600382015460a082015260049091015460c082015292915050565b6000610afe82610da7565b9050806001600160a01b0316836001600160a01b03161415610b6c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016108cd565b336001600160a01b0382161480610b885750610b888133611b78565b610bfa5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016108cd565b610c048383611c5b565b505050565b610c14335b82611cc9565b610c305760405162461bcd60e51b81526004016108cd90612b9b565b610c04838383611d93565b600e8181548110610c4b57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b03909316945090926001600160801b0382169260ff600160801b8404811693600160881b900416919087565b6006546001600160a01b03163314610ccf5760405162461bcd60e51b81526004016108cd90612af8565b6006805460ff60a01b19169055565b610c048383836040518060200160405280600081525061152f565b610d0233610c0e565b610d675760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016108cd565b610d7081611f2f565b50565b6006546001600160a01b03163314610d9d5760405162461bcd60e51b81526004016108cd90612af8565b610da5610ca5565b565b6000818152600260205260408120546001600160a01b03168061089d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016108cd565b6060600e805480602002602001604051908101604052809291908181526020016000905b82821015610ed35760008481526020908190206040805160e0810182526005860290920180546001600160a01b031683526001808201548486015260028201546001600160801b0381169385019390935260ff600160801b840481166060860152600160881b9093049092166080840152600381015460a08401526004015460c08301529083529092019101610e42565b50505050905090565b6006546001600160a01b03163314610f065760405162461bcd60e51b81526004016108cd90612af8565b610f0f81611c3e565b610f2b5760405162461bcd60e51b81526004016108cd90612b68565b600e8181548110610f3e57610f3e612b85565b60009182526020822060059091020180546001600160a01b03191681556001810182905560028101805471ffffffffffffffffffffffffffffffffffff191690556003810182905560040155610d7081611f2f565b6000610f9e600d5490565b905090565b60408051606081018252600080825260208201819052818301529051600c90610fcd908490612bec565b908152604080516020928190038301812060608201835280546001600160a01b03168252600101546001600160801b03811693820193909352600160801b90920460ff1615159082015292915050565b60006001600160a01b0382166110885760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016108cd565b506001600160a01b031660009081526003602052604090205490565b6060600880546108f290612b2d565b6006546001600160a01b031633146110dd5760405162461bcd60e51b81526004016108cd90612af8565b610da56000611fca565b600654600160a01b900460ff166001146111295760405162461bcd60e51b81526020600482015260036024820152624d505360e81b60448201526064016108cd565b8060ff1660095461113a9190612c1e565b34101561116f5760405162461bcd60e51b81526020600482015260036024820152624e454360e81b60448201526064016108cd565b8060ff1661117c600d5490565b6111869190612c3d565b600a5410156111bd5760405162461bcd60e51b815260206004820152600360248201526226a9a960e91b60448201526064016108cd565b60008060006111cc8587611567565b91945092509050600160ff8316101561120d5760405162461bcd60e51b8152602060048201526003602482015262272ca960e91b60448201526064016108cd565b6000600c8760405161121f9190612bec565b908152604051908190036020019020600181015490915060ff600160801b90910416156112d95760018101546112629060ff8716906001600160801b0316612c55565b6001600160801b03168360ff16101561128d5760405162461bcd60e51b81526004016108cd90612c80565b60018101805460ff871691906000906112b09084906001600160801b0316612c55565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061130a565b8460ff168360ff1610156112ff5760405162461bcd60e51b81526004016108cd90612c80565b61130a88888761201c565b60015b8560ff168160ff1611611478576000611337611328600d5490565b6113329086612c3d565b6120e4565b9050600e6040518060e001604052808c6001600160a01b0316815260200161135e600d5490565b8152602001836001600160801b031681526020018860ff168152602001611385848a61211a565b60ff9081168252602080830189905242604093840152845460018181018755600096875295829020855160059092020180546001600160a01b039092166001600160a01b0319909216919091178155908401519481019490945590820151600284018054606085015160808601518516600160881b0260ff60881b1991909516600160801b026001600160881b03199092166001600160801b0390941693909317179190911691909117905560a0810151600383015560c001516004909101556114578a611452600d5490565b612152565b611465600d80546001019055565b508061147081612c9d565b91505061130d565b611481866116b9565b60405160ff871681526001600160a01b038a16907ff4813ce11ec830392e00915869b84ecdd501fbc061e169aff8c99ef2163a1f529060200160405180910390a2505050505050505050565b6060600180546108f290612b2d565b6006546001600160a01b031633146115065760405162461bcd60e51b81526004016108cd90612af8565b6006805460ff60a01b1916600160a01b1790556000600755565b61152b33838361216c565b5050565b6115393383611cc9565b6115555760405162461bcd60e51b81526004016108cd90612b9b565b6115618484848461223b565b50505050565b600080600080600080876001600160a01b031663037bee48886040518263ffffffff1660e01b815260040161159c91906126da565b606060405180830381865afa1580156115b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115dd9190612cbd565b919750955093505050509250925092565b60606115f982611c3e565b61165d5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016108cd565b60006116676110a4565b9050600081511161168757604051806020016040528060008152506116b2565b806116918461226e565b6040516020016116a2929190612d00565b6040516020818303038152906040525b9392505050565b8060ff166007546116ca9190612c3d565b60075550565b600654600160a01b900460ff166001146117125760405162461bcd60e51b81526020600482015260036024820152624d505360e81b60448201526064016108cd565b8060ff166009546117239190612c1e565b3410156117585760405162461bcd60e51b81526020600482015260036024820152624e454360e81b60448201526064016108cd565b8060ff16611765600d5490565b61176f9190612c3d565b600a5410156117a65760405162461bcd60e51b815260206004820152600360248201526226a9a960e91b60448201526064016108cd565b6117d7826040518060400160405280600f81526020016e3c52414e444f4d204144445245535360881b81525061236c565b6040516001906005907f960c3fe88d950ed417a398d6746908458aa42f3d073723fd9675d36015b402ab90600090600c90611813908990612bec565b908152604051908190036020019020600181015490915060ff600160801b90910416156118cd5760018101546118569060ff8716906001600160801b0316612c55565b6001600160801b03168360ff1610156118815760405162461bcd60e51b81526004016108cd90612c80565b60018101805460ff871691906000906118a49084906001600160801b0316612c55565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506118fe565b8460ff168360ff1610156118f35760405162461bcd60e51b81526004016108cd90612c80565b6118fe88888761201c565b60015b8560ff168160ff161161147857600061191c611328600d5490565b9050600e6040518060e001604052808c6001600160a01b03168152602001611943600d5490565b8152602001836001600160801b031681526020018860ff16815260200161196a848a61211a565b60ff9081168252602080830189905242604093840152845460018181018755600096875295829020855160059092020180546001600160a01b039092166001600160a01b0319909216919091178155908401519481019490945590820151600284018054606085015160808601518516600160881b0260ff60881b1991909516600160801b026001600160881b03199092166001600160801b0390941693909317179190911691909117905560a0810151600383015560c00151600490910155611a378a611452600d5490565b611a45600d80546001019055565b5080611a5081612c9d565b915050611901565b611a6181611c3e565b611a7d5760405162461bcd60e51b81526004016108cd90612b68565b611a8681610da7565b6001600160a01b0316836001600160a01b031614611acc5760405162461bcd60e51b815260206004820152600360248201526249474f60e81b60448201526064016108cd565b611ad7838383610c09565b816001600160a01b03167f10c0903ec2066f2d17b6259882243b084e1ad4aaccd0be7f57df8b1b8b91eb0582604051611b1291815260200190565b60405180910390a2505050565b6006546001600160a01b03163314611b495760405162461bcd60e51b81526004016108cd90612af8565b6040514790339082156108fc029083906000818181858888f1935050505015801561152b573d6000803e3d6000fd5b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6006546001600160a01b03163314611bd05760405162461bcd60e51b81526004016108cd90612af8565b6001600160a01b038116611c355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108cd565b610d7081611fca565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611c9082610da7565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611cd482611c3e565b611d355760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016108cd565b6000611d4083610da7565b9050806001600160a01b0316846001600160a01b03161480611d7b5750836001600160a01b0316611d7084610975565b6001600160a01b0316145b80611d8b5750611d8b8185611b78565b949350505050565b826001600160a01b0316611da682610da7565b6001600160a01b031614611e0a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016108cd565b6001600160a01b038216611e6c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016108cd565b611e77600082611c5b565b6001600160a01b0383166000908152600360205260408120805460019290611ea0908490612d26565b90915550506001600160a01b0382166000908152600360205260408120805460019290611ece908490612c3d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611f3a82610da7565b9050611f47600083611c5b565b6001600160a01b0381166000908152600360205260408120805460019290611f70908490612d26565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600c8260405161202c9190612bec565b9081526040519081900360200190206001015460ff600160801b909104161561207d5760405162461bcd60e51b815260206004820152600360248201526241414560e81b60448201526064016108cd565b6000600c8360405161208f9190612bec565b90815260405190819003602001902080546001600160a01b039095166001600160a01b031990951694909417845550600190920180546001600160881b03191660ff90931692909217600160801b1790915550565b6040805160208082018490528251808303820181529183019092528051910120600090662386f26fc1000090611d8b8282612d53565b600080612128600a85612d67565b612133906001612c55565b90508260ff168160ff161161214957905061089d565b8291505061089d565b61152b8282604051806020016040528060008152506123b1565b816001600160a01b0316836001600160a01b031614156121ce5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016108cd565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612246848484611d93565b612252848484846123e4565b6115615760405162461bcd60e51b81526004016108cd90612d8d565b6060816122925750506040805180820190915260018152600360fc1b602082015290565b8160005b81156122bc57806122a681612ddf565b91506122b59050600a83612dfa565b9150612296565b60008167ffffffffffffffff8111156122d7576122d7612826565b6040519080825280601f01601f191660200182016040528015612301576020820181803683370190505b5090505b8415611d8b57612316600183612d26565b9150612323600a86612d53565b61232e906030612c3d565b60f81b81838151811061234357612343612b85565b60200101906001600160f81b031916908160001a905350612365600a86612dfa565b9450612305565b61152b8282604051602401612382929190612e0e565b60408051601f198184030181529190526020810180516001600160e01b031663759f86bb60e01b1790526124e2565b6123bb8383612503565b6123c860008484846123e4565b610c045760405162461bcd60e51b81526004016108cd90612d8d565b60006001600160a01b0384163b156124d757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612428903390899088908890600401612e32565b6020604051808303816000875af1925050508015612463575060408051601f3d908101601f1916820190925261246091810190612e6f565b60015b6124bd573d808015612491576040519150601f19603f3d011682016040523d82523d6000602084013e612496565b606091505b5080516124b55760405162461bcd60e51b81526004016108cd90612d8d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611d8b565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b0382166125595760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016108cd565b61256281611c3e565b156125af5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016108cd565b6001600160a01b03821660009081526003602052604081208054600192906125d8908490612c3d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610d7057600080fd5b60006020828403121561265e57600080fd5b81356116b281612636565b60006020828403121561267b57600080fd5b5035919050565b60005b8381101561269d578181015183820152602001612685565b838111156115615750506000910152565b600081518084526126c6816020860160208601612682565b601f01601f19169290920160200192915050565b6020815260006116b260208301846126ae565b60018060a01b038151168252602081015160208301526001600160801b03604082015116604083015260ff606082015116606083015260ff608082015116608083015260a081015160a083015260c081015160c08301525050565b60e0810161089d82846126ed565b80356001600160a01b038116811461276d57600080fd5b919050565b6000806040838503121561278557600080fd5b61278e83612756565b946020939093013593505050565b6000806000606084860312156127b157600080fd5b6127ba84612756565b92506127c860208501612756565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561281a576128078385516126ed565b9284019260e092909201916001016127f4565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561285757612857612826565b604051601f8501601f19908116603f0116810190828211818310171561287f5761287f612826565b8160405280935085815286868601111561289857600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126128c357600080fd5b6116b28383356020850161283c565b6000602082840312156128e457600080fd5b813567ffffffffffffffff8111156128fb57600080fd5b611d8b848285016128b2565b60006020828403121561291957600080fd5b6116b282612756565b60ff81168114610d7057600080fd5b6000806000806080858703121561294757600080fd5b61295085612756565b9350602085013567ffffffffffffffff81111561296c57600080fd5b612978878288016128b2565b93505061298760408601612756565b9150606085013561299781612922565b939692955090935050565b600080604083850312156129b557600080fd5b6129be83612756565b9150602083013580151581146129d357600080fd5b809150509250929050565b600080600080608085870312156129f457600080fd5b6129fd85612756565b9350612a0b60208601612756565b925060408501359150606085013567ffffffffffffffff811115612a2e57600080fd5b8501601f81018713612a3f57600080fd5b612a4e8782356020840161283c565b91505092959194509250565b60008060408385031215612a6d57600080fd5b612a7683612756565b9150602083013567ffffffffffffffff811115612a9257600080fd5b612a9e858286016128b2565b9150509250929050565b600060208284031215612aba57600080fd5b81356116b281612922565b60008060408385031215612ad857600080fd5b612ae183612756565b9150612aef60208401612756565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c90821680612b4157607f821691505b60208210811415612b6257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526003908201526215125160ea1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008251612bfe818460208701612682565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612c3857612c38612c08565b500290565b60008219821115612c5057612c50612c08565b500190565b60006001600160801b03808316818516808303821115612c7757612c77612c08565b01949350505050565b602080825260039082015262414d4d60e81b604082015260600190565b600060ff821660ff811415612cb457612cb4612c08565b60010192915050565b600080600060608486031215612cd257600080fd5b8351612cdd81612922565b6020850151909350612cee81612922565b80925050604084015190509250925092565b60008351612d12818460208801612682565b835190830190612c77818360208801612682565b600082821015612d3857612d38612c08565b500390565b634e487b7160e01b600052601260045260246000fd5b600082612d6257612d62612d3d565b500690565b60006001600160801b0380841680612d8157612d81612d3d565b92169190910692915050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415612df357612df3612c08565b5060010190565b600082612e0957612e09612d3d565b500490565b6001600160a01b0383168152604060208201819052600090611d8b908301846126ae565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612e65908301846126ae565b9695505050505050565b600060208284031215612e8157600080fd5b81516116b28161263656fea2646970667358221220f0950b2b506eb8839023e482eea9a2f6679847c996795aa6dc258559afbb471364736f6c634300080b0033";

type GMKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GMKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GMKeys__factory extends ContractFactory {
  constructor(...args: GMKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GMKeys> {
    return super.deploy(
      _baseTokenURI,
      _price,
      overrides || {}
    ) as Promise<GMKeys>;
  }
  override getDeployTransaction(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseTokenURI, _price, overrides || {});
  }
  override attach(address: string): GMKeys {
    return super.attach(address) as GMKeys;
  }
  override connect(signer: Signer): GMKeys__factory {
    return super.connect(signer) as GMKeys__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GMKeysInterface {
    return new utils.Interface(_abi) as GMKeysInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GMKeys {
    return new Contract(address, _abi, signerOrProvider) as GMKeys;
  }
}
