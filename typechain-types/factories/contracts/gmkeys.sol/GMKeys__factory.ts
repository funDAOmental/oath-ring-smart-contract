/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GMKeys,
  GMKeysInterface,
} from "../../../contracts/gmkeys.sol/GMKeys";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCount",
        type: "uint256",
      },
    ],
    name: "MintKeys",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address",
        name: "currentAddress",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "currentUnit",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burnKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "seed",
            type: "uint128",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintedKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneAddress",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currentAddress",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "currentUnit",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct GMKeys.AddressStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "seed",
            type: "uint128",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneTicket",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "mintKeys",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "seed",
        type: "uint128",
      },
      {
        internalType: "string",
        name: "epoch",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalKeys",
        type: "uint256",
      },
    ],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526127106009556000600a819055600b55600c805460ff191690553480156200002b57600080fd5b5060405162002ebf38038062002ebf8339810160408190526200004e9162000208565b604080518082018252600f81526e11d352d95e5cc8189e481391951e15608a1b602080830191825283518085019094526006845265474d4b45595360d01b908401528151919291620000a3916000916200014c565b508051620000b99060019060208401906200014c565b505050620000d6620000d0620000f660201b60201c565b620000fa565b8151620000eb9060079060208501906200014c565b50600855506200032a565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200015a90620002ed565b90600052602060002090601f0160209004810192826200017e5760008555620001c9565b82601f106200019957805160ff1916838001178555620001c9565b82800160010185558215620001c9579182015b82811115620001c9578251825591602001919060010190620001ac565b50620001d7929150620001db565b5090565b5b80821115620001d75760008155600101620001dc565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200021c57600080fd5b82516001600160401b03808211156200023457600080fd5b818501915085601f8301126200024957600080fd5b8151818111156200025e576200025e620001f2565b604051601f8201601f19908116603f01168101908382118183101715620002895762000289620001f2565b81604052828152602093508884848701011115620002a657600080fd5b600091505b82821015620002ca5784820184015181830185015290830190620002ab565b82821115620002dc5760008484830101525b969092015195979596505050505050565b600181811c908216806200030257607f821691505b602082108114156200032457634e487b7160e01b600052602260045260246000fd5b50919050565b612b85806200033a6000396000f3fe6080604052600436106102045760003560e01c8063692f1d1211610118578063a22cb465116100a0578063bdfe7d471161006f578063bdfe7d47146105e7578063c87b56dd14610676578063e08c708214610696578063e985e9c5146106b6578063f2fde38b146106ff57600080fd5b8063a22cb46514610563578063b8046b1c14610583578063b88d4fde14610598578063bbdaea6b146105b857600080fd5b8063715018a6116100e7578063715018a6146104f357806382831721146105085780638da5cb5b1461051b57806395d89b411461053957806398d5fdca1461054e57600080fd5b8063692f1d12146104535780636bd449aa1461046857806370a08231146104be578063714c5398146104de57600080fd5b8063265aa6211161019b5780635c3e0da21161016a5780635c3e0da2146103c05780635ff0c75b146103d55780636352211e146103f157806363ba31cf1461041157806364d689881461043357600080fd5b8063265aa621146103465780633ccfd60b1461037857806342842e0e1461038057806342966c68146103a057600080fd5b806308e4c25f116101d757806308e4c25f146102ba578063095ea7b3146102e75780632294bf4d1461030757806323b872dd1461032657600080fd5b806301ffc9a71461020957806302a7e3a31461023e57806306fdde0314610260578063081812fc14610282575b600080fd5b34801561021557600080fd5b50610229610224366004612289565b61071f565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b5061025e6102593660046122a6565b610771565b005b34801561026c57600080fd5b506102756107bb565b6040516102359190612317565b34801561028e57600080fd5b506102a261029d3660046122a6565b61084d565b6040516001600160a01b039091168152602001610235565b3480156102c657600080fd5b506102da6102d53660046122a6565b6108d5565b604051610235919061238e565b3480156102f357600080fd5b5061025e6103023660046123bd565b610a55565b34801561031357600080fd5b50600b545b604051908152602001610235565b34801561033257600080fd5b5061025e6103413660046123e7565b610b6b565b34801561035257600080fd5b506103666103613660046122a6565b610b9d565b60405161023596959493929190612423565b61025e610c85565b34801561038c57600080fd5b5061025e61039b3660046123e7565b610ce2565b3480156103ac57600080fd5b5061025e6103bb3660046122a6565b610cfd565b3480156103cc57600080fd5b5061025e610d77565b3480156103e157600080fd5b50610229600c5460ff1660011490565b3480156103fd57600080fd5b506102a261040c3660046122a6565b610dad565b34801561041d57600080fd5b50610426610e24565b604051610235919061246e565b34801561043f57600080fd5b5061025e61044e3660046122a6565b610f5d565b34801561045f57600080fd5b5061031861101c565b34801561047457600080fd5b5061048861048336600461259d565b61102c565b6040805182516001600160a01b031681526020808401516001600160801b03169082015291810151151590820152606001610235565b3480156104ca57600080fd5b506103186104d93660046125d2565b6110a6565b3480156104ea57600080fd5b5061027561112d565b3480156104ff57600080fd5b5061025e61113c565b61025e6105163660046125fc565b611172565b34801561052757600080fd5b506006546001600160a01b03166102a2565b34801561054557600080fd5b5061027561155c565b34801561055a57600080fd5b50600854610318565b34801561056f57600080fd5b5061025e61057e36600461266d565b61156b565b34801561058f57600080fd5b50600a54610318565b3480156105a457600080fd5b5061025e6105b33660046126a9565b611576565b3480156105c457600080fd5b506105d86105d3366004612725565b6115ae565b60405161023593929190612773565b3480156105f357600080fd5b5061064761060236600461259d565b8051602081830181018051600d82529282019190930120915280546001909101546001600160a01b03909116906001600160801b03811690600160801b900460ff1683565b604080516001600160a01b0390941684526001600160801b039092166020840152151590820152606001610235565b34801561068257600080fd5b506102756106913660046122a6565b61163a565b3480156106a257600080fd5b5061025e6106b13660046123e7565b611705565b3480156106c257600080fd5b506102296106d136600461279b565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561070b57600080fd5b5061025e61071a3660046125d2565b611784565b60006001600160e01b031982166380ac58cd60e01b148061075057506001600160e01b03198216635b5e139f60e01b145b8061076b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6006546001600160a01b031633146107a45760405162461bcd60e51b815260040161079b906127ce565b60405180910390fd5b600c805460ff19166001179055600a556000600b55565b6060600080546107ca90612803565b80601f01602080910402602001604051908101604052809291908181526020018280546107f690612803565b80156108435780601f1061081857610100808354040283529160200191610843565b820191906000526020600020905b81548152906001019060200180831161082657829003601f168201915b5050505050905090565b60006108588261181c565b6108b95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161079b565b506000908152600460205260409020546001600160a01b031690565b6109206040518060c0016040528060006001600160a01b031681526020016000815260200160006001600160801b031681526020016060815260200160008152602001600081525090565b6109298261181c565b6109455760405162461bcd60e51b815260040161079b9061283e565b600f82815481106109585761095861285b565b60009182526020918290206040805160c081018252600690930290910180546001600160a01b0316835260018101549383019390935260028301546001600160801b0316908201526003820180549192916060840191906109b890612803565b80601f01602080910402602001604051908101604052809291908181526020018280546109e490612803565b8015610a315780601f10610a0657610100808354040283529160200191610a31565b820191906000526020600020905b815481529060010190602001808311610a1457829003601f168201915b50505050508152602001600482015481526020016005820154815250509050919050565b6000610a6082610dad565b9050806001600160a01b0316836001600160a01b03161415610ace5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161079b565b336001600160a01b0382161480610aea5750610aea81336106d1565b610b5c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161079b565b610b668383611839565b505050565b610b76335b826118a7565b610b925760405162461bcd60e51b815260040161079b90612871565b610b66838383611991565b600f8181548110610bad57600080fd5b600091825260209091206006909102018054600182015460028301546003840180546001600160a01b03909416955091936001600160801b0390911692909190610bf690612803565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2290612803565b8015610c6f5780601f10610c4457610100808354040283529160200191610c6f565b820191906000526020600020905b815481529060010190602001808311610c5257829003601f168201915b5050505050908060040154908060050154905086565b6006546001600160a01b03163314610caf5760405162461bcd60e51b815260040161079b906127ce565b6040514790339082156108fc029083906000818181858888f19350505050158015610cde573d6000803e3d6000fd5b5050565b610b6683838360405180602001604052806000815250611576565b610d0633610b70565b610d6b5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b606482015260840161079b565b610d7481611b2d565b50565b6006546001600160a01b03163314610da15760405162461bcd60e51b815260040161079b906127ce565b600c805460ff19169055565b6000818152600260205260408120546001600160a01b03168061076b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161079b565b6060600f805480602002602001604051908101604052809291908181526020016000905b82821015610f545760008481526020908190206040805160c0810182526006860290920180546001600160a01b0316835260018101549383019390935260028301546001600160801b031690820152600382018054919291606084019190610eaf90612803565b80601f0160208091040260200160405190810160405280929190818152602001828054610edb90612803565b8015610f285780601f10610efd57610100808354040283529160200191610f28565b820191906000526020600020905b815481529060010190602001808311610f0b57829003601f168201915b505050505081526020016004820154815260200160058201548152505081526020019060010190610e48565b50505050905090565b6006546001600160a01b03163314610f875760405162461bcd60e51b815260040161079b906127ce565b610f908161181c565b610fac5760405162461bcd60e51b815260040161079b9061283e565b600f8181548110610fbf57610fbf61285b565b60009182526020822060069091020180546001600160a01b0319168155600181018290556002810180546001600160801b03191690559061100360038301826121a0565b50600060048201819055600590910155610d7481611b2d565b6000611027600e5490565b905090565b60408051606081018252600080825260208201819052818301529051600d906110569084906128c2565b908152604080516020928190038301812060608201835280546001600160a01b03168252600101546001600160801b03811693820193909352600160801b90920460ff1615159082015292915050565b60006001600160a01b0382166111115760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161079b565b506001600160a01b031660009081526003602052604090205490565b6060600780546107ca90612803565b6006546001600160a01b031633146111665760405162461bcd60e51b815260040161079b906127ce565b6111706000611bc8565b565b600c5460ff166001146111ad5760405162461bcd60e51b81526020600482015260036024820152624d505360e81b604482015260640161079b565b8060ff166008546111be91906128f4565b3410156111f35760405162461bcd60e51b81526020600482015260036024820152624e454360e81b604482015260640161079b565b8060ff16611200600e5490565b61120a9190612913565b60095410156112415760405162461bcd60e51b815260206004820152600360248201526226a9a960e91b604482015260640161079b565b606060008061125085876115ae565b91945092509050600160ff831610156112915760405162461bcd60e51b8152602060048201526003602482015262272ca960e91b604482015260640161079b565b6000600d876040516112a391906128c2565b908152604051908190036020019020600181015490915060ff600160801b90910416156113735760018101546112e69060ff8716906001600160801b031661292b565b6001600160801b03168360ff1610156113275760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b604482015260640161079b565b60018101805460ff8716919060009061134a9084906001600160801b031661292b565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506113ba565b8460ff168360ff1610156113af5760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b604482015260640161079b565b6113ba888887611c1a565b60015b8560ff168160ff16116114f357600f6040518060c001604052808b6001600160a01b031681526020016113ef600e5490565b81526020016113fd86611cec565b6001600160801b031681526020810188905260400161141f60ff851687612913565b815242602091820152825460018082018555600094855293829020835160069092020180546001600160a01b0319166001600160a01b03909216919091178155828201519381019390935560408201516002840180546001600160801b0319166001600160801b03909216919091179055606082015180519293926114aa92600385019201906121da565b506080820151816004015560a0820151816005015550506114d3896114ce600e5490565b611d22565b6114e1600e80546001019055565b806114eb81612956565b9150506113bd565b8560ff16600b546115049190612913565b600b8190556040805160ff8916815260208101929092526001600160a01b038b16917f3cd3543ca4496d4ff557ba17c2e827932e1cc93e7069aadc76c1cb14ccf0a94d910160405180910390a2505050505050505050565b6060600180546107ca90612803565b610cde338383611d3c565b61158033836118a7565b61159c5760405162461bcd60e51b815260040161079b90612871565b6115a884848484611e0b565b50505050565b60606000806060600080876001600160a01b031663037bee48886040518263ffffffff1660e01b81526004016115e49190612317565b600060405180830381865afa158015611601573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116299190810190612976565b919750955093505050509250925092565b60606116458261181c565b6116a95760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161079b565b60006116b361112d565b905060008151116116d357604051806020016040528060008152506116fe565b806116dd84611e3e565b6040516020016116ee929190612a0d565b6040516020818303038152906040525b9392505050565b61170e8161181c565b61172a5760405162461bcd60e51b815260040161079b9061283e565b61173381610dad565b6001600160a01b0316836001600160a01b0316146117795760405162461bcd60e51b815260206004820152600360248201526249474f60e81b604482015260640161079b565b610b66838383610ce2565b6006546001600160a01b031633146117ae5760405162461bcd60e51b815260040161079b906127ce565b6001600160a01b0381166118135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161079b565b610d7481611bc8565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061186e82610dad565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006118b28261181c565b6119135760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161079b565b600061191e83610dad565b9050806001600160a01b0316846001600160a01b031614806119595750836001600160a01b031661194e8461084d565b6001600160a01b0316145b8061198957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166119a482610dad565b6001600160a01b031614611a085760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161079b565b6001600160a01b038216611a6a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161079b565b611a75600082611839565b6001600160a01b0383166000908152600360205260408120805460019290611a9e908490612a33565b90915550506001600160a01b0382166000908152600360205260408120805460019290611acc908490612913565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611b3882610dad565b9050611b45600083611839565b6001600160a01b0381166000908152600360205260408120805460019290611b6e908490612a33565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600d82604051611c2a91906128c2565b9081526040519081900360200190206001015460ff600160801b9091041615611c7b5760405162461bcd60e51b815260206004820152600360248201526241414560e81b604482015260640161079b565b6000600d83604051611c8d91906128c2565b90815260405190819003602001902080546001600160a01b039095166001600160a01b0319909516949094178455506001909201805470ffffffffffffffffffffffffffffffffff191660ff90931692909217600160801b1790915550565b6040805160208082018490528251808303820181529183019092528051910120600090662386f26fc10000906119898282612a60565b610cde828260405180602001604052806000815250611f3c565b816001600160a01b0316836001600160a01b03161415611d9e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161079b565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611e16848484611991565b611e2284848484611f6f565b6115a85760405162461bcd60e51b815260040161079b90612a74565b606081611e625750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611e8c5780611e7681612ac6565b9150611e859050600a83612ae1565b9150611e66565b60008167ffffffffffffffff811115611ea757611ea76124d0565b6040519080825280601f01601f191660200182016040528015611ed1576020820181803683370190505b5090505b841561198957611ee6600183612a33565b9150611ef3600a86612a60565b611efe906030612913565b60f81b818381518110611f1357611f1361285b565b60200101906001600160f81b031916908160001a905350611f35600a86612ae1565b9450611ed5565b611f46838361206d565b611f536000848484611f6f565b610b665760405162461bcd60e51b815260040161079b90612a74565b60006001600160a01b0384163b1561206257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611fb3903390899088908890600401612af5565b6020604051808303816000875af1925050508015611fee575060408051601f3d908101601f19168201909252611feb91810190612b32565b60015b612048573d80801561201c576040519150601f19603f3d011682016040523d82523d6000602084013e612021565b606091505b5080516120405760405162461bcd60e51b815260040161079b90612a74565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611989565b506001949350505050565b6001600160a01b0382166120c35760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161079b565b6120cc8161181c565b156121195760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161079b565b6001600160a01b0382166000908152600360205260408120805460019290612142908490612913565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b5080546121ac90612803565b6000825580601f106121bc575050565b601f016020900490600052602060002090810190610d74919061225e565b8280546121e690612803565b90600052602060002090601f016020900481019282612208576000855561224e565b82601f1061222157805160ff191683800117855561224e565b8280016001018555821561224e579182015b8281111561224e578251825591602001919060010190612233565b5061225a92915061225e565b5090565b5b8082111561225a576000815560010161225f565b6001600160e01b031981168114610d7457600080fd5b60006020828403121561229b57600080fd5b81356116fe81612273565b6000602082840312156122b857600080fd5b5035919050565b60005b838110156122da5781810151838201526020016122c2565b838111156115a85750506000910152565b600081518084526123038160208601602086016122bf565b601f01601f19169290920160200192915050565b6020815260006116fe60208301846122eb565b60018060a01b038151168252602081015160208301526001600160801b0360408201511660408301526000606082015160c0606085015261236e60c08501826122eb565b90506080830151608085015260a083015160a08501528091505092915050565b6020815260006116fe602083018461232a565b80356001600160a01b03811681146123b857600080fd5b919050565b600080604083850312156123d057600080fd5b6123d9836123a1565b946020939093013593505050565b6000806000606084860312156123fc57600080fd5b612405846123a1565b9250612413602085016123a1565b9150604084013590509250925092565b60018060a01b03871681528560208201526001600160801b038516604082015260c06060820152600061245960c08301866122eb565b60808301949094525060a00152949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156124c357603f198886030184526124b185835161232a565b94509285019290850190600101612495565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561250f5761250f6124d0565b604052919050565b600067ffffffffffffffff821115612531576125316124d0565b50601f01601f191660200190565b600061255261254d84612517565b6124e6565b905082815283838301111561256657600080fd5b828260208301376000602084830101529392505050565b600082601f83011261258e57600080fd5b6116fe8383356020850161253f565b6000602082840312156125af57600080fd5b813567ffffffffffffffff8111156125c657600080fd5b6119898482850161257d565b6000602082840312156125e457600080fd5b6116fe826123a1565b60ff81168114610d7457600080fd5b6000806000806080858703121561261257600080fd5b61261b856123a1565b9350602085013567ffffffffffffffff81111561263757600080fd5b6126438782880161257d565b935050612652604086016123a1565b91506060850135612662816125ed565b939692955090935050565b6000806040838503121561268057600080fd5b612689836123a1565b91506020830135801515811461269e57600080fd5b809150509250929050565b600080600080608085870312156126bf57600080fd5b6126c8856123a1565b93506126d6602086016123a1565b925060408501359150606085013567ffffffffffffffff8111156126f957600080fd5b8501601f8101871361270a57600080fd5b6127198782356020840161253f565b91505092959194509250565b6000806040838503121561273857600080fd5b612741836123a1565b9150602083013567ffffffffffffffff81111561275d57600080fd5b6127698582860161257d565b9150509250929050565b60608152600061278660608301866122eb565b60ff9490941660208301525060400152919050565b600080604083850312156127ae57600080fd5b6127b7836123a1565b91506127c5602084016123a1565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061281757607f821691505b6020821081141561283857634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526003908201526215125160ea1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082516128d48184602087016122bf565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561290e5761290e6128de565b500290565b60008219821115612926576129266128de565b500190565b60006001600160801b0380831681851680830382111561294d5761294d6128de565b01949350505050565b600060ff821660ff81141561296d5761296d6128de565b60010192915050565b60008060006060848603121561298b57600080fd5b835167ffffffffffffffff8111156129a257600080fd5b8401601f810186136129b357600080fd5b80516129c161254d82612517565b8181528760208385010111156129d657600080fd5b6129e78260208301602086016122bf565b80955050505060208401516129fb816125ed565b80925050604084015190509250925092565b60008351612a1f8184602088016122bf565b83519083019061294d8183602088016122bf565b600082821015612a4557612a456128de565b500390565b634e487b7160e01b600052601260045260246000fd5b600082612a6f57612a6f612a4a565b500690565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415612ada57612ada6128de565b5060010190565b600082612af057612af0612a4a565b500490565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612b28908301846122eb565b9695505050505050565b600060208284031215612b4457600080fd5b81516116fe8161227356fea2646970667358221220523d44443bf8d21641baf87b60a38084ec613f6688511e356044733be4993c6264736f6c634300080b0033";

type GMKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GMKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GMKeys__factory extends ContractFactory {
  constructor(...args: GMKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GMKeys> {
    return super.deploy(
      _baseTokenURI,
      _price,
      overrides || {}
    ) as Promise<GMKeys>;
  }
  override getDeployTransaction(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseTokenURI, _price, overrides || {});
  }
  override attach(address: string): GMKeys {
    return super.attach(address) as GMKeys;
  }
  override connect(signer: Signer): GMKeys__factory {
    return super.connect(signer) as GMKeys__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GMKeysInterface {
    return new utils.Interface(_abi) as GMKeysInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GMKeys {
    return new Contract(address, _abi, signerOrProvider) as GMKeys;
  }
}
