/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GMKeys,
  GMKeysInterface,
} from "../../../contracts/gmkeys.sol/GMKeys";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "MintKeys",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "TransferKeys",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address",
        name: "currentAddress",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "currentUnit",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burnKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "seed",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "epoch",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "epochType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEthBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintedKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneAddress",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currentAddress",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "currentUnit",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct GMKeys.AddressStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "seed",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "epoch",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "epochType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneTicket",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "mintKeys",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPhase",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintedKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "seed",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "epoch",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "epochType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalKeys",
        type: "uint256",
      },
    ],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "updateMintedKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEthBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526006805460ff60a01b1916905560006007819055617530600a55600b553480156200002e57600080fd5b5060405162002dec38038062002dec833981016040819052620000519162000219565b604080518082018252601681527f474d4b6579732062792066756e44414f6d656e74616c00000000000000000000602080830191825283518085019094526006845265474d4b45595360d01b908401528151919291620000b4916000916200015d565b508051620000ca9060019060208401906200015d565b505050620000e7620000e16200010760201b60201c565b6200010b565b8151620000fc9060089060208501906200015d565b50600955506200033b565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200016b90620002fe565b90600052602060002090601f0160209004810192826200018f5760008555620001da565b82601f10620001aa57805160ff1916838001178555620001da565b82800160010185558215620001da579182015b82811115620001da578251825591602001919060010190620001bd565b50620001e8929150620001ec565b5090565b5b80821115620001e85760008155600101620001ed565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200022d57600080fd5b82516001600160401b03808211156200024557600080fd5b818501915085601f8301126200025a57600080fd5b8151818111156200026f576200026f62000203565b604051601f8201601f19908116603f011681019083821181831017156200029a576200029a62000203565b81604052828152602093508884848701011115620002b757600080fd5b600091505b82821015620002db5784820184015181830185015290830190620002bc565b82821115620002ed5760008484830101525b969092015195979596505050505050565b600181811c908216806200031357607f821691505b602082108114156200033557634e487b7160e01b600052602260045260246000fd5b50919050565b612aa1806200034b6000396000f3fe6080604052600436106102465760003560e01c80636bd449aa11610139578063a22cb465116100b6578063c87b56dd1161007a578063c87b56dd1461078b578063ca0f9b31146107ab578063e08c7082146107cb578063e8ddf15a146107eb578063e985e9c5146107f3578063f2fde38b1461081357600080fd5b8063a22cb46514610667578063b8046b1c14610687578063b88d4fde1461069c578063bbdaea6b146106bc578063bdfe7d47146106fc57600080fd5b806382831721116100fd57806382831721146105f75780638da5cb5b1461060a57806395d89b411461062857806398d5fdca1461063d5780639a65ea261461065257600080fd5b80636bd449aa1461054457806370a082311461059a57806370ed0ada146105ba578063714c5398146105cd578063715018a6146105e257600080fd5b806330b5abdc116101c75780635ff0c75b1161018b5780635ff0c75b146104ab5780636352211e146104cd57806363ba31cf146104ed57806364d689881461050f578063692f1d121461052f57600080fd5b806330b5abdc1461042b5780633e3e0b121461044157806342842e0e1461045657806342966c68146104765780635c3e0da21461049657600080fd5b8063095ea7b31161020e578063095ea7b31461032957806317881cbf146103495780632294bf4d1461037c57806323b872dd1461039b578063265aa621146103bb57600080fd5b806301ffc9a71461024b57806302a7e3a31461028057806306fdde03146102a2578063081812fc146102c457806308e4c25f146102fc575b600080fd5b34801561025757600080fd5b5061026b61026636600461226c565b610833565b60405190151581526020015b60405180910390f35b34801561028c57600080fd5b506102a061029b366004612289565b610885565b005b3480156102ae57600080fd5b506102b76108c5565b60405161027791906122fa565b3480156102d057600080fd5b506102e46102df366004612289565b610957565b6040516001600160a01b039091168152602001610277565b34801561030857600080fd5b5061031c610317366004612289565b6109df565b6040516102779190612368565b34801561033557600080fd5b506102a0610344366004612392565b610ad5565b34801561035557600080fd5b5060065461036a90600160a01b900460ff1681565b60405160ff9091168152602001610277565b34801561038857600080fd5b506007545b604051908152602001610277565b3480156103a757600080fd5b506102a06103b63660046123bc565b610beb565b3480156103c757600080fd5b506103db6103d6366004612289565b610c1d565b604080516001600160a01b03909816885260208801969096526001600160801b039094169486019490945260ff918216606086015216608084015260a083019190915260c082015260e001610277565b34801561043757600080fd5b5061038d60075481565b34801561044d57600080fd5b506102a0610c87565b34801561046257600080fd5b506102a06104713660046123bc565b610cc0565b34801561048257600080fd5b506102a0610491366004612289565b610cdb565b3480156104a257600080fd5b506102a0610d55565b3480156104b757600080fd5b50600654600160a01b900460ff1660011461026b565b3480156104d957600080fd5b506102e46104e8366004612289565b610d89565b3480156104f957600080fd5b50610502610e00565b60405161027791906123f8565b34801561051b57600080fd5b506102a061052a366004612289565b610ebe565b34801561053b57600080fd5b5061038d610f75565b34801561055057600080fd5b5061056461055f3660046124f2565b610f85565b6040805182516001600160a01b031681526020808401516001600160801b03169082015291810151151590820152606001610277565b3480156105a657600080fd5b5061038d6105b5366004612527565b610fff565b3480156105c657600080fd5b504761038d565b3480156105d957600080fd5b506102b7611086565b3480156105ee57600080fd5b506102a0611095565b6102a0610605366004612551565b6110c9565b34801561061657600080fd5b506006546001600160a01b03166102e4565b34801561063457600080fd5b506102b76114db565b34801561064957600080fd5b5060095461038d565b34801561065e57600080fd5b506102a06114ea565b34801561067357600080fd5b506102a06106823660046125c2565b61152e565b34801561069357600080fd5b50600b5461038d565b3480156106a857600080fd5b506102a06106b73660046125fe565b61153d565b3480156106c857600080fd5b506106dc6106d736600461267a565b611575565b6040805160ff948516815293909216602084015290820152606001610277565b34801561070857600080fd5b5061075c6107173660046124f2565b8051602081830181018051600c82529282019190930120915280546001909101546001600160a01b03909116906001600160801b03811690600160801b900460ff1683565b604080516001600160a01b0390941684526001600160801b039092166020840152151590820152606001610277565b34801561079757600080fd5b506102b76107a6366004612289565b6115fc565b3480156107b757600080fd5b506102a06107c63660046126c8565b6116c7565b3480156107d757600080fd5b506102a06107e63660046123bc565b6116de565b6102a06117a5565b3480156107ff57600080fd5b5061026b61080e3660046126e5565b6117fe565b34801561081f57600080fd5b506102a061082e366004612527565b61182c565b60006001600160e01b031982166380ac58cd60e01b148061086457506001600160e01b03198216635b5e139f60e01b145b8061087f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6006546001600160a01b031633146108b85760405162461bcd60e51b81526004016108af90612718565b60405180910390fd5b6108c06114ea565b600b55565b6060600080546108d49061274d565b80601f01602080910402602001604051908101604052809291908181526020018280546109009061274d565b801561094d5780601f106109225761010080835404028352916020019161094d565b820191906000526020600020905b81548152906001019060200180831161093057829003601f168201915b5050505050905090565b6000610962826118c4565b6109c35760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016108af565b506000908152600460205260409020546001600160a01b031690565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152610a21826118c4565b610a3d5760405162461bcd60e51b81526004016108af90612788565b600e8281548110610a5057610a506127a5565b60009182526020918290206040805160e081018252600590930290910180546001600160a01b0316835260018101549383019390935260028301546001600160801b0381169183019190915260ff600160801b820481166060840152600160881b909104166080820152600382015460a082015260049091015460c082015292915050565b6000610ae082610d89565b9050806001600160a01b0316836001600160a01b03161415610b4e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016108af565b336001600160a01b0382161480610b6a5750610b6a81336117fe565b610bdc5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016108af565b610be683836118e1565b505050565b610bf6335b8261194f565b610c125760405162461bcd60e51b81526004016108af906127bb565b610be6838383611a19565b600e8181548110610c2d57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b03909316945090926001600160801b0382169260ff600160801b8404811693600160881b900416919087565b6006546001600160a01b03163314610cb15760405162461bcd60e51b81526004016108af90612718565b6006805460ff60a01b19169055565b610be68383836040518060200160405280600081525061153d565b610ce433610bf0565b610d495760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016108af565b610d5281611bb5565b50565b6006546001600160a01b03163314610d7f5760405162461bcd60e51b81526004016108af90612718565b610d87610c87565b565b6000818152600260205260408120546001600160a01b03168061087f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016108af565b6060600e805480602002602001604051908101604052809291908181526020016000905b82821015610eb55760008481526020908190206040805160e0810182526005860290920180546001600160a01b031683526001808201548486015260028201546001600160801b0381169385019390935260ff600160801b840481166060860152600160881b9093049092166080840152600381015460a08401526004015460c08301529083529092019101610e24565b50505050905090565b6006546001600160a01b03163314610ee85760405162461bcd60e51b81526004016108af90612718565b610ef1816118c4565b610f0d5760405162461bcd60e51b81526004016108af90612788565b600e8181548110610f2057610f206127a5565b60009182526020822060059091020180546001600160a01b03191681556001810182905560028101805471ffffffffffffffffffffffffffffffffffff191690556003810182905560040155610d5281611bb5565b6000610f80600d5490565b905090565b60408051606081018252600080825260208201819052818301529051600c90610faf90849061280c565b908152604080516020928190038301812060608201835280546001600160a01b03168252600101546001600160801b03811693820193909352600160801b90920460ff1615159082015292915050565b60006001600160a01b03821661106a5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016108af565b506001600160a01b031660009081526003602052604090205490565b6060600880546108d49061274d565b6006546001600160a01b031633146110bf5760405162461bcd60e51b81526004016108af90612718565b610d876000611c50565b600654600160a01b900460ff1660011461110b5760405162461bcd60e51b81526020600482015260036024820152624d505360e81b60448201526064016108af565b8060ff1660095461111c919061283e565b3410156111515760405162461bcd60e51b81526020600482015260036024820152624e454360e81b60448201526064016108af565b8060ff1661115e600d5490565b611168919061285d565b600a54101561119f5760405162461bcd60e51b815260206004820152600360248201526226a9a960e91b60448201526064016108af565b60008060006111ae8587611575565b91945092509050600160ff831610156111ef5760405162461bcd60e51b8152602060048201526003602482015262272ca960e91b60448201526064016108af565b6000600c87604051611201919061280c565b908152604051908190036020019020600181015490915060ff600160801b90910416156112d15760018101546112449060ff8716906001600160801b0316612875565b6001600160801b03168360ff1610156112855760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b60448201526064016108af565b60018101805460ff871691906000906112a89084906001600160801b0316612875565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611318565b8460ff168360ff16101561130d5760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b60448201526064016108af565b611318888887611ca2565b60015b8560ff168160ff1611611486576000611345611336600d5490565b611340908661285d565b611d6a565b9050600e6040518060e001604052808c6001600160a01b0316815260200161136c600d5490565b8152602001836001600160801b031681526020018860ff168152602001611393848a611da0565b60ff9081168252602080830189905242604093840152845460018181018755600096875295829020855160059092020180546001600160a01b039092166001600160a01b0319909216919091178155908401519481019490945590820151600284018054606085015160808601518516600160881b0260ff60881b1991909516600160801b026001600160881b03199092166001600160801b0390941693909317179190911691909117905560a0810151600383015560c001516004909101556114658a611460600d5490565b611dd8565b611473600d80546001019055565b508061147e816128a0565b91505061131b565b61148f866116c7565b60405160ff871681526001600160a01b038a16907ff4813ce11ec830392e00915869b84ecdd501fbc061e169aff8c99ef2163a1f529060200160405180910390a2505050505050505050565b6060600180546108d49061274d565b6006546001600160a01b031633146115145760405162461bcd60e51b81526004016108af90612718565b6006805460ff60a01b1916600160a01b1790556000600755565b611539338383611df2565b5050565b611547338361194f565b6115635760405162461bcd60e51b81526004016108af906127bb565b61156f84848484611ec1565b50505050565b600080600080600080876001600160a01b031663037bee48886040518263ffffffff1660e01b81526004016115aa91906122fa565b606060405180830381865afa1580156115c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115eb91906128c0565b919750955093505050509250925092565b6060611607826118c4565b61166b5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016108af565b6000611675611086565b9050600081511161169557604051806020016040528060008152506116c0565b8061169f84611ef4565b6040516020016116b0929190612903565b6040516020818303038152906040525b9392505050565b8060ff166007546116d8919061285d565b60075550565b6116e7816118c4565b6117035760405162461bcd60e51b81526004016108af90612788565b61170c81610d89565b6001600160a01b0316836001600160a01b0316146117525760405162461bcd60e51b815260206004820152600360248201526249474f60e81b60448201526064016108af565b61175d838383610beb565b816001600160a01b03167f10c0903ec2066f2d17b6259882243b084e1ad4aaccd0be7f57df8b1b8b91eb058260405161179891815260200190565b60405180910390a2505050565b6006546001600160a01b031633146117cf5760405162461bcd60e51b81526004016108af90612718565b6040514790339082156108fc029083906000818181858888f19350505050158015611539573d6000803e3d6000fd5b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6006546001600160a01b031633146118565760405162461bcd60e51b81526004016108af90612718565b6001600160a01b0381166118bb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108af565b610d5281611c50565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061191682610d89565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061195a826118c4565b6119bb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016108af565b60006119c683610d89565b9050806001600160a01b0316846001600160a01b03161480611a015750836001600160a01b03166119f684610957565b6001600160a01b0316145b80611a115750611a1181856117fe565b949350505050565b826001600160a01b0316611a2c82610d89565b6001600160a01b031614611a905760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016108af565b6001600160a01b038216611af25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016108af565b611afd6000826118e1565b6001600160a01b0383166000908152600360205260408120805460019290611b26908490612929565b90915550506001600160a01b0382166000908152600360205260408120805460019290611b5490849061285d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611bc082610d89565b9050611bcd6000836118e1565b6001600160a01b0381166000908152600360205260408120805460019290611bf6908490612929565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600c82604051611cb2919061280c565b9081526040519081900360200190206001015460ff600160801b9091041615611d035760405162461bcd60e51b815260206004820152600360248201526241414560e81b60448201526064016108af565b6000600c83604051611d15919061280c565b90815260405190819003602001902080546001600160a01b039095166001600160a01b031990951694909417845550600190920180546001600160881b03191660ff90931692909217600160801b1790915550565b6040805160208082018490528251808303820181529183019092528051910120600090662386f26fc1000090611a118282612956565b600080611dae600a8561296a565b611db9906001612875565b90508260ff168160ff1611611dcf57905061087f565b8291505061087f565b611539828260405180602001604052806000815250611ff2565b816001600160a01b0316836001600160a01b03161415611e545760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016108af565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611ecc848484611a19565b611ed884848484612025565b61156f5760405162461bcd60e51b81526004016108af90612990565b606081611f185750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611f425780611f2c816129e2565b9150611f3b9050600a836129fd565b9150611f1c565b60008167ffffffffffffffff811115611f5d57611f5d612446565b6040519080825280601f01601f191660200182016040528015611f87576020820181803683370190505b5090505b8415611a1157611f9c600183612929565b9150611fa9600a86612956565b611fb490603061285d565b60f81b818381518110611fc957611fc96127a5565b60200101906001600160f81b031916908160001a905350611feb600a866129fd565b9450611f8b565b611ffc8383612123565b6120096000848484612025565b610be65760405162461bcd60e51b81526004016108af90612990565b60006001600160a01b0384163b1561211857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612069903390899088908890600401612a11565b6020604051808303816000875af19250505080156120a4575060408051601f3d908101601f191682019092526120a191810190612a4e565b60015b6120fe573d8080156120d2576040519150601f19603f3d011682016040523d82523d6000602084013e6120d7565b606091505b5080516120f65760405162461bcd60e51b81526004016108af90612990565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611a11565b506001949350505050565b6001600160a01b0382166121795760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016108af565b612182816118c4565b156121cf5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016108af565b6001600160a01b03821660009081526003602052604081208054600192906121f890849061285d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610d5257600080fd5b60006020828403121561227e57600080fd5b81356116c081612256565b60006020828403121561229b57600080fd5b5035919050565b60005b838110156122bd5781810151838201526020016122a5565b8381111561156f5750506000910152565b600081518084526122e68160208601602086016122a2565b601f01601f19169290920160200192915050565b6020815260006116c060208301846122ce565b60018060a01b038151168252602081015160208301526001600160801b03604082015116604083015260ff606082015116606083015260ff608082015116608083015260a081015160a083015260c081015160c08301525050565b60e0810161087f828461230d565b80356001600160a01b038116811461238d57600080fd5b919050565b600080604083850312156123a557600080fd5b6123ae83612376565b946020939093013593505050565b6000806000606084860312156123d157600080fd5b6123da84612376565b92506123e860208501612376565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561243a5761242783855161230d565b9284019260e09290920191600101612414565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561247757612477612446565b604051601f8501601f19908116603f0116810190828211818310171561249f5761249f612446565b816040528093508581528686860111156124b857600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126124e357600080fd5b6116c08383356020850161245c565b60006020828403121561250457600080fd5b813567ffffffffffffffff81111561251b57600080fd5b611a11848285016124d2565b60006020828403121561253957600080fd5b6116c082612376565b60ff81168114610d5257600080fd5b6000806000806080858703121561256757600080fd5b61257085612376565b9350602085013567ffffffffffffffff81111561258c57600080fd5b612598878288016124d2565b9350506125a760408601612376565b915060608501356125b781612542565b939692955090935050565b600080604083850312156125d557600080fd5b6125de83612376565b9150602083013580151581146125f357600080fd5b809150509250929050565b6000806000806080858703121561261457600080fd5b61261d85612376565b935061262b60208601612376565b925060408501359150606085013567ffffffffffffffff81111561264e57600080fd5b8501601f8101871361265f57600080fd5b61266e8782356020840161245c565b91505092959194509250565b6000806040838503121561268d57600080fd5b61269683612376565b9150602083013567ffffffffffffffff8111156126b257600080fd5b6126be858286016124d2565b9150509250929050565b6000602082840312156126da57600080fd5b81356116c081612542565b600080604083850312156126f857600080fd5b61270183612376565b915061270f60208401612376565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061276157607f821691505b6020821081141561278257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526003908201526215125160ea1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000825161281e8184602087016122a2565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561285857612858612828565b500290565b6000821982111561287057612870612828565b500190565b60006001600160801b0380831681851680830382111561289757612897612828565b01949350505050565b600060ff821660ff8114156128b7576128b7612828565b60010192915050565b6000806000606084860312156128d557600080fd5b83516128e081612542565b60208501519093506128f181612542565b80925050604084015190509250925092565b600083516129158184602088016122a2565b8351908301906128978183602088016122a2565b60008282101561293b5761293b612828565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261296557612965612940565b500690565b60006001600160801b038084168061298457612984612940565b92169190910692915050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006000198214156129f6576129f6612828565b5060010190565b600082612a0c57612a0c612940565b500490565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a44908301846122ce565b9695505050505050565b600060208284031215612a6057600080fd5b81516116c08161225656fea2646970667358221220f4a3649a5dbb58c5f79e4558f728dc433360673edd5c799bd338ddd312c54cf364736f6c634300080b0033";

type GMKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GMKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GMKeys__factory extends ContractFactory {
  constructor(...args: GMKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GMKeys> {
    return super.deploy(
      _baseTokenURI,
      _price,
      overrides || {}
    ) as Promise<GMKeys>;
  }
  override getDeployTransaction(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseTokenURI, _price, overrides || {});
  }
  override attach(address: string): GMKeys {
    return super.attach(address) as GMKeys;
  }
  override connect(signer: Signer): GMKeys__factory {
    return super.connect(signer) as GMKeys__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GMKeysInterface {
    return new utils.Interface(_abi) as GMKeysInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GMKeys {
    return new Contract(address, _abi, signerOrProvider) as GMKeys;
  }
}
