/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GMKeys,
  GMKeysInterface,
} from "../../../contracts/gmkeys.sol/GMKeys";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCount",
        type: "uint256",
      },
    ],
    name: "MintKeys",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address",
        name: "currentAddress",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "currentUnit",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burnKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "seed",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "epoch",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintedKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneAddress",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currentAddress",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "currentUnit",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct GMKeys.AddressStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "seed",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "epoch",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneTicket",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "mintKeys",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "seed",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "epoch",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalKeys",
        type: "uint256",
      },
    ],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526175306009556000600a819055600b55600c805460ff191690553480156200002b57600080fd5b5060405162002b3e38038062002b3e8339810160408190526200004e9162000208565b604080518082018252600f81526e11d352d95e5cc8189e481391951e15608a1b602080830191825283518085019094526006845265474d4b45595360d01b908401528151919291620000a3916000916200014c565b508051620000b99060019060208401906200014c565b505050620000d6620000d0620000f660201b60201c565b620000fa565b8151620000eb9060079060208501906200014c565b50600855506200032a565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200015a90620002ed565b90600052602060002090601f0160209004810192826200017e5760008555620001c9565b82601f106200019957805160ff1916838001178555620001c9565b82800160010185558215620001c9579182015b82811115620001c9578251825591602001919060010190620001ac565b50620001d7929150620001db565b5090565b5b80821115620001d75760008155600101620001dc565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200021c57600080fd5b82516001600160401b03808211156200023457600080fd5b818501915085601f8301126200024957600080fd5b8151818111156200025e576200025e620001f2565b604051601f8201601f19908116603f01168101908382118183101715620002895762000289620001f2565b81604052828152602093508884848701011115620002a657600080fd5b600091505b82821015620002ca5784820184015181830185015290830190620002ab565b82821115620002dc5760008484830101525b969092015195979596505050505050565b600181811c908216806200030257607f821691505b602082108114156200032457634e487b7160e01b600052602260045260246000fd5b50919050565b612804806200033a6000396000f3fe6080604052600436106102045760003560e01c8063692f1d1211610118578063a22cb465116100a0578063bdfe7d471161006f578063bdfe7d471461062e578063c87b56dd146106bd578063e08c7082146106dd578063e985e9c5146106fd578063f2fde38b1461071d57600080fd5b8063a22cb46514610599578063b8046b1c146105b9578063b88d4fde146105ce578063bbdaea6b146105ee57600080fd5b8063715018a6116100e7578063715018a614610529578063828317211461053e5780638da5cb5b1461055157806395d89b411461056f57806398d5fdca1461058457600080fd5b8063692f1d12146104895780636bd449aa1461049e57806370a08231146104f4578063714c53981461051457600080fd5b8063265aa6211161019b5780635c3e0da21161016a5780635c3e0da2146103f65780635ff0c75b1461040b5780636352211e1461042757806363ba31cf1461044757806364d689881461046957600080fd5b8063265aa621146103465780633ccfd60b146103ae57806342842e0e146103b657806342966c68146103d657600080fd5b806308e4c25f116101d757806308e4c25f146102ba578063095ea7b3146102e75780632294bf4d1461030757806323b872dd1461032657600080fd5b806301ffc9a71461020957806302a7e3a31461023e57806306fdde0314610260578063081812fc14610282575b600080fd5b34801561021557600080fd5b50610229610224366004612021565b61073d565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b5061025e61025936600461203e565b61078f565b005b34801561026c57600080fd5b506102756107d9565b60405161023591906120af565b34801561028e57600080fd5b506102a261029d36600461203e565b61086b565b6040516001600160a01b039091168152602001610235565b3480156102c657600080fd5b506102da6102d536600461203e565b6108f3565b604051610235919061210e565b3480156102f357600080fd5b5061025e610302366004612138565b6109d4565b34801561031357600080fd5b50600b545b604051908152602001610235565b34801561033257600080fd5b5061025e610341366004612162565b610aea565b34801561035257600080fd5b5061036661036136600461203e565b610b1c565b604080516001600160a01b03909716875260208701959095526001600160801b039093169385019390935260ff166060840152608083019190915260a082015260c001610235565b61025e610b7c565b3480156103c257600080fd5b5061025e6103d1366004612162565b610bd9565b3480156103e257600080fd5b5061025e6103f136600461203e565b610bf4565b34801561040257600080fd5b5061025e610c6e565b34801561041757600080fd5b50610229600c5460ff1660011490565b34801561043357600080fd5b506102a261044236600461203e565b610ca4565b34801561045357600080fd5b5061045c610d1b565b604051610235919061219e565b34801561047557600080fd5b5061025e61048436600461203e565b610dc9565b34801561049557600080fd5b50610318610e75565b3480156104aa57600080fd5b506104be6104b9366004612298565b610e85565b6040805182516001600160a01b031681526020808401516001600160801b03169082015291810151151590820152606001610235565b34801561050057600080fd5b5061031861050f3660046122cd565b610eff565b34801561052057600080fd5b50610275610f86565b34801561053557600080fd5b5061025e610f95565b61025e61054c3660046122f7565b610fcb565b34801561055d57600080fd5b506006546001600160a01b03166102a2565b34801561057b57600080fd5b506102756113c8565b34801561059057600080fd5b50600854610318565b3480156105a557600080fd5b5061025e6105b4366004612368565b6113d7565b3480156105c557600080fd5b50600a54610318565b3480156105da57600080fd5b5061025e6105e93660046123a4565b6113e2565b3480156105fa57600080fd5b5061060e610609366004612420565b61141a565b6040805160ff948516815293909216602084015290820152606001610235565b34801561063a57600080fd5b5061068e610649366004612298565b8051602081830181018051600d82529282019190930120915280546001909101546001600160a01b03909116906001600160801b03811690600160801b900460ff1683565b604080516001600160a01b0390941684526001600160801b039092166020840152151590820152606001610235565b3480156106c957600080fd5b506102756106d836600461203e565b6114a1565b3480156106e957600080fd5b5061025e6106f8366004612162565b61156c565b34801561070957600080fd5b5061022961071836600461246e565b6115eb565b34801561072957600080fd5b5061025e6107383660046122cd565b611619565b60006001600160e01b031982166380ac58cd60e01b148061076e57506001600160e01b03198216635b5e139f60e01b145b8061078957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6006546001600160a01b031633146107c25760405162461bcd60e51b81526004016107b9906124a1565b60405180910390fd5b600c805460ff19166001179055600a556000600b55565b6060600080546107e8906124d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610814906124d6565b80156108615780601f1061083657610100808354040283529160200191610861565b820191906000526020600020905b81548152906001019060200180831161084457829003601f168201915b5050505050905090565b6000610876826116b1565b6108d75760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107b9565b506000908152600460205260409020546001600160a01b031690565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915261092e826116b1565b61094a5760405162461bcd60e51b81526004016107b990612511565b600f828154811061095d5761095d61252e565b60009182526020918290206040805160c081018252600590930290910180546001600160a01b0316835260018101549383019390935260028301546001600160801b0381169183019190915260ff600160801b9091041660608201526003820154608082015260049091015460a082015292915050565b60006109df82610ca4565b9050806001600160a01b0316836001600160a01b03161415610a4d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016107b9565b336001600160a01b0382161480610a695750610a6981336115eb565b610adb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016107b9565b610ae583836116ce565b505050565b610af5335b8261173c565b610b115760405162461bcd60e51b81526004016107b990612544565b610ae5838383611806565b600f8181548110610b2c57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b03909316945090926001600160801b03821692600160801b90920460ff169186565b6006546001600160a01b03163314610ba65760405162461bcd60e51b81526004016107b9906124a1565b6040514790339082156108fc029083906000818181858888f19350505050158015610bd5573d6000803e3d6000fd5b5050565b610ae5838383604051806020016040528060008152506113e2565b610bfd33610aef565b610c625760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016107b9565b610c6b816119a2565b50565b6006546001600160a01b03163314610c985760405162461bcd60e51b81526004016107b9906124a1565b600c805460ff19169055565b6000818152600260205260408120546001600160a01b0316806107895760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016107b9565b6060600f805480602002602001604051908101604052809291908181526020016000905b82821015610dc05760008481526020908190206040805160c0810182526005860290920180546001600160a01b031683526001808201548486015260028201546001600160801b03811693850193909352600160801b90920460ff166060840152600381015460808401526004015460a08301529083529092019101610d3f565b50505050905090565b6006546001600160a01b03163314610df35760405162461bcd60e51b81526004016107b9906124a1565b610dfc816116b1565b610e185760405162461bcd60e51b81526004016107b990612511565b600f8181548110610e2b57610e2b61252e565b60009182526020822060059091020180546001600160a01b0319168155600181018290556002810180546001600160881b03191690556003810182905560040155610c6b816119a2565b6000610e80600e5490565b905090565b60408051606081018252600080825260208201819052818301529051600d90610eaf908490612595565b908152604080516020928190038301812060608201835280546001600160a01b03168252600101546001600160801b03811693820193909352600160801b90920460ff1615159082015292915050565b60006001600160a01b038216610f6a5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016107b9565b506001600160a01b031660009081526003602052604090205490565b6060600780546107e8906124d6565b6006546001600160a01b03163314610fbf5760405162461bcd60e51b81526004016107b9906124a1565b610fc96000611a3d565b565b600c5460ff166001146110065760405162461bcd60e51b81526020600482015260036024820152624d505360e81b60448201526064016107b9565b8060ff1660085461101791906125c7565b34101561104c5760405162461bcd60e51b81526020600482015260036024820152624e454360e81b60448201526064016107b9565b8060ff16611059600e5490565b61106391906125e6565b600954101561109a5760405162461bcd60e51b815260206004820152600360248201526226a9a960e91b60448201526064016107b9565b60008060006110a9858761141a565b91945092509050600160ff831610156110ea5760405162461bcd60e51b8152602060048201526003602482015262272ca960e91b60448201526064016107b9565b6000600d876040516110fc9190612595565b908152604051908190036020019020600181015490915060ff600160801b90910416156111cc57600181015461113f9060ff8716906001600160801b03166125fe565b6001600160801b03168360ff1610156111805760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b60448201526064016107b9565b60018101805460ff871691906000906111a39084906001600160801b03166125fe565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611213565b8460ff168360ff1610156112085760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b60448201526064016107b9565b611213888887611a8f565b60015b8560ff168160ff161161135f57600f6040518060c001604052808b6001600160a01b03168152602001611248600e5490565b8152602001611268611259600e5490565b61126390886125e6565b611b57565b6001600160801b031681526020018760ff168152602001611288600e5490565b61129290876125e6565b815242602091820152825460018181018555600094855293829020835160059092020180546001600160a01b039092166001600160a01b031990921691909117815590820151928101929092556040810151600283018054606084015160ff16600160801b026001600160881b03199091166001600160801b03909316929092179190911790556080810151600383015560a0015160049091015561133f8961133a600e5490565b611b8d565b61134d600e80546001019055565b8061135781612629565b915050611216565b8560ff16600b5461137091906125e6565b600b8190556040805160ff8916815260208101929092526001600160a01b038b16917f3cd3543ca4496d4ff557ba17c2e827932e1cc93e7069aadc76c1cb14ccf0a94d910160405180910390a2505050505050505050565b6060600180546107e8906124d6565b610bd5338383611ba7565b6113ec338361173c565b6114085760405162461bcd60e51b81526004016107b990612544565b61141484848484611c76565b50505050565b600080600080600080876001600160a01b031663037bee48886040518263ffffffff1660e01b815260040161144f91906120af565b606060405180830381865afa15801561146c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114909190612649565b919750955093505050509250925092565b60606114ac826116b1565b6115105760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016107b9565b600061151a610f86565b9050600081511161153a5760405180602001604052806000815250611565565b8061154484611ca9565b60405160200161155592919061268c565b6040516020818303038152906040525b9392505050565b611575816116b1565b6115915760405162461bcd60e51b81526004016107b990612511565b61159a81610ca4565b6001600160a01b0316836001600160a01b0316146115e05760405162461bcd60e51b815260206004820152600360248201526249474f60e81b60448201526064016107b9565b610ae5838383610aea565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6006546001600160a01b031633146116435760405162461bcd60e51b81526004016107b9906124a1565b6001600160a01b0381166116a85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107b9565b610c6b81611a3d565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061170382610ca4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611747826116b1565b6117a85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107b9565b60006117b383610ca4565b9050806001600160a01b0316846001600160a01b031614806117ee5750836001600160a01b03166117e38461086b565b6001600160a01b0316145b806117fe57506117fe81856115eb565b949350505050565b826001600160a01b031661181982610ca4565b6001600160a01b03161461187d5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016107b9565b6001600160a01b0382166118df5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016107b9565b6118ea6000826116ce565b6001600160a01b03831660009081526003602052604081208054600192906119139084906126b2565b90915550506001600160a01b03821660009081526003602052604081208054600192906119419084906125e6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006119ad82610ca4565b90506119ba6000836116ce565b6001600160a01b03811660009081526003602052604081208054600192906119e39084906126b2565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600d82604051611a9f9190612595565b9081526040519081900360200190206001015460ff600160801b9091041615611af05760405162461bcd60e51b815260206004820152600360248201526241414560e81b60448201526064016107b9565b6000600d83604051611b029190612595565b90815260405190819003602001902080546001600160a01b039095166001600160a01b031990951694909417845550600190920180546001600160881b03191660ff90931692909217600160801b1790915550565b6040805160208082018490528251808303820181529183019092528051910120600090662386f26fc10000906117fe82826126df565b610bd5828260405180602001604052806000815250611da7565b816001600160a01b0316836001600160a01b03161415611c095760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016107b9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611c81848484611806565b611c8d84848484611dda565b6114145760405162461bcd60e51b81526004016107b9906126f3565b606081611ccd5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611cf75780611ce181612745565b9150611cf09050600a83612760565b9150611cd1565b60008167ffffffffffffffff811115611d1257611d126121ec565b6040519080825280601f01601f191660200182016040528015611d3c576020820181803683370190505b5090505b84156117fe57611d516001836126b2565b9150611d5e600a866126df565b611d699060306125e6565b60f81b818381518110611d7e57611d7e61252e565b60200101906001600160f81b031916908160001a905350611da0600a86612760565b9450611d40565b611db18383611ed8565b611dbe6000848484611dda565b610ae55760405162461bcd60e51b81526004016107b9906126f3565b60006001600160a01b0384163b15611ecd57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611e1e903390899088908890600401612774565b6020604051808303816000875af1925050508015611e59575060408051601f3d908101601f19168201909252611e56918101906127b1565b60015b611eb3573d808015611e87576040519150601f19603f3d011682016040523d82523d6000602084013e611e8c565b606091505b508051611eab5760405162461bcd60e51b81526004016107b9906126f3565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506117fe565b506001949350505050565b6001600160a01b038216611f2e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107b9565b611f37816116b1565b15611f845760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107b9565b6001600160a01b0382166000908152600360205260408120805460019290611fad9084906125e6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610c6b57600080fd5b60006020828403121561203357600080fd5b81356115658161200b565b60006020828403121561205057600080fd5b5035919050565b60005b8381101561207257818101518382015260200161205a565b838111156114145750506000910152565b6000815180845261209b816020860160208601612057565b601f01601f19169290920160200192915050565b6020815260006115656020830184612083565b80516001600160a01b03168252602080820151908301526040808201516001600160801b03169083015260608082015160ff16908301526080808201519083015260a090810151910152565b60c0810161078982846120c2565b80356001600160a01b038116811461213357600080fd5b919050565b6000806040838503121561214b57600080fd5b6121548361211c565b946020939093013593505050565b60008060006060848603121561217757600080fd5b6121808461211c565b925061218e6020850161211c565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b818110156121e0576121cd8385516120c2565b9284019260c092909201916001016121ba565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561221d5761221d6121ec565b604051601f8501601f19908116603f01168101908282118183101715612245576122456121ec565b8160405280935085815286868601111561225e57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261228957600080fd5b61156583833560208501612202565b6000602082840312156122aa57600080fd5b813567ffffffffffffffff8111156122c157600080fd5b6117fe84828501612278565b6000602082840312156122df57600080fd5b6115658261211c565b60ff81168114610c6b57600080fd5b6000806000806080858703121561230d57600080fd5b6123168561211c565b9350602085013567ffffffffffffffff81111561233257600080fd5b61233e87828801612278565b93505061234d6040860161211c565b9150606085013561235d816122e8565b939692955090935050565b6000806040838503121561237b57600080fd5b6123848361211c565b91506020830135801515811461239957600080fd5b809150509250929050565b600080600080608085870312156123ba57600080fd5b6123c38561211c565b93506123d16020860161211c565b925060408501359150606085013567ffffffffffffffff8111156123f457600080fd5b8501601f8101871361240557600080fd5b61241487823560208401612202565b91505092959194509250565b6000806040838503121561243357600080fd5b61243c8361211c565b9150602083013567ffffffffffffffff81111561245857600080fd5b61246485828601612278565b9150509250929050565b6000806040838503121561248157600080fd5b61248a8361211c565b91506124986020840161211c565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c908216806124ea57607f821691505b6020821081141561250b57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526003908201526215125160ea1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082516125a7818460208701612057565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156125e1576125e16125b1565b500290565b600082198211156125f9576125f96125b1565b500190565b60006001600160801b03808316818516808303821115612620576126206125b1565b01949350505050565b600060ff821660ff811415612640576126406125b1565b60010192915050565b60008060006060848603121561265e57600080fd5b8351612669816122e8565b602085015190935061267a816122e8565b80925050604084015190509250925092565b6000835161269e818460208801612057565b835190830190612620818360208801612057565b6000828210156126c4576126c46125b1565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826126ee576126ee6126c9565b500690565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415612759576127596125b1565b5060010190565b60008261276f5761276f6126c9565b500490565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906127a790830184612083565b9695505050505050565b6000602082840312156127c357600080fd5b81516115658161200b56fea2646970667358221220683509d31ef177a4a9b15d38231f18812c7cc6d67deccf82748dee33b7b4822364736f6c634300080b0033";

type GMKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GMKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GMKeys__factory extends ContractFactory {
  constructor(...args: GMKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GMKeys> {
    return super.deploy(
      _baseTokenURI,
      _price,
      overrides || {}
    ) as Promise<GMKeys>;
  }
  override getDeployTransaction(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseTokenURI, _price, overrides || {});
  }
  override attach(address: string): GMKeys {
    return super.attach(address) as GMKeys;
  }
  override connect(signer: Signer): GMKeys__factory {
    return super.connect(signer) as GMKeys__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GMKeysInterface {
    return new utils.Interface(_abi) as GMKeysInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GMKeys {
    return new Contract(address, _abi, signerOrProvider) as GMKeys;
  }
}
