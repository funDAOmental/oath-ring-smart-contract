/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EthLibrary,
  EthLibraryInterface,
} from "../../../../contracts/services/eth.service.sol/EthLibrary";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getEthBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEthBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102f88061007e6000396000f3fe60806040526004361061004a5760003560e01c806370ed0ada1461004f578063715018a61461006f5780638da5cb5b14610086578063e8ddf15a146100ae578063f2fde38b146100b6575b600080fd5b34801561005b57600080fd5b506040514781526020015b60405180910390f35b34801561007b57600080fd5b506100846100d6565b005b34801561009257600080fd5b506000546040516001600160a01b039091168152602001610066565b610084610115565b3480156100c257600080fd5b506100846100d136600461025d565b610172565b6000546001600160a01b031633146101095760405162461bcd60e51b81526004016101009061028d565b60405180910390fd5b610113600061020d565b565b6000546001600160a01b0316331461013f5760405162461bcd60e51b81526004016101009061028d565b6040514790339082156108fc029083906000818181858888f1935050505015801561016e573d6000803e3d6000fd5b5050565b6000546001600160a01b0316331461019c5760405162461bcd60e51b81526004016101009061028d565b6001600160a01b0381166102015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610100565b61020a8161020d565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561026f57600080fd5b81356001600160a01b038116811461028657600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220bf49334057a6477f69053a7b1d016e33fe7bff1b0176ae5e25cd4f6de1097aa564736f6c634300080b0033";

type EthLibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthLibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EthLibrary__factory extends ContractFactory {
  constructor(...args: EthLibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EthLibrary> {
    return super.deploy(overrides || {}) as Promise<EthLibrary>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EthLibrary {
    return super.attach(address) as EthLibrary;
  }
  override connect(signer: Signer): EthLibrary__factory {
    return super.connect(signer) as EthLibrary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthLibraryInterface {
    return new utils.Interface(_abi) as EthLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EthLibrary {
    return new Contract(address, _abi, signerOrProvider) as EthLibrary;
  }
}
