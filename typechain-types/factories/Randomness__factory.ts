/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Randomness, RandomnessInterface } from "../Randomness";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLinkBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_identifier",
        type: "bytes32",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "enum Randomness.STATUS",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "tickets",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Randomness.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWinningPercentage",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_chanceOfWinningPercentage",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_totalKey",
        type: "uint256",
      },
    ],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_identifier",
        type: "bytes32",
      },
    ],
    name: "unlockNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_identifier",
        type: "bytes32",
      },
    ],
    name: "unlockTestNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052620419106002556000600381905560048190556005805461ffff191661640017905560065534801561003557600080fd5b50604051610f8b380380610f8b833981016040819052610054916100ef565b6001600160a01b0384811660a052831660805261007033610081565b600b91909155600c55506101329050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146100ea57600080fd5b919050565b6000806000806080858703121561010557600080fd5b61010e856100d3565b935061011c602086016100d3565b6040860151606090960151949790965092505050565b60805160a051610e1f61016c600039600081816104440152610a7b01526000818161024f015281816105600152610a4c0152610e1f6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063721fd784116100a2578063c4e4798f11610071578063c4e4798f146101d9578063ced72f87146101ec578063e661d892146101f4578063f2fde38b14610207578063fbff1b8a1461021a57600080fd5b8063721fd784146101905780638da5cb5b146101a357806394985ddd146101be578063b8046b1c146101d157600080fd5b80635ff0c75b116100de5780635ff0c75b14610141578063651d7aa514610160578063692f1d1214610180578063715018a61461018857600080fd5b806306e8337f14610110578063331bf1251461012757806350c5f9751461012f5780635c3e0da214610137575b600080fd5b6004545b6040519081526020015b60405180910390f35b600b54610114565b610114610237565b61013f6102c7565b005b61015060055460ff1660011490565b604051901515815260200161011e565b61017361016e366004610bc2565b610306565b60405161011e9190610bf1565b610114610399565b61013f6103a4565b61013f61019e366004610c41565b6103da565b6001546040516001600160a01b03909116815260200161011e565b61013f6101cc366004610c73565b610439565b600354610114565b61013f6101e7366004610bc2565b6104bf565b600c54610114565b61013f610202366004610bc2565b610641565b61013f610215366004610c95565b6106ca565b600554610100900460ff1660405160ff909116815260200161011e565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561029e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c29190610cc5565b905090565b6001546001600160a01b031633146102fa5760405162461bcd60e51b81526004016102f190610cde565b60405180910390fd5b6005805460ff19169055565b604080516080810182526000808252602082018190529181018290526060810191909152600082815260096020526040908190208151608081019092528054829060ff16600181111561035b5761035b610bdb565b600181111561036c5761036c610bdb565b81528154610100900460ff1660208201526001820154604082015260029091015460609091015292915050565b60006102c2600a5490565b6001546001600160a01b031633146103ce5760405162461bcd60e51b81526004016102f190610cde565b6103d8600061075e565b565b6001546001600160a01b031633146104045760405162461bcd60e51b81526004016102f190610cde565b600580546003839055600060045561ffff191661010060ff8516021760011790556002546104329042610d13565b6006555050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104b15760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016102f1565b6104bb82826107b0565b5050565b60055460ff166001146104fa5760405162461bcd60e51b81526020600482015260036024820152624d505360e81b60448201526064016102f1565b60008181526007602052604090205460ff161561053f5760405162461bcd60e51b81526020600482015260036024820152624b414560e81b60448201526064016102f1565b426006541061061357600c546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156105af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d39190610cc5565b10156106075760405162461bcd60e51b81526020600482015260036024820152624e454360e81b60448201526064016102f1565b61061081610898565b50565b60405162461bcd60e51b81526020600482015260036024820152624d504560e81b60448201526064016102f1565b60055460ff1660011461067c5760405162461bcd60e51b81526020600482015260036024820152624d505360e81b60448201526064016102f1565b60008181526007602052604090205460ff16156106c15760405162461bcd60e51b81526020600482015260036024820152624b414560e81b60448201526064016102f1565b610610816108d3565b6001546001600160a01b031633146106f45760405162461bcd60e51b81526004016102f190610cde565b6001600160a01b0381166107595760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102f1565b610610815b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006107bd606483610d39565b6107c8906001610d13565b905060006107d7600a84610d39565b6107e2906001610d13565b6005549091506000906107ff90610100900460ff16841115610a04565b9050600061080d8284610a1c565b90508060ff166004546108209190610d13565b60045560008681526008602090815260408083205483526009909152902080548390829060ff19166001838181111561085b5761085b610bdb565b0217905550805460ff83166101000261ff00199091161781556001810186905542600282015561088f600a80546001019055565b50505050505050565b60006108a8600b54600c54610a48565b6000838152600760209081526040808320805460ff1916600117905592825260089052209190915550565b6000818152600760209081526040808320805460ff191660011790556008909152812082905581907f960c3fe88d950ed417a398d6746908458aa42f3d073723fd9675d36015b402ab90610928606483610d39565b610933906001610d13565b90506000610942600a84610d39565b61094d906001610d13565b60055490915060009061096a90610100900460ff16841115610a04565b905060006109788284610a1c565b90508060ff1660045461098b9190610d13565b60045560008681526008602090815260408083205483526009909152902080548390829060ff1916600183818111156109c6576109c6610bdb565b0217905550805460ff83166101000261ff0019909116178155600181018690554260028201556109fa600a80546001019055565b5050505050505050565b60008115610a1457506001919050565b506000919050565b600080836001811115610a3157610a31610bdb565b1415610a3f57506000610a42565b50805b92915050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610ab8929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610ae593929190610d5b565b6020604051808303816000875af1158015610b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b289190610dc7565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152610b82906001610d13565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b600060208284031215610bd457600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b8151608082019060028110610c1657634e487b7160e01b600052602160045260246000fd5b8083525060ff6020840151166020830152604083015160408301526060830151606083015292915050565b60008060408385031215610c5457600080fd5b823560ff81168114610c6557600080fd5b946020939093013593505050565b60008060408385031215610c8657600080fd5b50508035926020909101359150565b600060208284031215610ca757600080fd5b81356001600160a01b0381168114610cbe57600080fd5b9392505050565b600060208284031215610cd757600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610d3457634e487b7160e01b600052601160045260246000fd5b500190565b600082610d5657634e487b7160e01b600052601260045260246000fd5b500690565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b81811015610d9d57858101830151858201608001528201610d81565b81811115610daf576000608083870101525b50601f01601f19169290920160800195945050505050565b600060208284031215610dd957600080fd5b81518015158114610cbe57600080fdfea26469706673582212208230bc28cbb2d8a2e2fbe1208c5a0b73059d3de8e8a28194c02f5e954e30a40e64736f6c634300080b0033";

type RandomnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Randomness__factory extends ContractFactory {
  constructor(...args: RandomnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Randomness";
  }

  deploy(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Randomness> {
    return super.deploy(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      overrides || {}
    ) as Promise<Randomness>;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      overrides || {}
    );
  }
  attach(address: string): Randomness {
    return super.attach(address) as Randomness;
  }
  connect(signer: Signer): Randomness__factory {
    return super.connect(signer) as Randomness__factory;
  }
  static readonly contractName: "Randomness";
  public readonly contractName: "Randomness";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomnessInterface {
    return new utils.Interface(_abi) as RandomnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Randomness {
    return new Contract(address, _abi, signerOrProvider) as Randomness;
  }
}
