/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Randomness, RandomnessInterface } from "../Randomness";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_identifier",
        type: "bytes32",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "enum Randomness.STATUS",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Randomness.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPhase",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nftKeys",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "enum Randomness.STATUS",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "uniqKeys",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_identifier",
        type: "bytes32",
      },
    ],
    name: "unlockNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalKey",
        type: "uint256",
      },
    ],
    name: "updateTotalKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260006002556003805460ff1916905534801561001f57600080fd5b50604051610cba380380610cba83398101604081905261003e916100d9565b6001600160a01b0384811660a052831660805261005a3361006b565b6008919091556009555061011c9050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146100d457600080fd5b919050565b600080600080608085870312156100ef57600080fd5b6100f8856100bd565b9350610106602086016100bd565b6040860151606090960151949790965092505050565b60805160a051610b6b61014f6000396000818161043f01526107db01526000818161055201526107ac0152610b6b6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063692f1d12116100ad578063b8046b1c11610071578063b8046b1c1461026c578063c4e4798f14610274578063ced72f8714610287578063e4192ea51461028f578063f2fde38b146102af57600080fd5b8063692f1d12146101ec578063715018a6146101f45780638da5cb5b146101fc57806394985ddd14610217578063afdc61111461022a57600080fd5b80634002cc7d116100f45780634002cc7d146101a4578063488bdabc146101ac5780635c3e0da2146101b55780635ff0c75b146101bd578063651d7aa5146101cc57600080fd5b806311c0145d1461012657806317881cbf1461015e5780631ca6b9ea1461017d578063331bf12514610192575b600080fd5b610149610134366004610922565b60056020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b60035461016b9060ff1681565b60405160ff9091168152602001610155565b61019061018b366004610922565b6102c2565b005b6008545b604051908152602001610155565b6101906102fa565b61019660025481565b610190610333565b61014960035460ff1660011490565b6101df6101da366004610922565b610369565b6040516101559190610973565b6101966103ee565b6101906103fe565b6001546040516001600160a01b039091168152602001610155565b6101906102253660046109a0565b610434565b61025d610238366004610922565b60066020526000908152604090208054600182015460029092015460ff909116919083565b604051610155939291906109c2565b600254610196565b610190610282366004610922565b6104ba565b600954610196565b61019661029d366004610922565b60046020526000908152604090205481565b6101906102bd3660046109e1565b610605565b6001546001600160a01b031633146102f55760405162461bcd60e51b81526004016102ec90610a11565b60405180910390fd5b600255565b6001546001600160a01b031633146103245760405162461bcd60e51b81526004016102ec90610a11565b6003805460ff19166001179055565b6001546001600160a01b0316331461035d5760405162461bcd60e51b81526004016102ec90610a11565b6003805460ff19169055565b61038e6040805160608101909152806000815260200160008152602001600081525090565b600082815260066020526040908190208151606081019092528054829060ff1660018111156103bf576103bf61093b565b60018111156103d0576103d061093b565b81526001820154602082015260029091015460409091015292915050565b60006103f960075490565b905090565b6001546001600160a01b031633146104285760405162461bcd60e51b81526004016102ec90610a11565b6104326000610699565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104ac5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016102ec565b6104b682826106eb565b5050565b60008181526005602052604090205460ff16156104ff5760405162461bcd60e51b81526020600482015260036024820152624b414560e81b60448201526064016102ec565b60035460ff1660011461053a5760405162461bcd60e51b81526020600482015260036024820152624d505360e81b60448201526064016102ec565b6009546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156105a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c59190610a46565b10156105f95760405162461bcd60e51b81526020600482015260036024820152624e454360e81b60448201526064016102ec565b61060281610783565b50565b6001546001600160a01b0316331461062f5760405162461bcd60e51b81526004016102ec90610a11565b6001600160a01b0381166106945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ec565b610602815b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006106f8600283610a5f565b60018111156107095761070961093b565b600084815260046020908152604080832080548452600583528184208054600160ff199182168117909255915485526006909352922080549394509284928492911690838181111561075d5761075d61093b565b02179055506001810183905542600282015561077d600780546001019055565b50505050565b60006107936008546009546107a8565b60009081526004602052604090209190915550565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610818929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161084593929190610a81565b6020604051808303816000875af1158015610864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108889190610aed565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a0909101909252815191830191909120868452929091526108e2906001610b0f565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b60006020828403121561093457600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6002811061096f57634e487b7160e01b600052602160045260246000fd5b9052565b6000606082019050610986828451610951565b602083015160208301526040830151604083015292915050565b600080604083850312156109b357600080fd5b50508035926020909101359150565b606081016109d08286610951565b602082019390935260400152919050565b6000602082840312156109f357600080fd5b81356001600160a01b0381168114610a0a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610a5857600080fd5b5051919050565b600082610a7c57634e487b7160e01b600052601260045260246000fd5b500690565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b81811015610ac357858101830151858201608001528201610aa7565b81811115610ad5576000608083870101525b50601f01601f19169290920160800195945050505050565b600060208284031215610aff57600080fd5b81518015158114610a0a57600080fd5b60008219821115610b3057634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220dbbf955dce50ec35437f9795fb7cecef0e359a2ba12f29aa16ebf4e5adec5e1a64736f6c634300080b0033";

type RandomnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Randomness__factory extends ContractFactory {
  constructor(...args: RandomnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Randomness";
  }

  deploy(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Randomness> {
    return super.deploy(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      overrides || {}
    ) as Promise<Randomness>;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      overrides || {}
    );
  }
  attach(address: string): Randomness {
    return super.attach(address) as Randomness;
  }
  connect(signer: Signer): Randomness__factory {
    return super.connect(signer) as Randomness__factory;
  }
  static readonly contractName: "Randomness";
  public readonly contractName: "Randomness";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomnessInterface {
    return new utils.Interface(_abi) as RandomnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Randomness {
    return new Contract(address, _abi, signerOrProvider) as Randomness;
  }
}
