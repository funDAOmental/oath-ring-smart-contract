/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Randomness, RandomnessInterface } from "../Randomness";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_identifier",
        type: "bytes32",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "enum Randomness.STATUS",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Randomness.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPhase",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nftKeys",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "enum Randomness.STATUS",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "uniqKeys",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_identifier",
        type: "bytes32",
      },
    ],
    name: "unlockNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalKey",
        type: "uint256",
      },
    ],
    name: "updateTotalKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260006002556003805460ff1916905534801561001f57600080fd5b50604051610bc8380380610bc883398101604081905261003e916100d9565b6001600160a01b0384811660a052831660805261005a3361006b565b6008919091556009555061011c9050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146100d457600080fd5b919050565b600080600080608085870312156100ef57600080fd5b6100f8856100bd565b9350610106602086016100bd565b6040860151606090960151949790965092505050565b60805160a051610a806101486000396000818161042c0152610709015260006106da0152610a806000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063692f1d12116100a2578063afdc611111610071578063afdc61111461021f578063c4e4798f14610261578063ced72f8714610274578063e4192ea51461027c578063f2fde38b1461029c57600080fd5b8063692f1d12146101e1578063715018a6146101e95780638da5cb5b146101f157806394985ddd1461020c57600080fd5b80634002cc7d116100e95780634002cc7d14610199578063488bdabc146101a15780635c3e0da2146101aa5780635ff0c75b146101b2578063651d7aa5146101c157600080fd5b806311c0145d1461011b57806317881cbf146101535780631ca6b9ea14610172578063331bf12514610187575b600080fd5b61013e610129366004610850565b60056020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6003546101609060ff1681565b60405160ff909116815260200161014a565b610185610180366004610850565b6102af565b005b6008545b60405190815260200161014a565b6101856102e7565b61018b60025481565b610185610320565b61013e60035460ff1660011490565b6101d46101cf366004610850565b610356565b60405161014a91906108a1565b61018b6103db565b6101856103eb565b6001546040516001600160a01b03909116815260200161014a565b61018561021a3660046108ce565b610421565b61025261022d366004610850565b60066020526000908152604090208054600182015460029092015460ff909116919083565b60405161014a939291906108f0565b61018561026f366004610850565b6104a7565b60095461018b565b61018b61028a366004610850565b60046020526000908152604090205481565b6101856102aa36600461090f565b610533565b6001546001600160a01b031633146102e25760405162461bcd60e51b81526004016102d99061093f565b60405180910390fd5b600255565b6001546001600160a01b031633146103115760405162461bcd60e51b81526004016102d99061093f565b6003805460ff19166001179055565b6001546001600160a01b0316331461034a5760405162461bcd60e51b81526004016102d99061093f565b6003805460ff19169055565b61037b6040805160608101909152806000815260200160008152602001600081525090565b600082815260066020526040908190208151606081019092528054829060ff1660018111156103ac576103ac610869565b60018111156103bd576103bd610869565b81526001820154602082015260029091015460409091015292915050565b60006103e660075490565b905090565b6001546001600160a01b031633146104155760405162461bcd60e51b81526004016102d99061093f565b61041f60006105c7565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104995760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016102d9565b6104a38282610619565b5050565b60008181526005602052604090205460ff16156104ec5760405162461bcd60e51b81526020600482015260036024820152624b414560e81b60448201526064016102d9565b60035460ff166001146105275760405162461bcd60e51b81526020600482015260036024820152624d505360e81b60448201526064016102d9565b610530816106b1565b50565b6001546001600160a01b0316331461055d5760405162461bcd60e51b81526004016102d99061093f565b6001600160a01b0381166105c25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d9565b610530815b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610626600283610974565b600181111561063757610637610869565b600084815260046020908152604080832080548452600583528184208054600160ff199182168117909255915485526006909352922080549394509284928492911690838181111561068b5761068b610869565b0217905550600181018390554260028201556106ab600780546001019055565b50505050565b60006106c16008546009546106d6565b60009081526004602052604090209190915550565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610746929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161077393929190610996565b6020604051808303816000875af1158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b69190610a02565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152610810906001610a24565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b60006020828403121561086257600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6002811061089d57634e487b7160e01b600052602160045260246000fd5b9052565b60006060820190506108b482845161087f565b602083015160208301526040830151604083015292915050565b600080604083850312156108e157600080fd5b50508035926020909101359150565b606081016108fe828661087f565b602082019390935260400152919050565b60006020828403121561092157600080fd5b81356001600160a01b038116811461093857600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008261099157634e487b7160e01b600052601260045260246000fd5b500690565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b818110156109d8578581018301518582016080015282016109bc565b818111156109ea576000608083870101525b50601f01601f19169290920160800195945050505050565b600060208284031215610a1457600080fd5b8151801515811461093857600080fd5b60008219821115610a4557634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122052fd3c815bd5dbec4bd5b19af1b6b78644c5047c001e10352dc5a23ebf55bdb064736f6c634300080b0033";

type RandomnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Randomness__factory extends ContractFactory {
  constructor(...args: RandomnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Randomness";
  }

  deploy(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Randomness> {
    return super.deploy(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      overrides || {}
    ) as Promise<Randomness>;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      overrides || {}
    );
  }
  attach(address: string): Randomness {
    return super.attach(address) as Randomness;
  }
  connect(signer: Signer): Randomness__factory {
    return super.connect(signer) as Randomness__factory;
  }
  static readonly contractName: "Randomness";
  public readonly contractName: "Randomness";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomnessInterface {
    return new utils.Interface(_abi) as RandomnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Randomness {
    return new Contract(address, _abi, signerOrProvider) as Randomness;
  }
}
