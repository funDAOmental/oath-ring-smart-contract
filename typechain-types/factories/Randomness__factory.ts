/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Randomness, RandomnessInterface } from "../Randomness";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "getAllNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "enum Randomness.STATUS",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Randomness.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "enum Randomness.STATUS",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5073b3dccb4cf7a26f6cf6b120cf5a73875b7bbc655b60a0527301be23585060835e02b77ef475b0cc51aa1e07096080527f2ed0feb3e7fd2022120aa84fab1945545a9f2ffc9076fd6156fa96eaff4c131160035567016345785d8a000060045560805160a0516107226100a46000396000818161028801526103de0152600081816101ce01526103af01526107226000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806312065fe0146100675780632135e4a01461007c578063692f1d121461009c578063853edfae146100a457806394985ddd146100ae578063afdc6111146100c1575b600080fd5b475b6040519081526020015b60405180910390f35b61008f61008a366004610525565b61010d565b6040516100739190610576565b61006961019a565b6100ac6101aa565b005b6100ac6100bc3660046105a9565b61027d565b6100fe6100cf366004610525565b600160208190526000918252604090912080549101546001600160a01b03821691600160a01b900460ff169083565b604051610073939291906105cb565b604080516060810182526000808252602082018190529181019190915260008281526001602081815260409283902083516060810190945280546001600160a01b0381168552909291840191600160a01b90910460ff16908111156101745761017461053e565b60018111156101855761018561053e565b81526020016001820154815250509050919050565b60006101a560025490565b905090565b600480546040516370a0823160e01b81523092810192909252906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610215573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023991906105f6565b10156102725760405162461bcd60e51b81526020600482015260036024820152624e454360e81b60448201526064015b60405180910390fd5b61027a610303565b50565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102f55760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610269565b6102ff8282610313565b5050565b60006101a56003546004546103ab565b600061032060028361060f565b60018111156103315761033161053e565b60008481526001602081905260409091208054336001600160a01b03198216811783559394509092849284926001600160a81b03191660ff60a01b199092169190911790600160a01b90849081111561038c5761038c61053e565b02179055504260018201556103a5600280546001019055565b50505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f00000000000000000000000000000000000000000000000000000000000000008486600060405160200161041b929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161044893929190610631565b6020604051808303816000875af1158015610467573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048b919061069d565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a0909101909252815191830191909120868452929091526104e59060016106c6565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b60006020828403121561053757600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6002811061057257634e487b7160e01b600052602160045260246000fd5b9052565b81516001600160a01b03168152602080830151606083019161059a90840182610554565b50604092830151919092015290565b600080604083850312156105bc57600080fd5b50508035926020909101359150565b6001600160a01b0384168152606081016105e86020830185610554565b826040830152949350505050565b60006020828403121561060857600080fd5b5051919050565b60008261062c57634e487b7160e01b600052601260045260246000fd5b500690565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b8181101561067357858101830151858201608001528201610657565b81811115610685576000608083870101525b50601f01601f19169290920160800195945050505050565b6000602082840312156106af57600080fd5b815180151581146106bf57600080fd5b9392505050565b600082198211156106e757634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122076b029783a3698fe1296ea00339aabc6a246b84e2c77e8099f214fc3aefacb0164736f6c634300080b0033";

type RandomnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Randomness__factory extends ContractFactory {
  constructor(...args: RandomnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Randomness";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Randomness> {
    return super.deploy(overrides || {}) as Promise<Randomness>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Randomness {
    return super.attach(address) as Randomness;
  }
  connect(signer: Signer): Randomness__factory {
    return super.connect(signer) as Randomness__factory;
  }
  static readonly contractName: "Randomness";
  public readonly contractName: "Randomness";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomnessInterface {
    return new utils.Interface(_abi) as RandomnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Randomness {
    return new Contract(address, _abi, signerOrProvider) as Randomness;
  }
}
