/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Randomness, RandomnessInterface } from "../Randomness";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_identifier",
        type: "bytes32",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "tickets",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Randomness.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_identifier",
        type: "bytes32",
      },
    ],
    name: "unlockNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalKey",
        type: "uint256",
      },
    ],
    name: "updateTotalKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405262041910600255600060038190556004805460ff1916905560055534801561002b57600080fd5b50604051610cae380380610cae83398101604081905261004a91610108565b6001600160a01b0384811660a052831660805261006633610091565b81600a8190555080600b8190555061008860096100e360201b61061a1760201c565b5050505061014b565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b80516001600160a01b038116811461010357600080fd5b919050565b6000806000806080858703121561011e57600080fd5b610127856100ec565b9350610135602086016100ec565b6040860151606090960151949790965092505050565b60805160a051610b3061017e6000396000818161037c015261080801526000818161049901526107d90152610b306000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063b8046b1c11610066578063b8046b1c1461023e578063c4e4798f14610246578063ced72f8714610259578063f2fde38b1461026157600080fd5b8063715018a6146102085780638da5cb5b1461021057806394985ddd1461022b57600080fd5b80635c3e0da2116100c85780635c3e0da2146101235780635ff0c75b1461012b578063651d7aa51461014a578063692f1d121461020057600080fd5b80631ca6b9ea146100ef578063331bf125146101045780634002cc7d1461011b575b600080fd5b6101026100fd36600461094f565b610274565b005b600a545b6040519081526020015b60405180910390f35b6101026102ac565b6101026102f5565b61013a60045460ff1660011490565b6040519015158152602001610112565b6101c261015836600461094f565b60408051608080820183526000808352602080840182905283850182905260609384018290529481526008855283902083519182018452805460ff808216845261010090910416948201949094526001840154928101929092526002909201549181019190915290565b6040516101129190600060808201905060ff835116825260ff6020840151166020830152604083015160408301526060830151606083015292915050565b61010861032b565b61010261033b565b6001546040516001600160a01b039091168152602001610112565b610102610239366004610968565b610371565b600354610108565b61010261025436600461094f565b6103f7565b600b54610108565b61010261026f36600461098a565b610582565b6001546001600160a01b031633146102a75760405162461bcd60e51b815260040161029e906109ba565b60405180910390fd5b600355565b6001546001600160a01b031633146102d65760405162461bcd60e51b815260040161029e906109ba565b6004805460ff191660011790556002546102f090426109ef565b600555565b6001546001600160a01b0316331461031f5760405162461bcd60e51b815260040161029e906109ba565b6004805460ff19169055565b600061033660095490565b905090565b6001546001600160a01b031633146103655760405162461bcd60e51b815260040161029e906109ba565b61036f6000610623565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103e95760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640161029e565b6103f38282610675565b5050565b60008181526006602052604090205460ff161561043c5760405162461bcd60e51b81526020600482015260036024820152624b414560e81b604482015260640161029e565b60045460ff166001146104775760405162461bcd60e51b81526020600482015260036024820152624d505360e81b604482015260640161029e565b42600554111561054c57600b546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050c9190610a15565b10156105405760405162461bcd60e51b81526020600482015260036024820152624e454360e81b604482015260640161029e565b61054981610738565b50565b6105546102f5565b60405162461bcd60e51b81526020600482015260036024820152624d505360e81b604482015260640161029e565b6001546001600160a01b031633146105ac5760405162461bcd60e51b815260040161029e906109ba565b6001600160a01b0381166106115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161029e565b61054981610623565b80546001019055565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008061068160095490565b60035461068e9190610a44565b9050600a81101561069d5750600a5b60006106aa606485610a58565b6106b59060016109ef565b90508082106106c757600192506106cc565b600292505b60008581526007602090815260408083208054845260068352818420805460ff19166001908117909155905484526008909252909120805461050061ffff1990911660ff871617178155908101859055426002820155610730600980546001019055565b505050505050565b600061074360095490565b6003546107509190610a44565b9050606481106107af576000828152600660209081526040808320805460ff1916600190811790915560089092528220805461050161ffff19909116178155908101919091554260028201556107aa600980546001019055565b505050565b60006107bf600a54600b546107d5565b6000908152600760205260409020839055505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610845929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161087293929190610a6c565b6020604051808303816000875af1158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b59190610ad8565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a09091019092528151918301919091208684529290915261090f9060016109ef565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b60006020828403121561096157600080fd5b5035919050565b6000806040838503121561097b57600080fd5b50508035926020909101359150565b60006020828403121561099c57600080fd5b81356001600160a01b03811681146109b357600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610a1057634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610a2757600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082610a5357610a53610a2e565b500490565b600082610a6757610a67610a2e565b500690565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b81811015610aae57858101830151858201608001528201610a92565b81811115610ac0576000608083870101525b50601f01601f19169290920160800195945050505050565b600060208284031215610aea57600080fd5b815180151581146109b357600080fdfea26469706673582212205417b20e400f218864a4d045bc5c941a42a99d7bdbb031f8902c79c92d34e1fc64736f6c634300080b0033";

type RandomnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Randomness__factory extends ContractFactory {
  constructor(...args: RandomnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Randomness";
  }

  deploy(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Randomness> {
    return super.deploy(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      overrides || {}
    ) as Promise<Randomness>;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      overrides || {}
    );
  }
  attach(address: string): Randomness {
    return super.attach(address) as Randomness;
  }
  connect(signer: Signer): Randomness__factory {
    return super.connect(signer) as Randomness__factory;
  }
  static readonly contractName: "Randomness";
  public readonly contractName: "Randomness";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomnessInterface {
    return new utils.Interface(_abi) as RandomnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Randomness {
    return new Contract(address, _abi, signerOrProvider) as Randomness;
  }
}
