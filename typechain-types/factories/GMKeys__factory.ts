/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GMKeys, GMKeysInterface } from "../GMKeys";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCount",
        type: "uint256",
      },
    ],
    name: "MintKeys",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address",
        name: "currentAddress",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "currentUnit",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burnKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintedKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneAddress",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currentAddress",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "currentUnit",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct GMKeys.AddressStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneTicket",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "mintKeys",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "mintTestKeys",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "epoch",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalKeys",
        type: "uint256",
      },
    ],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526127106009556000600a819055600b55600c805460ff191690553480156200002b57600080fd5b50604051620031bb380380620031bb8339810160408190526200004e9162000208565b604080518082018252600f81526e11d352d95e5cc8189e481391951e15608a1b602080830191825283518085019094526006845265474d4b45595360d01b908401528151919291620000a3916000916200014c565b508051620000b99060019060208401906200014c565b505050620000d6620000d0620000f660201b60201c565b620000fa565b8151620000eb9060079060208501906200014c565b50600855506200032a565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200015a90620002ed565b90600052602060002090601f0160209004810192826200017e5760008555620001c9565b82601f106200019957805160ff1916838001178555620001c9565b82800160010185558215620001c9579182015b82811115620001c9578251825591602001919060010190620001ac565b50620001d7929150620001db565b5090565b5b80821115620001d75760008155600101620001dc565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200021c57600080fd5b82516001600160401b03808211156200023457600080fd5b818501915085601f8301126200024957600080fd5b8151818111156200025e576200025e620001f2565b604051601f8201601f19908116603f01168101908382118183101715620002895762000289620001f2565b81604052828152602093508884848701011115620002a657600080fd5b600091505b82821015620002ca5784820184015181830185015290830190620002ab565b82821115620002dc5760008484830101525b969092015195979596505050505050565b600181811c908216806200030257607f821691505b602082108114156200032457634e487b7160e01b600052602260045260246000fd5b50919050565b612e81806200033a6000396000f3fe60806040526004361061020f5760003560e01c80636bd449aa11610118578063b8046b1c116100a0578063c87b56dd1161006f578063c87b56dd14610680578063df0270e1146106a0578063e08c7082146106b3578063e985e9c5146106d3578063f2fde38b1461071c57600080fd5b8063b8046b1c1461058d578063b88d4fde146105a2578063bbdaea6b146105c2578063bdfe7d47146105f157600080fd5b806382831721116100e757806382831721146105125780638da5cb5b1461052557806395d89b411461054357806398d5fdca14610558578063a22cb4651461056d57600080fd5b80636bd449aa1461047257806370a08231146104c8578063714c5398146104e8578063715018a6146104fd57600080fd5b80633ccfd60b1161019b5780635ff0c75b1161016a5780635ff0c75b146103df5780636352211e146103fb57806363ba31cf1461041b57806364d689881461043d578063692f1d121461045d57600080fd5b80633ccfd60b1461038257806342842e0e1461038a57806342966c68146103aa5780635c3e0da2146103ca57600080fd5b806308e4c25f116101e257806308e4c25f146102c5578063095ea7b3146102f25780632294bf4d1461031257806323b872dd14610331578063265aa6211461035157600080fd5b806301ffc9a71461021457806302a7e3a31461024957806306fdde031461026b578063081812fc1461028d575b600080fd5b34801561022057600080fd5b5061023461022f366004612567565b61073c565b60405190151581526020015b60405180910390f35b34801561025557600080fd5b50610269610264366004612584565b61078e565b005b34801561027757600080fd5b506102806107d8565b60405161024091906125f5565b34801561029957600080fd5b506102ad6102a8366004612584565b61086a565b6040516001600160a01b039091168152602001610240565b3480156102d157600080fd5b506102e56102e0366004612584565b6108f2565b6040516102409190612659565b3480156102fe57600080fd5b5061026961030d366004612688565b610a64565b34801561031e57600080fd5b50600b545b604051908152602001610240565b34801561033d57600080fd5b5061026961034c3660046126b2565b610b7a565b34801561035d57600080fd5b5061037161036c366004612584565b610bac565b6040516102409594939291906126ee565b610269610c81565b34801561039657600080fd5b506102696103a53660046126b2565b610cde565b3480156103b657600080fd5b506102696103c5366004612584565b610cf9565b3480156103d657600080fd5b50610269610d73565b3480156103eb57600080fd5b50610234600c5460ff1660011490565b34801561040757600080fd5b506102ad610416366004612584565b610da9565b34801561042757600080fd5b50610430610e20565b6040516102409190612729565b34801561044957600080fd5b50610269610458366004612584565b610f45565b34801561046957600080fd5b50610323610ff2565b34801561047e57600080fd5b5061049261048d366004612858565b611002565b6040805182516001600160a01b031681526020808401516001600160801b03169082015291810151151590820152606001610240565b3480156104d457600080fd5b506103236104e336600461288d565b61107c565b3480156104f457600080fd5b50610280611103565b34801561050957600080fd5b50610269611112565b6102696105203660046128b7565b611148565b34801561053157600080fd5b506006546001600160a01b03166102ad565b34801561054f57600080fd5b506102806114c9565b34801561056457600080fd5b50600854610323565b34801561057957600080fd5b50610269610588366004612928565b6114d8565b34801561059957600080fd5b50600a54610323565b3480156105ae57600080fd5b506102696105bd366004612964565b6114e3565b3480156105ce57600080fd5b506105e26105dd3660046129e0565b61151b565b60405161024093929190612a2e565b3480156105fd57600080fd5b5061065161060c366004612858565b8051602081830181018051600d82529282019190930120915280546001909101546001600160a01b03909116906001600160801b03811690600160801b900460ff1683565b604080516001600160a01b0390941684526001600160801b039092166020840152151590820152606001610240565b34801561068c57600080fd5b5061028061069b366004612584565b6115a7565b6102696106ae3660046128b7565b611672565b3480156106bf57600080fd5b506102696106ce3660046126b2565b6119a8565b3480156106df57600080fd5b506102346106ee366004612a56565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561072857600080fd5b5061026961073736600461288d565b611a32565b60006001600160e01b031982166380ac58cd60e01b148061076d57506001600160e01b03198216635b5e139f60e01b145b8061078857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6006546001600160a01b031633146107c15760405162461bcd60e51b81526004016107b890612a89565b60405180910390fd5b600c805460ff19166001179055600a556000600b55565b6060600080546107e790612abe565b80601f016020809104026020016040519081016040528092919081815260200182805461081390612abe565b80156108605780601f1061083557610100808354040283529160200191610860565b820191906000526020600020905b81548152906001019060200180831161084357829003601f168201915b5050505050905090565b600061087582611aca565b6108d65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107b8565b506000908152600460205260409020546001600160a01b031690565b61092d6040518060a0016040528060006001600160a01b03168152602001600081526020016060815260200160008152602001600081525090565b61093682611aca565b6109525760405162461bcd60e51b81526004016107b890612af9565b600f828154811061096557610965612b16565b90600052602060002090600502016040518060a00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600182015481526020016002820180546109c790612abe565b80601f01602080910402602001604051908101604052809291908181526020018280546109f390612abe565b8015610a405780601f10610a1557610100808354040283529160200191610a40565b820191906000526020600020905b815481529060010190602001808311610a2357829003601f168201915b50505050508152602001600382015481526020016004820154815250509050919050565b6000610a6f82610da9565b9050806001600160a01b0316836001600160a01b03161415610add5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016107b8565b336001600160a01b0382161480610af95750610af981336106ee565b610b6b5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016107b8565b610b758383611ae7565b505050565b610b85335b82611b55565b610ba15760405162461bcd60e51b81526004016107b890612b2c565b610b75838383611c3f565b600f8181548110610bbc57600080fd5b60009182526020909120600590910201805460018201546002830180546001600160a01b039093169450909291610bf290612abe565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1e90612abe565b8015610c6b5780601f10610c4057610100808354040283529160200191610c6b565b820191906000526020600020905b815481529060010190602001808311610c4e57829003601f168201915b5050505050908060030154908060040154905085565b6006546001600160a01b03163314610cab5760405162461bcd60e51b81526004016107b890612a89565b6040514790339082156108fc029083906000818181858888f19350505050158015610cda573d6000803e3d6000fd5b5050565b610b75838383604051806020016040528060008152506114e3565b610d0233610b7f565b610d675760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016107b8565b610d7081611ddb565b50565b6006546001600160a01b03163314610d9d5760405162461bcd60e51b81526004016107b890612a89565b600c805460ff19169055565b6000818152600260205260408120546001600160a01b0316806107885760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016107b8565b6060600f805480602002602001604051908101604052809291908181526020016000905b82821015610f3c5760008481526020908190206040805160a0810182526005860290920180546001600160a01b0316835260018101549383019390935260028301805492939291840191610e9790612abe565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec390612abe565b8015610f105780601f10610ee557610100808354040283529160200191610f10565b820191906000526020600020905b815481529060010190602001808311610ef357829003601f168201915b505050505081526020016003820154815260200160048201548152505081526020019060010190610e44565b50505050905090565b6006546001600160a01b03163314610f6f5760405162461bcd60e51b81526004016107b890612a89565b610f7881611aca565b610f945760405162461bcd60e51b81526004016107b890612af9565b600f8181548110610fa757610fa7612b16565b60009182526020822060059091020180546001600160a01b03191681556001810182905590610fd9600283018261247e565b50600060038201819055600490910155610d7081611ddb565b6000610ffd600e5490565b905090565b60408051606081018252600080825260208201819052818301529051600d9061102c908490612b7d565b908152604080516020928190038301812060608201835280546001600160a01b03168252600101546001600160801b03811693820193909352600160801b90920460ff1615159082015292915050565b60006001600160a01b0382166110e75760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016107b8565b506001600160a01b031660009081526003602052604090205490565b6060600780546107e790612abe565b6006546001600160a01b0316331461113c5760405162461bcd60e51b81526004016107b890612a89565b6111466000611e76565b565b600c5460ff166001146111835760405162461bcd60e51b81526020600482015260036024820152624d505360e81b60448201526064016107b8565b8060ff166008546111949190612baf565b3410156111c95760405162461bcd60e51b81526020600482015260036024820152624e454360e81b60448201526064016107b8565b8060ff166111d6600e5490565b6111e09190612bce565b60095410156112175760405162461bcd60e51b815260206004820152600360248201526226a9a960e91b60448201526064016107b8565b6060600080611226858761151b565b91945092509050600160ff831610156112675760405162461bcd60e51b8152602060048201526003602482015262272ca960e91b60448201526064016107b8565b6000600d876040516112799190612b7d565b908152604051908190036020019020600181015490915060ff600160801b90910416156113335760018101546112bc9060ff8716906001600160801b0316612be6565b6001600160801b03168360ff1610156112e75760405162461bcd60e51b81526004016107b890612c11565b60018101805460ff8716919060009061130a9084906001600160801b0316612be6565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611364565b8460ff168360ff1610156113595760405162461bcd60e51b81526004016107b890612c11565b611364888887611ec8565b60015b8560ff168160ff161161146057600f6040518060a001604052808b6001600160a01b03168152602001611399600e5490565b8152602081018890526040016113b260ff851687612bce565b815242602091820152825460018082018555600094855293829020835160059092020180546001600160a01b0319166001600160a01b0390921691909117815582820151938101939093556040820151805192939261141792600285019201906124b8565b50606082015181600301556080820151816004015550506114408961143b600e5490565b611f9a565b61144e600e80546001019055565b8061145881612c2e565b915050611367565b8560ff16600b546114719190612bce565b600b8190556040805160ff8916815260208101929092526001600160a01b038b16917f3cd3543ca4496d4ff557ba17c2e827932e1cc93e7069aadc76c1cb14ccf0a94d910160405180910390a2505050505050505050565b6060600180546107e790612abe565b610cda338383611fb4565b6114ed3383611b55565b6115095760405162461bcd60e51b81526004016107b890612b2c565b61151584848484612083565b50505050565b60606000806060600080876001600160a01b031663037bee48886040518263ffffffff1660e01b815260040161155191906125f5565b600060405180830381865afa15801561156e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115969190810190612c4e565b919750955093505050509250925092565b60606115b282611aca565b6116165760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016107b8565b6000611620611103565b90506000815111611640576040518060200160405280600081525061166b565b8061164a846120b6565b60405160200161165b929190612ce5565b6040516020818303038152906040525b9392505050565b600c5460ff166001146116ad5760405162461bcd60e51b81526020600482015260036024820152624d505360e81b60448201526064016107b8565b8060ff166008546116be9190612baf565b3410156116f35760405162461bcd60e51b81526020600482015260036024820152624e454360e81b60448201526064016107b8565b8060ff16611700600e5490565b61170a9190612bce565b60095410156117415760405162461bcd60e51b815260206004820152600360248201526226a9a960e91b60448201526064016107b8565b611772826040518060400160405280600f81526020016e3c52414e444f4d204144445245535360881b8152506121b4565b604080518082018252600681526545504e30303160d01b602082015290516005907f960c3fe88d950ed417a398d6746908458aa42f3d073723fd9675d36015b402ab90600090600d906117c6908990612b7d565b908152604051908190036020019020600181015490915060ff600160801b90910416156118805760018101546118099060ff8716906001600160801b0316612be6565b6001600160801b03168360ff1610156118345760405162461bcd60e51b81526004016107b890612c11565b60018101805460ff871691906000906118579084906001600160801b0316612be6565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506118b1565b8460ff168360ff1610156118a65760405162461bcd60e51b81526004016107b890612c11565b6118b1888887611ec8565b60015b8560ff168160ff161161146057600f6040518060a001604052808b6001600160a01b031681526020016118e6600e5490565b8152602081018890526040016118ff60ff851687612bce565b815242602091820152825460018082018555600094855293829020835160059092020180546001600160a01b0319166001600160a01b0390921691909117815582820151938101939093556040820151805192939261196492600285019201906124b8565b50606082015181600301556080820151816004015550506119888961143b600e5490565b611996600e80546001019055565b806119a081612c2e565b9150506118b4565b6119b181611aca565b6119cd5760405162461bcd60e51b81526004016107b890612af9565b6119d681610da9565b6001600160a01b0316836001600160a01b031614611a1c5760405162461bcd60e51b815260206004820152600360248201526249474f60e81b60448201526064016107b8565b611a278260016114d8565b610b75838383610cde565b6006546001600160a01b03163314611a5c5760405162461bcd60e51b81526004016107b890612a89565b6001600160a01b038116611ac15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107b8565b610d7081611e76565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611b1c82610da9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611b6082611aca565b611bc15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107b8565b6000611bcc83610da9565b9050806001600160a01b0316846001600160a01b03161480611c075750836001600160a01b0316611bfc8461086a565b6001600160a01b0316145b80611c3757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316611c5282610da9565b6001600160a01b031614611cb65760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016107b8565b6001600160a01b038216611d185760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016107b8565b611d23600082611ae7565b6001600160a01b0383166000908152600360205260408120805460019290611d4c908490612d0b565b90915550506001600160a01b0382166000908152600360205260408120805460019290611d7a908490612bce565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611de682610da9565b9050611df3600083611ae7565b6001600160a01b0381166000908152600360205260408120805460019290611e1c908490612d0b565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600d82604051611ed89190612b7d565b9081526040519081900360200190206001015460ff600160801b9091041615611f295760405162461bcd60e51b815260206004820152600360248201526241414560e81b60448201526064016107b8565b6000600d83604051611f3b9190612b7d565b90815260405190819003602001902080546001600160a01b039095166001600160a01b0319909516949094178455506001909201805470ffffffffffffffffffffffffffffffffff191660ff90931692909217600160801b1790915550565b610cda8282604051806020016040528060008152506121f9565b816001600160a01b0316836001600160a01b031614156120165760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016107b8565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61208e848484611c3f565b61209a8484848461222c565b6115155760405162461bcd60e51b81526004016107b890612d22565b6060816120da5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561210457806120ee81612d74565b91506120fd9050600a83612da5565b91506120de565b60008167ffffffffffffffff81111561211f5761211f61278b565b6040519080825280601f01601f191660200182016040528015612149576020820181803683370190505b5090505b8415611c375761215e600183612d0b565b915061216b600a86612db9565b612176906030612bce565b60f81b81838151811061218b5761218b612b16565b60200101906001600160f81b031916908160001a9053506121ad600a86612da5565b945061214d565b610cda82826040516024016121ca929190612dcd565b60408051601f198184030181529190526020810180516001600160e01b031663759f86bb60e01b17905261232a565b612203838361234b565b612210600084848461222c565b610b755760405162461bcd60e51b81526004016107b890612d22565b60006001600160a01b0384163b1561231f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612270903390899088908890600401612df1565b6020604051808303816000875af19250505080156122ab575060408051601f3d908101601f191682019092526122a891810190612e2e565b60015b612305573d8080156122d9576040519150601f19603f3d011682016040523d82523d6000602084013e6122de565b606091505b5080516122fd5760405162461bcd60e51b81526004016107b890612d22565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611c37565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b0382166123a15760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107b8565b6123aa81611aca565b156123f75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107b8565b6001600160a01b0382166000908152600360205260408120805460019290612420908490612bce565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b50805461248a90612abe565b6000825580601f1061249a575050565b601f016020900490600052602060002090810190610d70919061253c565b8280546124c490612abe565b90600052602060002090601f0160209004810192826124e6576000855561252c565b82601f106124ff57805160ff191683800117855561252c565b8280016001018555821561252c579182015b8281111561252c578251825591602001919060010190612511565b5061253892915061253c565b5090565b5b80821115612538576000815560010161253d565b6001600160e01b031981168114610d7057600080fd5b60006020828403121561257957600080fd5b813561166b81612551565b60006020828403121561259657600080fd5b5035919050565b60005b838110156125b85781810151838201526020016125a0565b838111156115155750506000910152565b600081518084526125e181602086016020860161259d565b601f01601f19169290920160200192915050565b60208152600061166b60208301846125c9565b60018060a01b038151168252602081015160208301526000604082015160a0604085015261263960a08501826125c9565b905060608301516060850152608083015160808501528091505092915050565b60208152600061166b6020830184612608565b80356001600160a01b038116811461268357600080fd5b919050565b6000806040838503121561269b57600080fd5b6126a48361266c565b946020939093013593505050565b6000806000606084860312156126c757600080fd5b6126d08461266c565b92506126de6020850161266c565b9150604084013590509250925092565b60018060a01b038616815284602082015260a06040820152600061271560a08301866125c9565b606083019490945250608001529392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561277e57603f1988860301845261276c858351612608565b94509285019290850190600101612750565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156127ca576127ca61278b565b604052919050565b600067ffffffffffffffff8211156127ec576127ec61278b565b50601f01601f191660200190565b600061280d612808846127d2565b6127a1565b905082815283838301111561282157600080fd5b828260208301376000602084830101529392505050565b600082601f83011261284957600080fd5b61166b838335602085016127fa565b60006020828403121561286a57600080fd5b813567ffffffffffffffff81111561288157600080fd5b611c3784828501612838565b60006020828403121561289f57600080fd5b61166b8261266c565b60ff81168114610d7057600080fd5b600080600080608085870312156128cd57600080fd5b6128d68561266c565b9350602085013567ffffffffffffffff8111156128f257600080fd5b6128fe87828801612838565b93505061290d6040860161266c565b9150606085013561291d816128a8565b939692955090935050565b6000806040838503121561293b57600080fd5b6129448361266c565b91506020830135801515811461295957600080fd5b809150509250929050565b6000806000806080858703121561297a57600080fd5b6129838561266c565b93506129916020860161266c565b925060408501359150606085013567ffffffffffffffff8111156129b457600080fd5b8501601f810187136129c557600080fd5b6129d4878235602084016127fa565b91505092959194509250565b600080604083850312156129f357600080fd5b6129fc8361266c565b9150602083013567ffffffffffffffff811115612a1857600080fd5b612a2485828601612838565b9150509250929050565b606081526000612a4160608301866125c9565b60ff9490941660208301525060400152919050565b60008060408385031215612a6957600080fd5b612a728361266c565b9150612a806020840161266c565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c90821680612ad257607f821691505b60208210811415612af357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526003908201526215125160ea1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008251612b8f81846020870161259d565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612bc957612bc9612b99565b500290565b60008219821115612be157612be1612b99565b500190565b60006001600160801b03808316818516808303821115612c0857612c08612b99565b01949350505050565b602080825260039082015262414d4d60e81b604082015260600190565b600060ff821660ff811415612c4557612c45612b99565b60010192915050565b600080600060608486031215612c6357600080fd5b835167ffffffffffffffff811115612c7a57600080fd5b8401601f81018613612c8b57600080fd5b8051612c99612808826127d2565b818152876020838501011115612cae57600080fd5b612cbf82602083016020860161259d565b8095505050506020840151612cd3816128a8565b80925050604084015190509250925092565b60008351612cf781846020880161259d565b835190830190612c0881836020880161259d565b600082821015612d1d57612d1d612b99565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415612d8857612d88612b99565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082612db457612db4612d8f565b500490565b600082612dc857612dc8612d8f565b500690565b6001600160a01b0383168152604060208201819052600090611c37908301846125c9565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612e24908301846125c9565b9695505050505050565b600060208284031215612e4057600080fd5b815161166b8161255156fea2646970667358221220dae504f7cceed0fd01991e59d1ce207ab7dab932327e09cd487ab0c8844311b264736f6c634300080b0033";

type GMKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GMKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GMKeys__factory extends ContractFactory {
  constructor(...args: GMKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GMKeys";
  }

  deploy(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GMKeys> {
    return super.deploy(
      _baseTokenURI,
      _price,
      overrides || {}
    ) as Promise<GMKeys>;
  }
  getDeployTransaction(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseTokenURI, _price, overrides || {});
  }
  attach(address: string): GMKeys {
    return super.attach(address) as GMKeys;
  }
  connect(signer: Signer): GMKeys__factory {
    return super.connect(signer) as GMKeys__factory;
  }
  static readonly contractName: "GMKeys";
  public readonly contractName: "GMKeys";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GMKeysInterface {
    return new utils.Interface(_abi) as GMKeysInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GMKeys {
    return new Contract(address, _abi, signerOrProvider) as GMKeys;
  }
}
