/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GMKeys, GMKeysInterface } from "../GMKeys";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCount",
        type: "uint256",
      },
    ],
    name: "MintKeys",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address",
        name: "currentAddress",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "currentUnit",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burnKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintedKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneAddress",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currentAddress",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "currentUnit",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct GMKeys.AddressStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneTicket",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "mintKeys",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "epoch",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalKeys",
        type: "uint256",
      },
    ],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526127106009556000600a819055600b55600c805460ff191690553480156200002b57600080fd5b5060405162002de138038062002de18339810160408190526200004e9162000208565b604080518082018252600f81526e11d352d95e5cc8189e481391951e15608a1b602080830191825283518085019094526006845265474d4b45595360d01b908401528151919291620000a3916000916200014c565b508051620000b99060019060208401906200014c565b505050620000d6620000d0620000f660201b60201c565b620000fa565b8151620000eb9060079060208501906200014c565b50600855506200032a565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200015a90620002ed565b90600052602060002090601f0160209004810192826200017e5760008555620001c9565b82601f106200019957805160ff1916838001178555620001c9565b82800160010185558215620001c9579182015b82811115620001c9578251825591602001919060010190620001ac565b50620001d7929150620001db565b5090565b5b80821115620001d75760008155600101620001dc565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200021c57600080fd5b82516001600160401b03808211156200023457600080fd5b818501915085601f8301126200024957600080fd5b8151818111156200025e576200025e620001f2565b604051601f8201601f19908116603f01168101908382118183101715620002895762000289620001f2565b81604052828152602093508884848701011115620002a657600080fd5b600091505b82821015620002ca5784820184015181830185015290830190620002ab565b82821115620002dc5760008484830101525b969092015195979596505050505050565b600181811c908216806200030257607f821691505b602082108114156200032457634e487b7160e01b600052602260045260246000fd5b50919050565b612aa7806200033a6000396000f3fe6080604052600436106102045760003560e01c8063692f1d1211610118578063a22cb465116100a0578063bdfe7d471161006f578063bdfe7d47146105e6578063c87b56dd14610675578063e08c708214610695578063e985e9c5146106b5578063f2fde38b146106fe57600080fd5b8063a22cb46514610562578063b8046b1c14610582578063b88d4fde14610597578063bbdaea6b146105b757600080fd5b8063715018a6116100e7578063715018a6146104f257806382831721146105075780638da5cb5b1461051a57806395d89b411461053857806398d5fdca1461054d57600080fd5b8063692f1d12146104525780636bd449aa1461046757806370a08231146104bd578063714c5398146104dd57600080fd5b8063265aa6211161019b5780635c3e0da21161016a5780635c3e0da2146103bf5780635ff0c75b146103d45780636352211e146103f057806363ba31cf1461041057806364d689881461043257600080fd5b8063265aa621146103465780633ccfd60b1461037757806342842e0e1461037f57806342966c681461039f57600080fd5b806308e4c25f116101d757806308e4c25f146102ba578063095ea7b3146102e75780632294bf4d1461030757806323b872dd1461032657600080fd5b806301ffc9a71461020957806302a7e3a31461023e57806306fdde0314610260578063081812fc14610282575b600080fd5b34801561021557600080fd5b506102296102243660046121ce565b61071e565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b5061025e6102593660046121eb565b610770565b005b34801561026c57600080fd5b506102756107ba565b604051610235919061225c565b34801561028e57600080fd5b506102a261029d3660046121eb565b61084c565b6040516001600160a01b039091168152602001610235565b3480156102c657600080fd5b506102da6102d53660046121eb565b6108d4565b60405161023591906122c0565b3480156102f357600080fd5b5061025e6103023660046122ef565b610a46565b34801561031357600080fd5b50600b545b604051908152602001610235565b34801561033257600080fd5b5061025e610341366004612319565b610b5c565b34801561035257600080fd5b506103666103613660046121eb565b610b8e565b604051610235959493929190612355565b61025e610c63565b34801561038b57600080fd5b5061025e61039a366004612319565b610cc0565b3480156103ab57600080fd5b5061025e6103ba3660046121eb565b610cdb565b3480156103cb57600080fd5b5061025e610d55565b3480156103e057600080fd5b50610229600c5460ff1660011490565b3480156103fc57600080fd5b506102a261040b3660046121eb565b610d8b565b34801561041c57600080fd5b50610425610e02565b6040516102359190612390565b34801561043e57600080fd5b5061025e61044d3660046121eb565b610f27565b34801561045e57600080fd5b50610318610fd4565b34801561047357600080fd5b506104876104823660046124bf565b610fe4565b6040805182516001600160a01b031681526020808401516001600160801b03169082015291810151151590820152606001610235565b3480156104c957600080fd5b506103186104d83660046124f4565b61105e565b3480156104e957600080fd5b506102756110e5565b3480156104fe57600080fd5b5061025e6110f4565b61025e61051536600461251e565b61112a565b34801561052657600080fd5b506006546001600160a01b03166102a2565b34801561054457600080fd5b506102756114d7565b34801561055957600080fd5b50600854610318565b34801561056e57600080fd5b5061025e61057d36600461258f565b6114e6565b34801561058e57600080fd5b50600a54610318565b3480156105a357600080fd5b5061025e6105b23660046125cb565b6114f1565b3480156105c357600080fd5b506105d76105d2366004612647565b611529565b60405161023593929190612695565b3480156105f257600080fd5b506106466106013660046124bf565b8051602081830181018051600d82529282019190930120915280546001909101546001600160a01b03909116906001600160801b03811690600160801b900460ff1683565b604080516001600160a01b0390941684526001600160801b039092166020840152151590820152606001610235565b34801561068157600080fd5b506102756106903660046121eb565b6115b5565b3480156106a157600080fd5b5061025e6106b0366004612319565b611680565b3480156106c157600080fd5b506102296106d03660046126bd565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561070a57600080fd5b5061025e6107193660046124f4565b6116ff565b60006001600160e01b031982166380ac58cd60e01b148061074f57506001600160e01b03198216635b5e139f60e01b145b8061076a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6006546001600160a01b031633146107a35760405162461bcd60e51b815260040161079a906126f0565b60405180910390fd5b600c805460ff19166001179055600a556000600b55565b6060600080546107c990612725565b80601f01602080910402602001604051908101604052809291908181526020018280546107f590612725565b80156108425780601f1061081757610100808354040283529160200191610842565b820191906000526020600020905b81548152906001019060200180831161082557829003601f168201915b5050505050905090565b600061085782611797565b6108b85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161079a565b506000908152600460205260409020546001600160a01b031690565b61090f6040518060a0016040528060006001600160a01b03168152602001600081526020016060815260200160008152602001600081525090565b61091882611797565b6109345760405162461bcd60e51b815260040161079a90612760565b600f82815481106109475761094761277d565b90600052602060002090600502016040518060a00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600182015481526020016002820180546109a990612725565b80601f01602080910402602001604051908101604052809291908181526020018280546109d590612725565b8015610a225780601f106109f757610100808354040283529160200191610a22565b820191906000526020600020905b815481529060010190602001808311610a0557829003601f168201915b50505050508152602001600382015481526020016004820154815250509050919050565b6000610a5182610d8b565b9050806001600160a01b0316836001600160a01b03161415610abf5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161079a565b336001600160a01b0382161480610adb5750610adb81336106d0565b610b4d5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161079a565b610b5783836117b4565b505050565b610b67335b82611822565b610b835760405162461bcd60e51b815260040161079a90612793565b610b5783838361190c565b600f8181548110610b9e57600080fd5b60009182526020909120600590910201805460018201546002830180546001600160a01b039093169450909291610bd490612725565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0090612725565b8015610c4d5780601f10610c2257610100808354040283529160200191610c4d565b820191906000526020600020905b815481529060010190602001808311610c3057829003601f168201915b5050505050908060030154908060040154905085565b6006546001600160a01b03163314610c8d5760405162461bcd60e51b815260040161079a906126f0565b6040514790339082156108fc029083906000818181858888f19350505050158015610cbc573d6000803e3d6000fd5b5050565b610b57838383604051806020016040528060008152506114f1565b610ce433610b61565b610d495760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b606482015260840161079a565b610d5281611aa8565b50565b6006546001600160a01b03163314610d7f5760405162461bcd60e51b815260040161079a906126f0565b600c805460ff19169055565b6000818152600260205260408120546001600160a01b03168061076a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161079a565b6060600f805480602002602001604051908101604052809291908181526020016000905b82821015610f1e5760008481526020908190206040805160a0810182526005860290920180546001600160a01b0316835260018101549383019390935260028301805492939291840191610e7990612725565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea590612725565b8015610ef25780601f10610ec757610100808354040283529160200191610ef2565b820191906000526020600020905b815481529060010190602001808311610ed557829003601f168201915b505050505081526020016003820154815260200160048201548152505081526020019060010190610e26565b50505050905090565b6006546001600160a01b03163314610f515760405162461bcd60e51b815260040161079a906126f0565b610f5a81611797565b610f765760405162461bcd60e51b815260040161079a90612760565b600f8181548110610f8957610f8961277d565b60009182526020822060059091020180546001600160a01b03191681556001810182905590610fbb60028301826120e5565b50600060038201819055600490910155610d5281611aa8565b6000610fdf600e5490565b905090565b60408051606081018252600080825260208201819052818301529051600d9061100e9084906127e4565b908152604080516020928190038301812060608201835280546001600160a01b03168252600101546001600160801b03811693820193909352600160801b90920460ff1615159082015292915050565b60006001600160a01b0382166110c95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161079a565b506001600160a01b031660009081526003602052604090205490565b6060600780546107c990612725565b6006546001600160a01b0316331461111e5760405162461bcd60e51b815260040161079a906126f0565b6111286000611b43565b565b600c5460ff166001146111655760405162461bcd60e51b81526020600482015260036024820152624d505360e81b604482015260640161079a565b8060ff166008546111769190612816565b3410156111ab5760405162461bcd60e51b81526020600482015260036024820152624e454360e81b604482015260640161079a565b8060ff166111b8600e5490565b6111c29190612835565b60095410156111f95760405162461bcd60e51b815260206004820152600360248201526226a9a960e91b604482015260640161079a565b60606000806112088587611529565b91945092509050600160ff831610156112495760405162461bcd60e51b8152602060048201526003602482015262272ca960e91b604482015260640161079a565b6000600d8760405161125b91906127e4565b908152604051908190036020019020600181015490915060ff600160801b909104161561132b57600181015461129e9060ff8716906001600160801b031661284d565b6001600160801b03168360ff1610156112df5760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b604482015260640161079a565b60018101805460ff871691906000906113029084906001600160801b031661284d565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611372565b8460ff168360ff1610156113675760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b604482015260640161079a565b611372888887611b95565b60015b8560ff168160ff161161146e57600f6040518060a001604052808b6001600160a01b031681526020016113a7600e5490565b8152602081018890526040016113c060ff851687612835565b815242602091820152825460018082018555600094855293829020835160059092020180546001600160a01b0319166001600160a01b03909216919091178155828201519381019390935560408201518051929392611425926002850192019061211f565b506060820151816003015560808201518160040155505061144e89611449600e5490565b611c67565b61145c600e80546001019055565b8061146681612878565b915050611375565b8560ff16600b5461147f9190612835565b600b8190556040805160ff8916815260208101929092526001600160a01b038b16917f3cd3543ca4496d4ff557ba17c2e827932e1cc93e7069aadc76c1cb14ccf0a94d910160405180910390a2505050505050505050565b6060600180546107c990612725565b610cbc338383611c81565b6114fb3383611822565b6115175760405162461bcd60e51b815260040161079a90612793565b61152384848484611d50565b50505050565b60606000806060600080876001600160a01b031663037bee48886040518263ffffffff1660e01b815260040161155f919061225c565b600060405180830381865afa15801561157c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115a49190810190612898565b919750955093505050509250925092565b60606115c082611797565b6116245760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161079a565b600061162e6110e5565b9050600081511161164e5760405180602001604052806000815250611679565b8061165884611d83565b60405160200161166992919061292f565b6040516020818303038152906040525b9392505050565b61168981611797565b6116a55760405162461bcd60e51b815260040161079a90612760565b6116ae81610d8b565b6001600160a01b0316836001600160a01b0316146116f45760405162461bcd60e51b815260206004820152600360248201526249474f60e81b604482015260640161079a565b610b57838383610cc0565b6006546001600160a01b031633146117295760405162461bcd60e51b815260040161079a906126f0565b6001600160a01b03811661178e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161079a565b610d5281611b43565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906117e982610d8b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061182d82611797565b61188e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161079a565b600061189983610d8b565b9050806001600160a01b0316846001600160a01b031614806118d45750836001600160a01b03166118c98461084c565b6001600160a01b0316145b8061190457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661191f82610d8b565b6001600160a01b0316146119835760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161079a565b6001600160a01b0382166119e55760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161079a565b6119f06000826117b4565b6001600160a01b0383166000908152600360205260408120805460019290611a19908490612955565b90915550506001600160a01b0382166000908152600360205260408120805460019290611a47908490612835565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611ab382610d8b565b9050611ac06000836117b4565b6001600160a01b0381166000908152600360205260408120805460019290611ae9908490612955565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600d82604051611ba591906127e4565b9081526040519081900360200190206001015460ff600160801b9091041615611bf65760405162461bcd60e51b815260206004820152600360248201526241414560e81b604482015260640161079a565b6000600d83604051611c0891906127e4565b90815260405190819003602001902080546001600160a01b039095166001600160a01b0319909516949094178455506001909201805470ffffffffffffffffffffffffffffffffff191660ff90931692909217600160801b1790915550565b610cbc828260405180602001604052806000815250611e81565b816001600160a01b0316836001600160a01b03161415611ce35760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161079a565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611d5b84848461190c565b611d6784848484611eb4565b6115235760405162461bcd60e51b815260040161079a9061296c565b606081611da75750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611dd15780611dbb816129be565b9150611dca9050600a836129ef565b9150611dab565b60008167ffffffffffffffff811115611dec57611dec6123f2565b6040519080825280601f01601f191660200182016040528015611e16576020820181803683370190505b5090505b841561190457611e2b600183612955565b9150611e38600a86612a03565b611e43906030612835565b60f81b818381518110611e5857611e5861277d565b60200101906001600160f81b031916908160001a905350611e7a600a866129ef565b9450611e1a565b611e8b8383611fb2565b611e986000848484611eb4565b610b575760405162461bcd60e51b815260040161079a9061296c565b60006001600160a01b0384163b15611fa757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ef8903390899088908890600401612a17565b6020604051808303816000875af1925050508015611f33575060408051601f3d908101601f19168201909252611f3091810190612a54565b60015b611f8d573d808015611f61576040519150601f19603f3d011682016040523d82523d6000602084013e611f66565b606091505b508051611f855760405162461bcd60e51b815260040161079a9061296c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611904565b506001949350505050565b6001600160a01b0382166120085760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161079a565b61201181611797565b1561205e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161079a565b6001600160a01b0382166000908152600360205260408120805460019290612087908490612835565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b5080546120f190612725565b6000825580601f10612101575050565b601f016020900490600052602060002090810190610d5291906121a3565b82805461212b90612725565b90600052602060002090601f01602090048101928261214d5760008555612193565b82601f1061216657805160ff1916838001178555612193565b82800160010185558215612193579182015b82811115612193578251825591602001919060010190612178565b5061219f9291506121a3565b5090565b5b8082111561219f57600081556001016121a4565b6001600160e01b031981168114610d5257600080fd5b6000602082840312156121e057600080fd5b8135611679816121b8565b6000602082840312156121fd57600080fd5b5035919050565b60005b8381101561221f578181015183820152602001612207565b838111156115235750506000910152565b60008151808452612248816020860160208601612204565b601f01601f19169290920160200192915050565b6020815260006116796020830184612230565b60018060a01b038151168252602081015160208301526000604082015160a060408501526122a060a0850182612230565b905060608301516060850152608083015160808501528091505092915050565b602081526000611679602083018461226f565b80356001600160a01b03811681146122ea57600080fd5b919050565b6000806040838503121561230257600080fd5b61230b836122d3565b946020939093013593505050565b60008060006060848603121561232e57600080fd5b612337846122d3565b9250612345602085016122d3565b9150604084013590509250925092565b60018060a01b038616815284602082015260a06040820152600061237c60a0830186612230565b606083019490945250608001529392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156123e557603f198886030184526123d385835161226f565b945092850192908501906001016123b7565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612431576124316123f2565b604052919050565b600067ffffffffffffffff821115612453576124536123f2565b50601f01601f191660200190565b600061247461246f84612439565b612408565b905082815283838301111561248857600080fd5b828260208301376000602084830101529392505050565b600082601f8301126124b057600080fd5b61167983833560208501612461565b6000602082840312156124d157600080fd5b813567ffffffffffffffff8111156124e857600080fd5b6119048482850161249f565b60006020828403121561250657600080fd5b611679826122d3565b60ff81168114610d5257600080fd5b6000806000806080858703121561253457600080fd5b61253d856122d3565b9350602085013567ffffffffffffffff81111561255957600080fd5b6125658782880161249f565b935050612574604086016122d3565b915060608501356125848161250f565b939692955090935050565b600080604083850312156125a257600080fd5b6125ab836122d3565b9150602083013580151581146125c057600080fd5b809150509250929050565b600080600080608085870312156125e157600080fd5b6125ea856122d3565b93506125f8602086016122d3565b925060408501359150606085013567ffffffffffffffff81111561261b57600080fd5b8501601f8101871361262c57600080fd5b61263b87823560208401612461565b91505092959194509250565b6000806040838503121561265a57600080fd5b612663836122d3565b9150602083013567ffffffffffffffff81111561267f57600080fd5b61268b8582860161249f565b9150509250929050565b6060815260006126a86060830186612230565b60ff9490941660208301525060400152919050565b600080604083850312156126d057600080fd5b6126d9836122d3565b91506126e7602084016122d3565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061273957607f821691505b6020821081141561275a57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526003908201526215125160ea1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082516127f6818460208701612204565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561283057612830612800565b500290565b6000821982111561284857612848612800565b500190565b60006001600160801b0380831681851680830382111561286f5761286f612800565b01949350505050565b600060ff821660ff81141561288f5761288f612800565b60010192915050565b6000806000606084860312156128ad57600080fd5b835167ffffffffffffffff8111156128c457600080fd5b8401601f810186136128d557600080fd5b80516128e361246f82612439565b8181528760208385010111156128f857600080fd5b612909826020830160208601612204565b809550505050602084015161291d8161250f565b80925050604084015190509250925092565b60008351612941818460208801612204565b83519083019061286f818360208801612204565b60008282101561296757612967612800565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006000198214156129d2576129d2612800565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826129fe576129fe6129d9565b500490565b600082612a1257612a126129d9565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a4a90830184612230565b9695505050505050565b600060208284031215612a6657600080fd5b8151611679816121b856fea2646970667358221220bbf8926d9f2cd648c4ff727c8dcf01eb312241a06657c95ee7f84c592a8e8a4764736f6c634300080b0033";

type GMKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GMKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GMKeys__factory extends ContractFactory {
  constructor(...args: GMKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GMKeys";
  }

  deploy(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GMKeys> {
    return super.deploy(
      _baseTokenURI,
      _price,
      overrides || {}
    ) as Promise<GMKeys>;
  }
  getDeployTransaction(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseTokenURI, _price, overrides || {});
  }
  attach(address: string): GMKeys {
    return super.attach(address) as GMKeys;
  }
  connect(signer: Signer): GMKeys__factory {
    return super.connect(signer) as GMKeys__factory;
  }
  static readonly contractName: "GMKeys";
  public readonly contractName: "GMKeys";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GMKeysInterface {
    return new utils.Interface(_abi) as GMKeysInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GMKeys {
    return new Contract(address, _abi, signerOrProvider) as GMKeys;
  }
}
