/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GMKeys, GMKeysInterface } from "../GMKeys";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address",
        name: "currentAddress",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "currentUnit",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burnKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintedKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneAddress",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currentAddress",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "currentUnit",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct GMKeys.AddressStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneTicket",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "mintKeys",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "epoch",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalKeys",
        type: "uint256",
      },
    ],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526127106009556000600a819055600b55600c805460ff191690553480156200002b57600080fd5b5060405162002cdd38038062002cdd8339810160408190526200004e9162000208565b604080518082018252600f81526e11d352d95e5cc8189e481391951e15608a1b602080830191825283518085019094526006845265474d4b45595360d01b908401528151919291620000a3916000916200014c565b508051620000b99060019060208401906200014c565b505050620000d6620000d0620000f660201b60201c565b620000fa565b8151620000eb9060079060208501906200014c565b50600855506200032a565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200015a90620002ed565b90600052602060002090601f0160209004810192826200017e5760008555620001c9565b82601f106200019957805160ff1916838001178555620001c9565b82800160010185558215620001c9579182015b82811115620001c9578251825591602001919060010190620001ac565b50620001d7929150620001db565b5090565b5b80821115620001d75760008155600101620001dc565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200021c57600080fd5b82516001600160401b03808211156200023457600080fd5b818501915085601f8301126200024957600080fd5b8151818111156200025e576200025e620001f2565b604051601f8201601f19908116603f01168101908382118183101715620002895762000289620001f2565b81604052828152602093508884848701011115620002a657600080fd5b600091505b82821015620002ca5784820184015181830185015290830190620002ab565b82821115620002dc5760008484830101525b969092015195979596505050505050565b600181811c908216806200030257607f821691505b602082108114156200032457634e487b7160e01b600052602260045260246000fd5b50919050565b6129a3806200033a6000396000f3fe6080604052600436106102045760003560e01c806364d689881161011857806398d5fdca116100a0578063bbdaea6b1161006f578063bbdaea6b146105b7578063bdfe7d47146105e6578063c87b56dd14610675578063e985e9c514610695578063f2fde38b146106de57600080fd5b806398d5fdca1461054d578063a22cb46514610562578063b8046b1c14610582578063b88d4fde1461059757600080fd5b8063714c5398116100e7578063714c5398146104dd578063715018a6146104f257806382831721146105075780638da5cb5b1461051a57806395d89b411461053857600080fd5b806364d6898814610307578063692f1d12146104525780636bd449aa1461046757806370a08231146104bd57600080fd5b806323b872dd1161019b57806342966c681161016a57806342966c68146103bf5780635c3e0da2146103df5780635ff0c75b146103f45780636352211e1461041057806363ba31cf1461043057600080fd5b806323b872dd14610346578063265aa621146103665780633ccfd60b1461039757806342842e0e1461039f57600080fd5b806308e4c25f116101d757806308e4c25f146102ba578063095ea7b3146102e75780632199a36b146103075780632294bf4d1461032757600080fd5b806301ffc9a71461020957806302a7e3a31461023e57806306fdde0314610260578063081812fc14610282575b600080fd5b34801561021557600080fd5b506102296102243660046120e7565b6106fe565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b5061025e610259366004612104565b610750565b005b34801561026c57600080fd5b5061027561079a565b6040516102359190612175565b34801561028e57600080fd5b506102a261029d366004612104565b61082c565b6040516001600160a01b039091168152602001610235565b3480156102c657600080fd5b506102da6102d5366004612104565b6108b4565b60405161023591906121d9565b3480156102f357600080fd5b5061025e610302366004612208565b610a3c565b34801561031357600080fd5b5061025e610322366004612104565b610b52565b34801561033357600080fd5b50600b545b604051908152602001610235565b34801561035257600080fd5b5061025e610361366004612232565b610bee565b34801561037257600080fd5b50610386610381366004612104565b610c20565b60405161023595949392919061226e565b61025e610cf5565b3480156103ab57600080fd5b5061025e6103ba366004612232565b610d52565b3480156103cb57600080fd5b5061025e6103da366004612104565b610d6d565b3480156103eb57600080fd5b5061025e610de4565b34801561040057600080fd5b50610229600c5460ff1660011490565b34801561041c57600080fd5b506102a261042b366004612104565b610e1a565b34801561043c57600080fd5b50610445610e91565b60405161023591906122a9565b34801561045e57600080fd5b50610338610fb6565b34801561047357600080fd5b506104876104823660046123d8565b610fc6565b6040805182516001600160a01b031681526020808401516001600160801b03169082015291810151151590820152606001610235565b3480156104c957600080fd5b506103386104d836600461240d565b611040565b3480156104e957600080fd5b506102756110c7565b3480156104fe57600080fd5b5061025e6110d6565b61025e610515366004612437565b61110c565b34801561052657600080fd5b506006546001600160a01b03166102a2565b34801561054457600080fd5b5061027561146f565b34801561055957600080fd5b50600854610338565b34801561056e57600080fd5b5061025e61057d3660046124a8565b61147e565b34801561058e57600080fd5b50600a54610338565b3480156105a357600080fd5b5061025e6105b23660046124e4565b611489565b3480156105c357600080fd5b506105d76105d2366004612560565b6114c1565b604051610235939291906125ae565b3480156105f257600080fd5b506106466106013660046123d8565b8051602081830181018051600d82529282019190930120915280546001909101546001600160a01b03909116906001600160801b03811690600160801b900460ff1683565b604080516001600160a01b0390941684526001600160801b039092166020840152151590820152606001610235565b34801561068157600080fd5b50610275610690366004612104565b61154d565b3480156106a157600080fd5b506102296106b03660046125d6565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156106ea57600080fd5b5061025e6106f936600461240d565b611618565b60006001600160e01b031982166380ac58cd60e01b148061072f57506001600160e01b03198216635b5e139f60e01b145b8061074a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6006546001600160a01b031633146107835760405162461bcd60e51b815260040161077a90612609565b60405180910390fd5b600c805460ff19166001179055600a556000600b55565b6060600080546107a99061263e565b80601f01602080910402602001604051908101604052809291908181526020018280546107d59061263e565b80156108225780601f106107f757610100808354040283529160200191610822565b820191906000526020600020905b81548152906001019060200180831161080557829003601f168201915b5050505050905090565b6000610837826116b0565b6108985760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161077a565b506000908152600460205260409020546001600160a01b031690565b6108ef6040518060a0016040528060006001600160a01b03168152602001600081526020016060815260200160008152602001600081525090565b6108f8826116b0565b61092a5760405162461bcd60e51b815260206004820152600360248201526215125160ea1b604482015260640161077a565b600f828154811061093d5761093d612679565b90600052602060002090600502016040518060a00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820154815260200160028201805461099f9061263e565b80601f01602080910402602001604051908101604052809291908181526020018280546109cb9061263e565b8015610a185780601f106109ed57610100808354040283529160200191610a18565b820191906000526020600020905b8154815290600101906020018083116109fb57829003601f168201915b50505050508152602001600382015481526020016004820154815250509050919050565b6000610a4782610e1a565b9050806001600160a01b0316836001600160a01b03161415610ab55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161077a565b336001600160a01b0382161480610ad15750610ad181336106b0565b610b435760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161077a565b610b4d83836116cd565b505050565b610b5b816116b0565b610b8d5760405162461bcd60e51b815260206004820152600360248201526215125160ea1b604482015260640161077a565b600f8181548110610ba057610ba0612679565b60009182526020822060059091020180546001600160a01b03191681556001810182905590610bd26002830182611ffe565b50600060038201819055600490910155610beb8161173b565b50565b610bf9335b826117d6565b610c155760405162461bcd60e51b815260040161077a9061268f565b610b4d8383836118c0565b600f8181548110610c3057600080fd5b60009182526020909120600590910201805460018201546002830180546001600160a01b039093169450909291610c669061263e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c929061263e565b8015610cdf5780601f10610cb457610100808354040283529160200191610cdf565b820191906000526020600020905b815481529060010190602001808311610cc257829003601f168201915b5050505050908060030154908060040154905085565b6006546001600160a01b03163314610d1f5760405162461bcd60e51b815260040161077a90612609565b6040514790339082156108fc029083906000818181858888f19350505050158015610d4e573d6000803e3d6000fd5b5050565b610b4d83838360405180602001604052806000815250611489565b610d7633610bf3565b610ddb5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b606482015260840161077a565b610beb8161173b565b6006546001600160a01b03163314610e0e5760405162461bcd60e51b815260040161077a90612609565b600c805460ff19169055565b6000818152600260205260408120546001600160a01b03168061074a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161077a565b6060600f805480602002602001604051908101604052809291908181526020016000905b82821015610fad5760008481526020908190206040805160a0810182526005860290920180546001600160a01b0316835260018101549383019390935260028301805492939291840191610f089061263e565b80601f0160208091040260200160405190810160405280929190818152602001828054610f349061263e565b8015610f815780601f10610f5657610100808354040283529160200191610f81565b820191906000526020600020905b815481529060010190602001808311610f6457829003601f168201915b505050505081526020016003820154815260200160048201548152505081526020019060010190610eb5565b50505050905090565b6000610fc1600e5490565b905090565b60408051606081018252600080825260208201819052818301529051600d90610ff09084906126e0565b908152604080516020928190038301812060608201835280546001600160a01b03168252600101546001600160801b03811693820193909352600160801b90920460ff1615159082015292915050565b60006001600160a01b0382166110ab5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161077a565b506001600160a01b031660009081526003602052604090205490565b6060600780546107a99061263e565b6006546001600160a01b031633146111005760405162461bcd60e51b815260040161077a90612609565b61110a6000611a5c565b565b600c5460ff166001146111475760405162461bcd60e51b81526020600482015260036024820152624d505360e81b604482015260640161077a565b8060ff166008546111589190612712565b34101561118d5760405162461bcd60e51b81526020600482015260036024820152624e454360e81b604482015260640161077a565b8060ff1661119a600e5490565b6111a49190612731565b60095410156111db5760405162461bcd60e51b815260206004820152600360248201526226a9a960e91b604482015260640161077a565b60606000806111ea85876114c1565b91945092509050600160ff8316101561122b5760405162461bcd60e51b8152602060048201526003602482015262272ca960e91b604482015260640161077a565b6000600d8760405161123d91906126e0565b908152604051908190036020019020600181015490915060ff600160801b909104161561130d5760018101546112809060ff8716906001600160801b0316612749565b6001600160801b03168360ff1610156112c15760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b604482015260640161077a565b60018101805460ff871691906000906112e49084906001600160801b0316612749565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611354565b8460ff168360ff1610156113495760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b604482015260640161077a565b611354888887611aae565b60015b8560ff168160ff161161145057600f6040518060a001604052808b6001600160a01b03168152602001611389600e5490565b8152602081018890526040016113a260ff851687612731565b815242602091820152825460018082018555600094855293829020835160059092020180546001600160a01b0319166001600160a01b039092169190911781558282015193810193909355604082015180519293926114079260028501920190612038565b50606082015181600301556080820151816004015550506114308961142b600e5490565b611b80565b61143e600e80546001019055565b8061144881612774565b915050611357565b8560ff16600b546114619190612731565b600b55505050505050505050565b6060600180546107a99061263e565b610d4e338383611b9a565b61149333836117d6565b6114af5760405162461bcd60e51b815260040161077a9061268f565b6114bb84848484611c69565b50505050565b60606000806060600080876001600160a01b031663037bee48886040518263ffffffff1660e01b81526004016114f79190612175565b600060405180830381865afa158015611514573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261153c9190810190612794565b919750955093505050509250925092565b6060611558826116b0565b6115bc5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161077a565b60006115c66110c7565b905060008151116115e65760405180602001604052806000815250611611565b806115f084611c9c565b60405160200161160192919061282b565b6040516020818303038152906040525b9392505050565b6006546001600160a01b031633146116425760405162461bcd60e51b815260040161077a90612609565b6001600160a01b0381166116a75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161077a565b610beb81611a5c565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061170282610e1a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061174682610e1a565b90506117536000836116cd565b6001600160a01b038116600090815260036020526040812080546001929061177c908490612851565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006117e1826116b0565b6118425760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161077a565b600061184d83610e1a565b9050806001600160a01b0316846001600160a01b031614806118885750836001600160a01b031661187d8461082c565b6001600160a01b0316145b806118b857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166118d382610e1a565b6001600160a01b0316146119375760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161077a565b6001600160a01b0382166119995760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161077a565b6119a46000826116cd565b6001600160a01b03831660009081526003602052604081208054600192906119cd908490612851565b90915550506001600160a01b03821660009081526003602052604081208054600192906119fb908490612731565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600d82604051611abe91906126e0565b9081526040519081900360200190206001015460ff600160801b9091041615611b0f5760405162461bcd60e51b815260206004820152600360248201526241414560e81b604482015260640161077a565b6000600d83604051611b2191906126e0565b90815260405190819003602001902080546001600160a01b039095166001600160a01b0319909516949094178455506001909201805470ffffffffffffffffffffffffffffffffff191660ff90931692909217600160801b1790915550565b610d4e828260405180602001604052806000815250611d9a565b816001600160a01b0316836001600160a01b03161415611bfc5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161077a565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611c748484846118c0565b611c8084848484611dcd565b6114bb5760405162461bcd60e51b815260040161077a90612868565b606081611cc05750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611cea5780611cd4816128ba565b9150611ce39050600a836128eb565b9150611cc4565b60008167ffffffffffffffff811115611d0557611d0561230b565b6040519080825280601f01601f191660200182016040528015611d2f576020820181803683370190505b5090505b84156118b857611d44600183612851565b9150611d51600a866128ff565b611d5c906030612731565b60f81b818381518110611d7157611d71612679565b60200101906001600160f81b031916908160001a905350611d93600a866128eb565b9450611d33565b611da48383611ecb565b611db16000848484611dcd565b610b4d5760405162461bcd60e51b815260040161077a90612868565b60006001600160a01b0384163b15611ec057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611e11903390899088908890600401612913565b6020604051808303816000875af1925050508015611e4c575060408051601f3d908101601f19168201909252611e4991810190612950565b60015b611ea6573d808015611e7a576040519150601f19603f3d011682016040523d82523d6000602084013e611e7f565b606091505b508051611e9e5760405162461bcd60e51b815260040161077a90612868565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506118b8565b506001949350505050565b6001600160a01b038216611f215760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161077a565b611f2a816116b0565b15611f775760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161077a565b6001600160a01b0382166000908152600360205260408120805460019290611fa0908490612731565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b50805461200a9061263e565b6000825580601f1061201a575050565b601f016020900490600052602060002090810190610beb91906120bc565b8280546120449061263e565b90600052602060002090601f01602090048101928261206657600085556120ac565b82601f1061207f57805160ff19168380011785556120ac565b828001600101855582156120ac579182015b828111156120ac578251825591602001919060010190612091565b506120b89291506120bc565b5090565b5b808211156120b857600081556001016120bd565b6001600160e01b031981168114610beb57600080fd5b6000602082840312156120f957600080fd5b8135611611816120d1565b60006020828403121561211657600080fd5b5035919050565b60005b83811015612138578181015183820152602001612120565b838111156114bb5750506000910152565b6000815180845261216181602086016020860161211d565b601f01601f19169290920160200192915050565b6020815260006116116020830184612149565b60018060a01b038151168252602081015160208301526000604082015160a060408501526121b960a0850182612149565b905060608301516060850152608083015160808501528091505092915050565b6020815260006116116020830184612188565b80356001600160a01b038116811461220357600080fd5b919050565b6000806040838503121561221b57600080fd5b612224836121ec565b946020939093013593505050565b60008060006060848603121561224757600080fd5b612250846121ec565b925061225e602085016121ec565b9150604084013590509250925092565b60018060a01b038616815284602082015260a06040820152600061229560a0830186612149565b606083019490945250608001529392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156122fe57603f198886030184526122ec858351612188565b945092850192908501906001016122d0565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561234a5761234a61230b565b604052919050565b600067ffffffffffffffff82111561236c5761236c61230b565b50601f01601f191660200190565b600061238d61238884612352565b612321565b90508281528383830111156123a157600080fd5b828260208301376000602084830101529392505050565b600082601f8301126123c957600080fd5b6116118383356020850161237a565b6000602082840312156123ea57600080fd5b813567ffffffffffffffff81111561240157600080fd5b6118b8848285016123b8565b60006020828403121561241f57600080fd5b611611826121ec565b60ff81168114610beb57600080fd5b6000806000806080858703121561244d57600080fd5b612456856121ec565b9350602085013567ffffffffffffffff81111561247257600080fd5b61247e878288016123b8565b93505061248d604086016121ec565b9150606085013561249d81612428565b939692955090935050565b600080604083850312156124bb57600080fd5b6124c4836121ec565b9150602083013580151581146124d957600080fd5b809150509250929050565b600080600080608085870312156124fa57600080fd5b612503856121ec565b9350612511602086016121ec565b925060408501359150606085013567ffffffffffffffff81111561253457600080fd5b8501601f8101871361254557600080fd5b6125548782356020840161237a565b91505092959194509250565b6000806040838503121561257357600080fd5b61257c836121ec565b9150602083013567ffffffffffffffff81111561259857600080fd5b6125a4858286016123b8565b9150509250929050565b6060815260006125c16060830186612149565b60ff9490941660208301525060400152919050565b600080604083850312156125e957600080fd5b6125f2836121ec565b9150612600602084016121ec565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061265257607f821691505b6020821081141561267357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082516126f281846020870161211d565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561272c5761272c6126fc565b500290565b60008219821115612744576127446126fc565b500190565b60006001600160801b0380831681851680830382111561276b5761276b6126fc565b01949350505050565b600060ff821660ff81141561278b5761278b6126fc565b60010192915050565b6000806000606084860312156127a957600080fd5b835167ffffffffffffffff8111156127c057600080fd5b8401601f810186136127d157600080fd5b80516127df61238882612352565b8181528760208385010111156127f457600080fd5b61280582602083016020860161211d565b809550505050602084015161281981612428565b80925050604084015190509250925092565b6000835161283d81846020880161211d565b83519083019061276b81836020880161211d565b600082821015612863576128636126fc565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006000198214156128ce576128ce6126fc565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826128fa576128fa6128d5565b500490565b60008261290e5761290e6128d5565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061294690830184612149565b9695505050505050565b60006020828403121561296257600080fd5b8151611611816120d156fea2646970667358221220e025b052a9c20d66f23a75a5487cbfab8d77470d093bc6762b0287635d8462db64736f6c634300080b0033";

type GMKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GMKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GMKeys__factory extends ContractFactory {
  constructor(...args: GMKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GMKeys";
  }

  deploy(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GMKeys> {
    return super.deploy(
      _baseTokenURI,
      _price,
      overrides || {}
    ) as Promise<GMKeys>;
  }
  getDeployTransaction(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseTokenURI, _price, overrides || {});
  }
  attach(address: string): GMKeys {
    return super.attach(address) as GMKeys;
  }
  connect(signer: Signer): GMKeys__factory {
    return super.connect(signer) as GMKeys__factory;
  }
  static readonly contractName: "GMKeys";
  public readonly contractName: "GMKeys";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GMKeysInterface {
    return new utils.Interface(_abi) as GMKeysInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GMKeys {
    return new Contract(address, _abi, signerOrProvider) as GMKeys;
  }
}
