/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GMKeys, GMKeysInterface } from "../GMKeys";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address",
        name: "currentAddress",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "currentUnit",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burnKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintedKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneAddress",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currentAddress",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "currentUnit",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct GMKeys.AddressStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneTicket",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "mintKeys",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "mintTestKeys",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "epoch",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalKeys",
        type: "uint256",
      },
    ],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006009819055600a55600b805460ff191690553480156200002557600080fd5b5060405162002f3238038062002f32833981016040819052620000489162000202565b604080518082018252600f81526e11d352d95e5cc8189e481391951e15608a1b602080830191825283518085019094526006845265474d4b45595360d01b9084015281519192916200009d9160009162000146565b508051620000b390600190602084019062000146565b505050620000d0620000ca620000f060201b60201c565b620000f4565b8151620000e590600790602085019062000146565b506008555062000324565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200015490620002e7565b90600052602060002090601f016020900481019282620001785760008555620001c3565b82601f106200019357805160ff1916838001178555620001c3565b82800160010185558215620001c3579182015b82811115620001c3578251825591602001919060010190620001a6565b50620001d1929150620001d5565b5090565b5b80821115620001d15760008155600101620001d6565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200021657600080fd5b82516001600160401b03808211156200022e57600080fd5b818501915085601f8301126200024357600080fd5b815181811115620002585762000258620001ec565b604051601f8201601f19908116603f01168101908382118183101715620002835762000283620001ec565b81604052828152602093508884848701011115620002a057600080fd5b600091505b82821015620002c45784820184015181830185015290830190620002a5565b82821115620002d65760008484830101525b969092015195979596505050505050565b600181811c90821680620002fc57607f821691505b602082108114156200031e57634e487b7160e01b600052602260045260246000fd5b50919050565b612bfe80620003346000396000f3fe6080604052600436106101f95760003560e01c80636bd449aa1161010d578063a22cb465116100a0578063bdfe7d471161006f578063bdfe7d47146105d3578063c87b56dd14610662578063df0270e114610682578063e985e9c514610695578063f2fde38b146106de57600080fd5b8063a22cb4651461054f578063b8046b1c1461056f578063b88d4fde14610584578063bbdaea6b146105a457600080fd5b806382831721116100dc57806382831721146104f45780638da5cb5b1461050757806395d89b411461052557806398d5fdca1461053a57600080fd5b80636bd449aa1461045457806370a08231146104aa578063714c5398146104ca578063715018a6146104df57600080fd5b8063265aa621116101905780635ff0c75b1161015f5780635ff0c75b146103c15780636352211e146103dd57806363ba31cf146103fd57806364d689881461041f578063692f1d121461043f57600080fd5b8063265aa6211461033b57806342842e0e1461036c57806342966c681461038c5780635c3e0da2146103ac57600080fd5b806308e4c25f116101cc57806308e4c25f146102af578063095ea7b3146102dc5780632294bf4d146102fc57806323b872dd1461031b57600080fd5b806301ffc9a7146101fe57806302a7e3a31461023357806306fdde0314610255578063081812fc14610277575b600080fd5b34801561020a57600080fd5b5061021e610219366004612320565b6106fe565b60405190151581526020015b60405180910390f35b34801561023f57600080fd5b5061025361024e36600461233d565b610750565b005b34801561026157600080fd5b5061026a61079a565b60405161022a91906123ae565b34801561028357600080fd5b5061029761029236600461233d565b61082c565b6040516001600160a01b03909116815260200161022a565b3480156102bb57600080fd5b506102cf6102ca36600461233d565b6108c1565b60405161022a9190612412565b3480156102e857600080fd5b506102536102f7366004612441565b610a45565b34801561030857600080fd5b50600a545b60405190815260200161022a565b34801561032757600080fd5b5061025361033636600461246b565b610b5b565b34801561034757600080fd5b5061035b61035636600461233d565b610b8d565b60405161022a9594939291906124a7565b34801561037857600080fd5b5061025361038736600461246b565b610c62565b34801561039857600080fd5b506102536103a736600461233d565b610c7d565b3480156103b857600080fd5b50610253610cf7565b3480156103cd57600080fd5b5061021e600b5460ff1660011490565b3480156103e957600080fd5b506102976103f836600461233d565b610d2d565b34801561040957600080fd5b50610412610da4565b60405161022a91906124e2565b34801561042b57600080fd5b5061025361043a36600461233d565b610ec9565b34801561044b57600080fd5b5061030d610f5e565b34801561046057600080fd5b5061047461046f366004612611565b610f6e565b6040805182516001600160a01b031681526020808401516001600160801b0316908201529181015115159082015260600161022a565b3480156104b657600080fd5b5061030d6104c5366004612646565b610fe8565b3480156104d657600080fd5b5061026a61106f565b3480156104eb57600080fd5b5061025361107e565b610253610502366004612670565b6110b4565b34801561051357600080fd5b506006546001600160a01b0316610297565b34801561053157600080fd5b5061026a611351565b34801561054657600080fd5b5060085461030d565b34801561055b57600080fd5b5061025361056a3660046126e1565b611360565b34801561057b57600080fd5b5060095461030d565b34801561059057600080fd5b5061025361059f36600461271d565b61136f565b3480156105b057600080fd5b506105c46105bf366004612799565b6113a7565b60405161022a939291906127e7565b3480156105df57600080fd5b506106336105ee366004612611565b8051602081830181018051600c82529282019190930120915280546001909101546001600160a01b03909116906001600160801b03811690600160801b900460ff1683565b604080516001600160a01b0390941684526001600160801b03909216602084015215159082015260600161022a565b34801561066e57600080fd5b5061026a61067d36600461233d565b61142a565b610253610690366004612670565b611505565b3480156106a157600080fd5b5061021e6106b036600461280f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156106ea57600080fd5b506102536106f9366004612646565b6117ec565b60006001600160e01b031982166380ac58cd60e01b148061072f57506001600160e01b03198216635b5e139f60e01b145b8061074a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6006546001600160a01b031633146107835760405162461bcd60e51b815260040161077a90612842565b60405180910390fd5b600b805460ff191660011790556009556000600a55565b6060600080546107a990612877565b80601f01602080910402602001604051908101604052809291908181526020018280546107d590612877565b80156108225780601f106107f757610100808354040283529160200191610822565b820191906000526020600020905b81548152906001019060200180831161080557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166108a55760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161077a565b506000908152600460205260409020546001600160a01b031690565b6108fc6040518060a0016040528060006001600160a01b03168152602001600081526020016060815260200160008152602001600081525090565b600e5482106109335760405162461bcd60e51b815260206004820152600360248201526215125160ea1b604482015260640161077a565b600e8281548110610946576109466128b2565b90600052602060002090600502016040518060a00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600182015481526020016002820180546109a890612877565b80601f01602080910402602001604051908101604052809291908181526020018280546109d490612877565b8015610a215780601f106109f657610100808354040283529160200191610a21565b820191906000526020600020905b815481529060010190602001808311610a0457829003601f168201915b50505050508152602001600382015481526020016004820154815250509050919050565b6000610a5082610d2d565b9050806001600160a01b0316836001600160a01b03161415610abe5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161077a565b336001600160a01b0382161480610ada5750610ada81336106b0565b610b4c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161077a565b610b568383611884565b505050565b610b66335b826118f2565b610b825760405162461bcd60e51b815260040161077a906128c8565b610b568383836119e9565b600e8181548110610b9d57600080fd5b60009182526020909120600590910201805460018201546002830180546001600160a01b039093169450909291610bd390612877565b80601f0160208091040260200160405190810160405280929190818152602001828054610bff90612877565b8015610c4c5780601f10610c2157610100808354040283529160200191610c4c565b820191906000526020600020905b815481529060010190602001808311610c2f57829003601f168201915b5050505050908060030154908060040154905085565b610b568383836040518060200160405280600081525061136f565b610c8633610b60565b610ceb5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b606482015260840161077a565b610cf481611b85565b50565b6006546001600160a01b03163314610d215760405162461bcd60e51b815260040161077a90612842565b600b805460ff19169055565b6000818152600260205260408120546001600160a01b03168061074a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161077a565b6060600e805480602002602001604051908101604052809291908181526020016000905b82821015610ec05760008481526020908190206040805160a0810182526005860290920180546001600160a01b0316835260018101549383019390935260028301805492939291840191610e1b90612877565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4790612877565b8015610e945780601f10610e6957610100808354040283529160200191610e94565b820191906000526020600020905b815481529060010190602001808311610e7757829003601f168201915b505050505081526020016003820154815260200160048201548152505081526020019060010190610dc8565b50505050905090565b600e548110610f005760405162461bcd60e51b815260206004820152600360248201526215125160ea1b604482015260640161077a565b600e8181548110610f1357610f136128b2565b60009182526020822060059091020180546001600160a01b03191681556001810182905590610f456002830182612237565b50600060038201819055600490910155610cf481611b85565b6000610f69600d5490565b905090565b60408051606081018252600080825260208201819052818301529051600c90610f98908490612919565b908152604080516020928190038301812060608201835280546001600160a01b03168252600101546001600160801b03811693820193909352600160801b90920460ff1615159082015292915050565b60006001600160a01b0382166110535760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161077a565b506001600160a01b031660009081526003602052604090205490565b6060600780546107a990612877565b6006546001600160a01b031633146110a85760405162461bcd60e51b815260040161077a90612842565b6110b26000611c20565b565b600b5460ff166001146110ef5760405162461bcd60e51b81526020600482015260036024820152624d505360e81b604482015260640161077a565b6008543410156111275760405162461bcd60e51b81526020600482015260036024820152624e454360e81b604482015260640161077a565b606060008061113685876113a7565b6040519295509093509150600090600c90611152908990612919565b908152604051908190036020019020600181015490915060ff600160801b909104161561120c5760018101546111959060ff8716906001600160801b031661294b565b6001600160801b03168360ff1610156111c05760405162461bcd60e51b815260040161077a90612976565b60018101805460ff871691906000906111e39084906001600160801b031661294b565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061123d565b8460ff168360ff1610156112325760405162461bcd60e51b815260040161077a90612976565b61123d888887611c72565b8460ff16600a5461124e9190612993565b600a5560015b8560ff168160ff161161134657600e6040518060a001604052808b6001600160a01b03168152602001611286600d5490565b81526020808201899052604080830188905242606090930192909252835460018082018655600095865294829020845160059092020180546001600160a01b0319166001600160a01b0390921691909117815583820151948101949094559082015180519293926112fd9260028501920190612271565b506060820151816003015560808201518160040155505061132689611321600d5490565b611d44565b611334600d80546001019055565b8061133e816129ab565b915050611254565b505050505050505050565b6060600180546107a990612877565b61136b338383611d5e565b5050565b61137933836118f2565b6113955760405162461bcd60e51b815260040161077a906128c8565b6113a184848484611e2d565b50505050565b6060600080846001600160a01b031663037bee48856040518263ffffffff1660e01b81526004016113d891906123ae565b600060405180830381865afa1580156113f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261141d91908101906129cb565b9250925092509250925092565b6000818152600260205260409020546060906001600160a01b03166114a95760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161077a565b60006114b361106f565b905060008151116114d357604051806020016040528060008152506114fe565b806114dd84611e60565b6040516020016114ee929190612a62565b6040516020818303038152906040525b9392505050565b600b5460ff166001146115405760405162461bcd60e51b81526020600482015260036024820152624d505360e81b604482015260640161077a565b6008543410156115785760405162461bcd60e51b81526020600482015260036024820152624e454360e81b604482015260640161077a565b6115a9826040518060400160405280600f81526020016e3c52414e444f4d204144445245535360881b815250611f5e565b604080518082018252600681526545504e30303160d01b602082015290516005907f960c3fe88d950ed417a398d6746908458aa42f3d073723fd9675d36015b402ab90600090600c906115fd908990612919565b908152604051908190036020019020600181015490915060ff600160801b90910416156116b75760018101546116409060ff8716906001600160801b031661294b565b6001600160801b03168360ff16101561166b5760405162461bcd60e51b815260040161077a90612976565b60018101805460ff8716919060009061168e9084906001600160801b031661294b565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506116e8565b8460ff168360ff1610156116dd5760405162461bcd60e51b815260040161077a90612976565b6116e8888887611c72565b8460ff16600a546116f99190612993565b600a5560015b8560ff168160ff161161134657600e6040518060a001604052808b6001600160a01b03168152602001611731600d5490565b81526020808201899052604080830188905242606090930192909252835460018082018655600095865294829020845160059092020180546001600160a01b0319166001600160a01b0390921691909117815583820151948101949094559082015180519293926117a89260028501920190612271565b50606082015181600301556080820151816004015550506117cc89611321600d5490565b6117da600d80546001019055565b806117e4816129ab565b9150506116ff565b6006546001600160a01b031633146118165760405162461bcd60e51b815260040161077a90612842565b6001600160a01b03811661187b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161077a565b610cf481611c20565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906118b982610d2d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661196b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161077a565b600061197683610d2d565b9050806001600160a01b0316846001600160a01b031614806119b15750836001600160a01b03166119a68461082c565b6001600160a01b0316145b806119e157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166119fc82610d2d565b6001600160a01b031614611a605760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161077a565b6001600160a01b038216611ac25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161077a565b611acd600082611884565b6001600160a01b0383166000908152600360205260408120805460019290611af6908490612a88565b90915550506001600160a01b0382166000908152600360205260408120805460019290611b24908490612993565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611b9082610d2d565b9050611b9d600083611884565b6001600160a01b0381166000908152600360205260408120805460019290611bc6908490612a88565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600c82604051611c829190612919565b9081526040519081900360200190206001015460ff600160801b9091041615611cd35760405162461bcd60e51b815260206004820152600360248201526241414560e81b604482015260640161077a565b6000600c83604051611ce59190612919565b90815260405190819003602001902080546001600160a01b039095166001600160a01b0319909516949094178455506001909201805470ffffffffffffffffffffffffffffffffff191660ff90931692909217600160801b1790915550565b61136b828260405180602001604052806000815250611fa3565b816001600160a01b0316836001600160a01b03161415611dc05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161077a565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611e388484846119e9565b611e4484848484611fd6565b6113a15760405162461bcd60e51b815260040161077a90612a9f565b606081611e845750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611eae5780611e9881612af1565b9150611ea79050600a83612b22565b9150611e88565b60008167ffffffffffffffff811115611ec957611ec9612544565b6040519080825280601f01601f191660200182016040528015611ef3576020820181803683370190505b5090505b84156119e157611f08600183612a88565b9150611f15600a86612b36565b611f20906030612993565b60f81b818381518110611f3557611f356128b2565b60200101906001600160f81b031916908160001a905350611f57600a86612b22565b9450611ef7565b61136b8282604051602401611f74929190612b4a565b60408051601f198184030181529190526020810180516001600160e01b031663759f86bb60e01b1790526120d4565b611fad83836120f5565b611fba6000848484611fd6565b610b565760405162461bcd60e51b815260040161077a90612a9f565b60006001600160a01b0384163b156120c957604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061201a903390899088908890600401612b6e565b6020604051808303816000875af1925050508015612055575060408051601f3d908101601f1916820190925261205291810190612bab565b60015b6120af573d808015612083576040519150601f19603f3d011682016040523d82523d6000602084013e612088565b606091505b5080516120a75760405162461bcd60e51b815260040161077a90612a9f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506119e1565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b03821661214b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161077a565b6000818152600260205260409020546001600160a01b0316156121b05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161077a565b6001600160a01b03821660009081526003602052604081208054600192906121d9908490612993565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b50805461224390612877565b6000825580601f10612253575050565b601f016020900490600052602060002090810190610cf491906122f5565b82805461227d90612877565b90600052602060002090601f01602090048101928261229f57600085556122e5565b82601f106122b857805160ff19168380011785556122e5565b828001600101855582156122e5579182015b828111156122e55782518255916020019190600101906122ca565b506122f19291506122f5565b5090565b5b808211156122f157600081556001016122f6565b6001600160e01b031981168114610cf457600080fd5b60006020828403121561233257600080fd5b81356114fe8161230a565b60006020828403121561234f57600080fd5b5035919050565b60005b83811015612371578181015183820152602001612359565b838111156113a15750506000910152565b6000815180845261239a816020860160208601612356565b601f01601f19169290920160200192915050565b6020815260006114fe6020830184612382565b60018060a01b038151168252602081015160208301526000604082015160a060408501526123f260a0850182612382565b905060608301516060850152608083015160808501528091505092915050565b6020815260006114fe60208301846123c1565b80356001600160a01b038116811461243c57600080fd5b919050565b6000806040838503121561245457600080fd5b61245d83612425565b946020939093013593505050565b60008060006060848603121561248057600080fd5b61248984612425565b925061249760208501612425565b9150604084013590509250925092565b60018060a01b038616815284602082015260a0604082015260006124ce60a0830186612382565b606083019490945250608001529392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561253757603f198886030184526125258583516123c1565b94509285019290850190600101612509565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561258357612583612544565b604052919050565b600067ffffffffffffffff8211156125a5576125a5612544565b50601f01601f191660200190565b60006125c66125c18461258b565b61255a565b90508281528383830111156125da57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261260257600080fd5b6114fe838335602085016125b3565b60006020828403121561262357600080fd5b813567ffffffffffffffff81111561263a57600080fd5b6119e1848285016125f1565b60006020828403121561265857600080fd5b6114fe82612425565b60ff81168114610cf457600080fd5b6000806000806080858703121561268657600080fd5b61268f85612425565b9350602085013567ffffffffffffffff8111156126ab57600080fd5b6126b7878288016125f1565b9350506126c660408601612425565b915060608501356126d681612661565b939692955090935050565b600080604083850312156126f457600080fd5b6126fd83612425565b91506020830135801515811461271257600080fd5b809150509250929050565b6000806000806080858703121561273357600080fd5b61273c85612425565b935061274a60208601612425565b925060408501359150606085013567ffffffffffffffff81111561276d57600080fd5b8501601f8101871361277e57600080fd5b61278d878235602084016125b3565b91505092959194509250565b600080604083850312156127ac57600080fd5b6127b583612425565b9150602083013567ffffffffffffffff8111156127d157600080fd5b6127dd858286016125f1565b9150509250929050565b6060815260006127fa6060830186612382565b60ff9490941660208301525060400152919050565b6000806040838503121561282257600080fd5b61282b83612425565b915061283960208401612425565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061288b57607f821691505b602082108114156128ac57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000825161292b818460208701612356565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b60006001600160801b0380831681851680830382111561296d5761296d612935565b01949350505050565b602080825260039082015262414d4d60e81b604082015260600190565b600082198211156129a6576129a6612935565b500190565b600060ff821660ff8114156129c2576129c2612935565b60010192915050565b6000806000606084860312156129e057600080fd5b835167ffffffffffffffff8111156129f757600080fd5b8401601f81018613612a0857600080fd5b8051612a166125c18261258b565b818152876020838501011115612a2b57600080fd5b612a3c826020830160208601612356565b8095505050506020840151612a5081612661565b80925050604084015190509250925092565b60008351612a74818460208801612356565b83519083019061296d818360208801612356565b600082821015612a9a57612a9a612935565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415612b0557612b05612935565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082612b3157612b31612b0c565b500490565b600082612b4557612b45612b0c565b500690565b6001600160a01b03831681526040602082018190526000906119e190830184612382565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612ba190830184612382565b9695505050505050565b600060208284031215612bbd57600080fd5b81516114fe8161230a56fea2646970667358221220ba23b3f35236af3244bdc1471db06706263b4dd43d04b0cf0e4baa13530b4aa864736f6c634300080b0033";

type GMKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GMKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GMKeys__factory extends ContractFactory {
  constructor(...args: GMKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GMKeys";
  }

  deploy(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GMKeys> {
    return super.deploy(
      _baseTokenURI,
      _price,
      overrides || {}
    ) as Promise<GMKeys>;
  }
  getDeployTransaction(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseTokenURI, _price, overrides || {});
  }
  attach(address: string): GMKeys {
    return super.attach(address) as GMKeys;
  }
  connect(signer: Signer): GMKeys__factory {
    return super.connect(signer) as GMKeys__factory;
  }
  static readonly contractName: "GMKeys";
  public readonly contractName: "GMKeys";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GMKeysInterface {
    return new utils.Interface(_abi) as GMKeysInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GMKeys {
    return new Contract(address, _abi, signerOrProvider) as GMKeys;
  }
}
