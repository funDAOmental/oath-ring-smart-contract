/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GMKeys, GMKeysInterface } from "../GMKeys";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_epoch",
        type: "string",
      },
    ],
    name: "addToBlockChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "uint128",
        name: "maxUnit",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "currentUnit",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getMyNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getOneAddress",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "maxUnit",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "currentUnit",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct GMKeys.AddressStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "epoch",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "removeFromBlockChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200289f3803806200289f8339810160408190526200003491620001eb565b604080518082018252600f81526e11d352d95e5cc8189e481391951e15608a1b602080830191825283518085019094526006845265474d4b45595360d01b90840152815191929162000089916000916200012f565b5080516200009f9060019060208401906200012f565b505050620000bc620000b6620000d960201b60201c565b620000dd565b8051620000d19060079060208401906200012f565b505062000304565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200013d90620002c7565b90600052602060002090601f016020900481019282620001615760008555620001ac565b82601f106200017c57805160ff1916838001178555620001ac565b82800160010185558215620001ac579182015b82811115620001ac5782518255916020019190600101906200018f565b50620001ba929150620001be565b5090565b5b80821115620001ba5760008155600101620001bf565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620001ff57600080fd5b82516001600160401b03808211156200021757600080fd5b818501915085601f8301126200022c57600080fd5b815181811115620002415762000241620001d5565b604051601f8201601f19908116603f011681019083821181831017156200026c576200026c620001d5565b8160405282815288868487010111156200028557600080fd5b600093505b82841015620002a957848401860151818501870152928501926200028a565b82841115620002bb5760008684830101525b98975050505050505050565b600181811c90821680620002dc57607f821691505b60208210811415620002fe57634e487b7160e01b600052602260045260246000fd5b50919050565b61258b80620003146000396000f3fe60806040526004361061019c5760003560e01c806370a08231116100ec578063a22cb4651161008a578063c87b56dd11610064578063c87b56dd14610506578063e985e9c514610526578063f2fde38b1461056f578063f3abd1fc1461058f57600080fd5b8063a22cb465146104b3578063a546db46146104d3578063b88d4fde146104e657600080fd5b806378fdafc2116100c657806378fdafc2146103de57806382d389541461040c5780638da5cb5b1461048057806395d89b411461049e57600080fd5b806370a0823114610394578063714c5398146103b4578063715018a6146103c957600080fd5b806323b872dd1161015957806342966c681161013357806342966c681461030f5780636352211e1461032f57806363ba31cf1461034f578063692f1d121461037157600080fd5b806323b872dd1461029f578063265aa621146102bf57806342842e0e146102ef57600080fd5b806301ffc9a7146101a157806302a2f38b146101d657806306fdde03146101f8578063081812fc1461021a57806308e4c25f14610252578063095ea7b31461027f575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004611ee7565b610646565b60405190151581526020015b60405180910390f35b3480156101e257600080fd5b506101f66101f1366004611f04565b610698565b005b34801561020457600080fd5b5061020d61072f565b6040516101cd9190611f75565b34801561022657600080fd5b5061023a610235366004611f04565b6107c1565b6040516001600160a01b0390911681526020016101cd565b34801561025e57600080fd5b5061027261026d366004611f04565b610856565b6040516101cd9190611fcd565b34801561028b57600080fd5b506101f661029a366004611ffc565b6109c9565b3480156102ab57600080fd5b506101f66102ba366004612026565b610adf565b3480156102cb57600080fd5b506102df6102da366004611f04565b610b11565b6040516101cd9493929190612062565b3480156102fb57600080fd5b506101f661030a366004612026565b610be0565b34801561031b57600080fd5b506101f661032a366004611f04565b610bfb565b34801561033b57600080fd5b5061023a61034a366004611f04565b610c72565b34801561035b57600080fd5b50610364610ce9565b6040516101cd91906120ef565b34801561037d57600080fd5b50610386610e04565b6040519081526020016101cd565b3480156103a057600080fd5b506103866103af366004612102565b610e14565b3480156103c057600080fd5b5061020d610e9b565b3480156103d557600080fd5b506101f6610eaa565b3480156103ea57600080fd5b506103fe6103f9366004612102565b610f10565b6040516101cd92919061211d565b34801561041857600080fd5b50610458610427366004612102565b600860205260009081526040902080546001909101546001600160801b0380831692600160801b9004169060ff1683565b604080516001600160801b0394851681529390921660208401521515908201526060016101cd565b34801561048c57600080fd5b506006546001600160a01b031661023a565b3480156104aa57600080fd5b5061020d611177565b3480156104bf57600080fd5b506101f66104ce36600461213f565b611186565b6101f66104e1366004612207565b611195565b3480156104f257600080fd5b506101f6610501366004612269565b611319565b34801561051257600080fd5b5061020d610521366004611f04565b611351565b34801561053257600080fd5b506101c16105413660046122e5565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561057b57600080fd5b506101f661058a366004612102565b61142c565b34801561059b57600080fd5b506106146105aa366004612102565b6040805160608082018352600080835260208084018290529284018190526001600160a01b0394909416845260088252928290208251938401835280546001600160801b038082168652600160801b90910416918401919091526001015460ff1615159082015290565b6040805182516001600160801b03908116825260208085015190911690820152918101511515908201526060016101cd565b60006001600160e01b031982166380ac58cd60e01b148061067757506001600160e01b03198216635b5e139f60e01b145b8061069257506301ffc9a760e01b6001600160e01b03198316145b92915050565b600a5481106106d45760405162461bcd60e51b815260206004820152600360248201526215125160ea1b60448201526064015b60405180910390fd5b600a81815481106106e7576106e7612318565b60009182526020822060049091020180546001600160a01b031916815560018101829055906107196002830182611dfe565b6003820160009055505061072c816114f4565b50565b60606000805461073e9061232e565b80601f016020809104026020016040519081016040528092919081815260200182805461076a9061232e565b80156107b75780601f1061078c576101008083540402835291602001916107b7565b820191906000526020600020905b81548152906001019060200180831161079a57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661083a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106cb565b506000908152600460205260409020546001600160a01b031690565b61088a604051806080016040528060006001600160a01b031681526020016000815260200160608152602001600081525090565b600a5482106108c15760405162461bcd60e51b815260206004820152600360248201526215125160ea1b60448201526064016106cb565b600a82815481106108d4576108d4612318565b90600052602060002090600402016040518060800160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600182015481526020016002820180546109369061232e565b80601f01602080910402602001604051908101604052809291908181526020018280546109629061232e565b80156109af5780601f10610984576101008083540402835291602001916109af565b820191906000526020600020905b81548152906001019060200180831161099257829003601f168201915b505050505081526020016003820154815250509050919050565b60006109d482610c72565b9050806001600160a01b0316836001600160a01b03161415610a425760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016106cb565b336001600160a01b0382161480610a5e5750610a5e8133610541565b610ad05760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016106cb565b610ada838361158f565b505050565b610aea335b826115fd565b610b065760405162461bcd60e51b81526004016106cb90612369565b610ada8383836116f4565b600a8181548110610b2157600080fd5b60009182526020909120600490910201805460018201546002830180546001600160a01b039093169450909291610b579061232e565b80601f0160208091040260200160405190810160405280929190818152602001828054610b839061232e565b8015610bd05780601f10610ba557610100808354040283529160200191610bd0565b820191906000526020600020905b815481529060010190602001808311610bb357829003601f168201915b5050505050908060030154905084565b610ada83838360405180602001604052806000815250611319565b610c0433610ae4565b610c695760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016106cb565b61072c816114f4565b6000818152600260205260408120546001600160a01b0316806106925760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016106cb565b6060600a805480602002602001604051908101604052809291908181526020016000905b82821015610dfb576000848152602090819020604080516080810182526004860290920180546001600160a01b0316835260018101549383019390935260028301805492939291840191610d609061232e565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8c9061232e565b8015610dd95780601f10610dae57610100808354040283529160200191610dd9565b820191906000526020600020905b815481529060010190602001808311610dbc57829003601f168201915b5050505050815260200160038201548152505081526020019060010190610d0d565b50505050905090565b6000610e0f60095490565b905090565b60006001600160a01b038216610e7f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016106cb565b506001600160a01b031660009081526003602052604090205490565b60606007805461073e9061232e565b6006546001600160a01b03163314610f045760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cb565b610f0e6000611890565b565b6001600160a01b0381166000908152600860205260408120600101546060919060ff16610f655760405162461bcd60e51b815260206004820152600360248201526241444560e81b60448201526064016106cb565b6040805160148082526102a08201909252600090819083816020015b610fb5604051806080016040528060006001600160a01b031681526020016000815260200160608152602001600081525090565b815260200190600190039081610f8157905050905060005b600a5483101561116b57600a5483108015610fe757508381105b80156110275750866001600160a01b0316600a848154811061100b5761100b612318565b60009182526020909120600490910201546001600160a01b0316145b1561115957600a838154811061103f5761103f612318565b90600052602060002090600402016040518060800160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600182015481526020016002820180546110a19061232e565b80601f01602080910402602001604051908101604052809291908181526020018280546110cd9061232e565b801561111a5780601f106110ef5761010080835404028352916020019161111a565b820191906000526020600020905b8154815290600101906020018083116110fd57829003601f168201915b5050505050815260200160038201548152505082828151811061113f5761113f612318565b60200260200101819052508080611155906123d0565b9150505b82611163816123d0565b935050610fcd565b90969095509350505050565b60606001805461073e9061232e565b6111913383836118e2565b5050565b6001600160a01b0382166000908152600860205260409020600181015460ff16156112505780546001600160801b03600160801b820481169116116112025760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b60448201526064016106cb565b80546001908290601090611227908490600160801b90046001600160801b03166123eb565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061125b565b61125b6014846119b1565b600a6040518060800160405280856001600160a01b0316815260200161128060095490565b8152602080820186905242604092830152835460018082018655600095865294829020845160049092020180546001600160a01b0319166001600160a01b0390921691909117815583820151948101949094559082015180519293926112ec9260028501920190611e38565b5060608201518160030155505061130b8361130660095490565b611a40565b610ada600980546001019055565b61132333836115fd565b61133f5760405162461bcd60e51b81526004016106cb90612369565b61134b84848484611a5a565b50505050565b6000818152600260205260409020546060906001600160a01b03166113d05760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016106cb565b60006113da610e9b565b905060008151116113fa5760405180602001604052806000815250611425565b8061140484611a8d565b604051602001611415929190612416565b6040516020818303038152906040525b9392505050565b6006546001600160a01b031633146114865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cb565b6001600160a01b0381166114eb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106cb565b61072c81611890565b60006114ff82610c72565b905061150c60008361158f565b6001600160a01b038116600090815260036020526040812080546001929061153590849061243c565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906115c482610c72565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166116765760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106cb565b600061168183610c72565b9050806001600160a01b0316846001600160a01b031614806116bc5750836001600160a01b03166116b1846107c1565b6001600160a01b0316145b806116ec57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661170782610c72565b6001600160a01b03161461176b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016106cb565b6001600160a01b0382166117cd5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106cb565b6117d860008261158f565b6001600160a01b038316600090815260036020526040812080546001929061180190849061243c565b90915550506001600160a01b038216600090815260036020526040812080546001929061182f908490612453565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156119445760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106cb565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03811660009081526008602052604090206001015460ff1615611a035760405162461bcd60e51b815260206004820152600360248201526241414560e81b60448201526064016106cb565b6001600160a01b031660009081526008602052604090206001600160801b0391909116600160801b1781556001908101805460ff19169091179055565b611191828260405180602001604052806000815250611b8b565b611a658484846116f4565b611a7184848484611bbe565b61134b5760405162461bcd60e51b81526004016106cb9061246b565b606081611ab15750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611adb5780611ac5816123d0565b9150611ad49050600a836124d3565b9150611ab5565b60008167ffffffffffffffff811115611af657611af661217b565b6040519080825280601f01601f191660200182016040528015611b20576020820181803683370190505b5090505b84156116ec57611b3560018361243c565b9150611b42600a866124e7565b611b4d906030612453565b60f81b818381518110611b6257611b62612318565b60200101906001600160f81b031916908160001a905350611b84600a866124d3565b9450611b24565b611b958383611cbc565b611ba26000848484611bbe565b610ada5760405162461bcd60e51b81526004016106cb9061246b565b60006001600160a01b0384163b15611cb157604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611c029033908990889088906004016124fb565b6020604051808303816000875af1925050508015611c3d575060408051601f3d908101601f19168201909252611c3a91810190612538565b60015b611c97573d808015611c6b576040519150601f19603f3d011682016040523d82523d6000602084013e611c70565b606091505b508051611c8f5760405162461bcd60e51b81526004016106cb9061246b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506116ec565b506001949350505050565b6001600160a01b038216611d125760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106cb565b6000818152600260205260409020546001600160a01b031615611d775760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106cb565b6001600160a01b0382166000908152600360205260408120805460019290611da0908490612453565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b508054611e0a9061232e565b6000825580601f10611e1a575050565b601f01602090049060005260206000209081019061072c9190611ebc565b828054611e449061232e565b90600052602060002090601f016020900481019282611e665760008555611eac565b82601f10611e7f57805160ff1916838001178555611eac565b82800160010185558215611eac579182015b82811115611eac578251825591602001919060010190611e91565b50611eb8929150611ebc565b5090565b5b80821115611eb85760008155600101611ebd565b6001600160e01b03198116811461072c57600080fd5b600060208284031215611ef957600080fd5b813561142581611ed1565b600060208284031215611f1657600080fd5b5035919050565b60005b83811015611f38578181015183820152602001611f20565b8381111561134b5750506000910152565b60008151808452611f61816020860160208601611f1d565b601f01601f19169290920160200192915050565b6020815260006114256020830184611f49565b60018060a01b038151168252602081015160208301526000604082015160806040850152611fb96080850182611f49565b606093840151949093019390935250919050565b6020815260006114256020830184611f88565b80356001600160a01b0381168114611ff757600080fd5b919050565b6000806040838503121561200f57600080fd5b61201883611fe0565b946020939093013593505050565b60008060006060848603121561203b57600080fd5b61204484611fe0565b925061205260208501611fe0565b9150604084013590509250925092565b60018060a01b03851681528360208201526080604082015260006120896080830185611f49565b905082606083015295945050505050565b600081518084526020808501808196508360051b8101915082860160005b858110156120e25782840389526120d0848351611f88565b988501989350908401906001016120b8565b5091979650505050505050565b602081526000611425602083018461209a565b60006020828403121561211457600080fd5b61142582611fe0565b604081526000612130604083018561209a565b90508260208301529392505050565b6000806040838503121561215257600080fd5b61215b83611fe0565b91506020830135801515811461217057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156121ac576121ac61217b565b604051601f8501601f19908116603f011681019082821181831017156121d4576121d461217b565b816040528093508581528686860111156121ed57600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561221a57600080fd5b61222383611fe0565b9150602083013567ffffffffffffffff81111561223f57600080fd5b8301601f8101851361225057600080fd5b61225f85823560208401612191565b9150509250929050565b6000806000806080858703121561227f57600080fd5b61228885611fe0565b935061229660208601611fe0565b925060408501359150606085013567ffffffffffffffff8111156122b957600080fd5b8501601f810187136122ca57600080fd5b6122d987823560208401612191565b91505092959194509250565b600080604083850312156122f857600080fd5b61230183611fe0565b915061230f60208401611fe0565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061234257607f821691505b6020821081141561236357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006000198214156123e4576123e46123ba565b5060010190565b60006001600160801b0380831681851680830382111561240d5761240d6123ba565b01949350505050565b60008351612428818460208801611f1d565b83519083019061240d818360208801611f1d565b60008282101561244e5761244e6123ba565b500390565b60008219821115612466576124666123ba565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826124e2576124e26124bd565b500490565b6000826124f6576124f66124bd565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061252e90830184611f49565b9695505050505050565b60006020828403121561254a57600080fd5b815161142581611ed156fea2646970667358221220b45d00a3e7bd74bceec5d2d57bb8f99bef7316441cc7f9c41aa7c72c88f89b5464736f6c634300080b0033";

type GMKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GMKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GMKeys__factory extends ContractFactory {
  constructor(...args: GMKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GMKeys";
  }

  deploy(
    _baseTokenURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GMKeys> {
    return super.deploy(_baseTokenURI, overrides || {}) as Promise<GMKeys>;
  }
  getDeployTransaction(
    _baseTokenURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseTokenURI, overrides || {});
  }
  attach(address: string): GMKeys {
    return super.attach(address) as GMKeys;
  }
  connect(signer: Signer): GMKeys__factory {
    return super.connect(signer) as GMKeys__factory;
  }
  static readonly contractName: "GMKeys";
  public readonly contractName: "GMKeys";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GMKeysInterface {
    return new utils.Interface(_abi) as GMKeysInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GMKeys {
    return new Contract(address, _abi, signerOrProvider) as GMKeys;
  }
}
