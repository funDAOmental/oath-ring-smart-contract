/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GMKeys, GMKeysInterface } from "../GMKeys";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address",
        name: "currentAddress",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "currentUnit",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burnKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintedKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneAddress",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currentAddress",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "currentUnit",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct GMKeys.AddressStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getOneNft",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "epoch",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "randomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct GMKeys.NftStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    name: "getOneTicket",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintingStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
      {
        internalType: "address",
        name: "_randomnessAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_count",
        type: "uint8",
      },
    ],
    name: "mintKeys",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "epoch",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalKeys",
        type: "uint256",
      },
    ],
    name: "startMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006009819055600a55600b805460ff191690553480156200002557600080fd5b5060405162002c2638038062002c26833981016040819052620000489162000202565b604080518082018252600f81526e11d352d95e5cc8189e481391951e15608a1b602080830191825283518085019094526006845265474d4b45595360d01b9084015281519192916200009d9160009162000146565b508051620000b390600190602084019062000146565b505050620000d0620000ca620000f060201b60201c565b620000f4565b8151620000e590600790602085019062000146565b506008555062000324565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200015490620002e7565b90600052602060002090601f016020900481019282620001785760008555620001c3565b82601f106200019357805160ff1916838001178555620001c3565b82800160010185558215620001c3579182015b82811115620001c3578251825591602001919060010190620001a6565b50620001d1929150620001d5565b5090565b5b80821115620001d15760008155600101620001d6565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200021657600080fd5b82516001600160401b03808211156200022e57600080fd5b818501915085601f8301126200024357600080fd5b815181811115620002585762000258620001ec565b604051601f8201601f19908116603f01168101908382118183101715620002835762000283620001ec565b81604052828152602093508884848701011115620002a057600080fd5b600091505b82821015620002c45784820184015181830185015290830190620002a5565b82821115620002d65760008484830101525b969092015195979596505050505050565b600181811c90821680620002fc57607f821691505b602082108114156200031e57634e487b7160e01b600052602260045260246000fd5b50919050565b6128f280620003346000396000f3fe6080604052600436106101ee5760003560e01c8063692f1d121161010d57806398d5fdca116100a0578063bbdaea6b1161006f578063bbdaea6b14610599578063bdfe7d47146105c8578063c87b56dd14610657578063e985e9c514610677578063f2fde38b146106c057600080fd5b806398d5fdca1461052f578063a22cb46514610544578063b8046b1c14610564578063b88d4fde1461057957600080fd5b8063715018a6116100dc578063715018a6146104d457806382831721146104e95780638da5cb5b146104fc57806395d89b411461051a57600080fd5b8063692f1d12146104345780636bd449aa1461044957806370a082311461049f578063714c5398146104bf57600080fd5b8063265aa621116101855780635ff0c75b116101545780635ff0c75b146103b65780636352211e146103d257806363ba31cf146103f257806364d689881461041457600080fd5b8063265aa6211461033057806342842e0e1461036157806342966c68146103815780635c3e0da2146103a157600080fd5b806308e4c25f116101c157806308e4c25f146102a4578063095ea7b3146102d15780632294bf4d146102f157806323b872dd1461031057600080fd5b806301ffc9a7146101f357806302a7e3a31461022857806306fdde031461024a578063081812fc1461026c575b600080fd5b3480156101ff57600080fd5b5061021361020e366004612036565b6106e0565b60405190151581526020015b60405180910390f35b34801561023457600080fd5b50610248610243366004612053565b610732565b005b34801561025657600080fd5b5061025f61077c565b60405161021f91906120c4565b34801561027857600080fd5b5061028c610287366004612053565b61080e565b6040516001600160a01b03909116815260200161021f565b3480156102b057600080fd5b506102c46102bf366004612053565b6108a3565b60405161021f9190612128565b3480156102dd57600080fd5b506102486102ec366004612157565b610a27565b3480156102fd57600080fd5b50600a545b60405190815260200161021f565b34801561031c57600080fd5b5061024861032b366004612181565b610b3d565b34801561033c57600080fd5b5061035061034b366004612053565b610b6f565b60405161021f9594939291906121bd565b34801561036d57600080fd5b5061024861037c366004612181565b610c44565b34801561038d57600080fd5b5061024861039c366004612053565b610c5f565b3480156103ad57600080fd5b50610248610cd9565b3480156103c257600080fd5b50610213600b5460ff1660011490565b3480156103de57600080fd5b5061028c6103ed366004612053565b610d0f565b3480156103fe57600080fd5b50610407610d86565b60405161021f91906121f8565b34801561042057600080fd5b5061024861042f366004612053565b610eab565b34801561044057600080fd5b50610302610f40565b34801561045557600080fd5b50610469610464366004612327565b610f50565b6040805182516001600160a01b031681526020808401516001600160801b0316908201529181015115159082015260600161021f565b3480156104ab57600080fd5b506103026104ba36600461235c565b610fca565b3480156104cb57600080fd5b5061025f611051565b3480156104e057600080fd5b50610248611060565b6102486104f7366004612386565b611096565b34801561050857600080fd5b506006546001600160a01b031661028c565b34801561052657600080fd5b5061025f6113ab565b34801561053b57600080fd5b50600854610302565b34801561055057600080fd5b5061024861055f3660046123f7565b6113ba565b34801561057057600080fd5b50600954610302565b34801561058557600080fd5b50610248610594366004612433565b6113c9565b3480156105a557600080fd5b506105b96105b43660046124af565b611401565b60405161021f939291906124fd565b3480156105d457600080fd5b506106286105e3366004612327565b8051602081830181018051600c82529282019190930120915280546001909101546001600160a01b03909116906001600160801b03811690600160801b900460ff1683565b604080516001600160a01b0390941684526001600160801b03909216602084015215159082015260600161021f565b34801561066357600080fd5b5061025f610672366004612053565b61148d565b34801561068357600080fd5b50610213610692366004612525565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156106cc57600080fd5b506102486106db36600461235c565b611568565b60006001600160e01b031982166380ac58cd60e01b148061071157506001600160e01b03198216635b5e139f60e01b145b8061072c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6006546001600160a01b031633146107655760405162461bcd60e51b815260040161075c90612558565b60405180910390fd5b600b805460ff191660011790556009556000600a55565b60606000805461078b9061258d565b80601f01602080910402602001604051908101604052809291908181526020018280546107b79061258d565b80156108045780601f106107d957610100808354040283529160200191610804565b820191906000526020600020905b8154815290600101906020018083116107e757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166108875760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161075c565b506000908152600460205260409020546001600160a01b031690565b6108de6040518060a0016040528060006001600160a01b03168152602001600081526020016060815260200160008152602001600081525090565b600e5482106109155760405162461bcd60e51b815260206004820152600360248201526215125160ea1b604482015260640161075c565b600e8281548110610928576109286125c8565b90600052602060002090600502016040518060a00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820154815260200160028201805461098a9061258d565b80601f01602080910402602001604051908101604052809291908181526020018280546109b69061258d565b8015610a035780601f106109d857610100808354040283529160200191610a03565b820191906000526020600020905b8154815290600101906020018083116109e657829003601f168201915b50505050508152602001600382015481526020016004820154815250509050919050565b6000610a3282610d0f565b9050806001600160a01b0316836001600160a01b03161415610aa05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161075c565b336001600160a01b0382161480610abc5750610abc8133610692565b610b2e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161075c565b610b388383611600565b505050565b610b48335b8261166e565b610b645760405162461bcd60e51b815260040161075c906125de565b610b38838383611765565b600e8181548110610b7f57600080fd5b60009182526020909120600590910201805460018201546002830180546001600160a01b039093169450909291610bb59061258d565b80601f0160208091040260200160405190810160405280929190818152602001828054610be19061258d565b8015610c2e5780601f10610c0357610100808354040283529160200191610c2e565b820191906000526020600020905b815481529060010190602001808311610c1157829003601f168201915b5050505050908060030154908060040154905085565b610b38838383604051806020016040528060008152506113c9565b610c6833610b42565b610ccd5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b606482015260840161075c565b610cd681611901565b50565b6006546001600160a01b03163314610d035760405162461bcd60e51b815260040161075c90612558565b600b805460ff19169055565b6000818152600260205260408120546001600160a01b03168061072c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161075c565b6060600e805480602002602001604051908101604052809291908181526020016000905b82821015610ea25760008481526020908190206040805160a0810182526005860290920180546001600160a01b0316835260018101549383019390935260028301805492939291840191610dfd9061258d565b80601f0160208091040260200160405190810160405280929190818152602001828054610e299061258d565b8015610e765780601f10610e4b57610100808354040283529160200191610e76565b820191906000526020600020905b815481529060010190602001808311610e5957829003601f168201915b505050505081526020016003820154815260200160048201548152505081526020019060010190610daa565b50505050905090565b600e548110610ee25760405162461bcd60e51b815260206004820152600360248201526215125160ea1b604482015260640161075c565b600e8181548110610ef557610ef56125c8565b60009182526020822060059091020180546001600160a01b03191681556001810182905590610f276002830182611f4d565b50600060038201819055600490910155610cd681611901565b6000610f4b600d5490565b905090565b60408051606081018252600080825260208201819052818301529051600c90610f7a90849061262f565b908152604080516020928190038301812060608201835280546001600160a01b03168252600101546001600160801b03811693820193909352600160801b90920460ff1615159082015292915050565b60006001600160a01b0382166110355760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161075c565b506001600160a01b031660009081526003602052604090205490565b60606007805461078b9061258d565b6006546001600160a01b0316331461108a5760405162461bcd60e51b815260040161075c90612558565b611094600061199c565b565b600b5460ff166001146110d15760405162461bcd60e51b81526020600482015260036024820152624d505360e81b604482015260640161075c565b8060ff166008546110e29190612661565b3410156111175760405162461bcd60e51b81526020600482015260036024820152624e454360e81b604482015260640161075c565b60606000806111268587611401565b91945092509050600160ff831610156111675760405162461bcd60e51b8152602060048201526003602482015262272ca960e91b604482015260640161075c565b6000600c87604051611179919061262f565b908152604051908190036020019020600181015490915060ff600160801b90910416156112495760018101546111bc9060ff8716906001600160801b0316612680565b6001600160801b03168360ff1610156111fd5760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b604482015260640161075c565b60018101805460ff871691906000906112209084906001600160801b0316612680565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611290565b8460ff168360ff1610156112855760405162461bcd60e51b8152602060048201526003602482015262414d4d60e81b604482015260640161075c565b6112908888876119ee565b60015b8560ff168160ff161161138c57600e6040518060a001604052808b6001600160a01b031681526020016112c5600d5490565b8152602081018890526040016112de60ff8516876126ab565b815242602091820152825460018082018555600094855293829020835160059092020180546001600160a01b0319166001600160a01b039092169190911781558282015193810193909355604082015180519293926113439260028501920190611f87565b506060820151816003015560808201518160040155505061136c89611367600d5490565b611ac0565b61137a600d80546001019055565b80611384816126c3565b915050611293565b8560ff16600a5461139d91906126ab565b600a55505050505050505050565b60606001805461078b9061258d565b6113c5338383611ada565b5050565b6113d3338361166e565b6113ef5760405162461bcd60e51b815260040161075c906125de565b6113fb84848484611ba9565b50505050565b60606000806060600080876001600160a01b031663037bee48886040518263ffffffff1660e01b815260040161143791906120c4565b600060405180830381865afa158015611454573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261147c91908101906126e3565b919750955093505050509250925092565b6000818152600260205260409020546060906001600160a01b031661150c5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161075c565b6000611516611051565b905060008151116115365760405180602001604052806000815250611561565b8061154084611bdc565b60405160200161155192919061277a565b6040516020818303038152906040525b9392505050565b6006546001600160a01b031633146115925760405162461bcd60e51b815260040161075c90612558565b6001600160a01b0381166115f75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161075c565b610cd68161199c565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061163582610d0f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166116e75760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161075c565b60006116f283610d0f565b9050806001600160a01b0316846001600160a01b0316148061172d5750836001600160a01b03166117228461080e565b6001600160a01b0316145b8061175d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661177882610d0f565b6001600160a01b0316146117dc5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161075c565b6001600160a01b03821661183e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161075c565b611849600082611600565b6001600160a01b03831660009081526003602052604081208054600192906118729084906127a0565b90915550506001600160a01b03821660009081526003602052604081208054600192906118a09084906126ab565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061190c82610d0f565b9050611919600083611600565b6001600160a01b03811660009081526003602052604081208054600192906119429084906127a0565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600c826040516119fe919061262f565b9081526040519081900360200190206001015460ff600160801b9091041615611a4f5760405162461bcd60e51b815260206004820152600360248201526241414560e81b604482015260640161075c565b6000600c83604051611a61919061262f565b90815260405190819003602001902080546001600160a01b039095166001600160a01b0319909516949094178455506001909201805470ffffffffffffffffffffffffffffffffff191660ff90931692909217600160801b1790915550565b6113c5828260405180602001604052806000815250611cda565b816001600160a01b0316836001600160a01b03161415611b3c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161075c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611bb4848484611765565b611bc084848484611d0d565b6113fb5760405162461bcd60e51b815260040161075c906127b7565b606081611c005750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611c2a5780611c1481612809565b9150611c239050600a8361283a565b9150611c04565b60008167ffffffffffffffff811115611c4557611c4561225a565b6040519080825280601f01601f191660200182016040528015611c6f576020820181803683370190505b5090505b841561175d57611c846001836127a0565b9150611c91600a8661284e565b611c9c9060306126ab565b60f81b818381518110611cb157611cb16125c8565b60200101906001600160f81b031916908160001a905350611cd3600a8661283a565b9450611c73565b611ce48383611e0b565b611cf16000848484611d0d565b610b385760405162461bcd60e51b815260040161075c906127b7565b60006001600160a01b0384163b15611e0057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611d51903390899088908890600401612862565b6020604051808303816000875af1925050508015611d8c575060408051601f3d908101601f19168201909252611d899181019061289f565b60015b611de6573d808015611dba576040519150601f19603f3d011682016040523d82523d6000602084013e611dbf565b606091505b508051611dde5760405162461bcd60e51b815260040161075c906127b7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061175d565b506001949350505050565b6001600160a01b038216611e615760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161075c565b6000818152600260205260409020546001600160a01b031615611ec65760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161075c565b6001600160a01b0382166000908152600360205260408120805460019290611eef9084906126ab565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b508054611f599061258d565b6000825580601f10611f69575050565b601f016020900490600052602060002090810190610cd6919061200b565b828054611f939061258d565b90600052602060002090601f016020900481019282611fb55760008555611ffb565b82601f10611fce57805160ff1916838001178555611ffb565b82800160010185558215611ffb579182015b82811115611ffb578251825591602001919060010190611fe0565b5061200792915061200b565b5090565b5b80821115612007576000815560010161200c565b6001600160e01b031981168114610cd657600080fd5b60006020828403121561204857600080fd5b813561156181612020565b60006020828403121561206557600080fd5b5035919050565b60005b8381101561208757818101518382015260200161206f565b838111156113fb5750506000910152565b600081518084526120b081602086016020860161206c565b601f01601f19169290920160200192915050565b6020815260006115616020830184612098565b60018060a01b038151168252602081015160208301526000604082015160a0604085015261210860a0850182612098565b905060608301516060850152608083015160808501528091505092915050565b60208152600061156160208301846120d7565b80356001600160a01b038116811461215257600080fd5b919050565b6000806040838503121561216a57600080fd5b6121738361213b565b946020939093013593505050565b60008060006060848603121561219657600080fd5b61219f8461213b565b92506121ad6020850161213b565b9150604084013590509250925092565b60018060a01b038616815284602082015260a0604082015260006121e460a0830186612098565b606083019490945250608001529392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561224d57603f1988860301845261223b8583516120d7565b9450928501929085019060010161221f565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156122995761229961225a565b604052919050565b600067ffffffffffffffff8211156122bb576122bb61225a565b50601f01601f191660200190565b60006122dc6122d7846122a1565b612270565b90508281528383830111156122f057600080fd5b828260208301376000602084830101529392505050565b600082601f83011261231857600080fd5b611561838335602085016122c9565b60006020828403121561233957600080fd5b813567ffffffffffffffff81111561235057600080fd5b61175d84828501612307565b60006020828403121561236e57600080fd5b6115618261213b565b60ff81168114610cd657600080fd5b6000806000806080858703121561239c57600080fd5b6123a58561213b565b9350602085013567ffffffffffffffff8111156123c157600080fd5b6123cd87828801612307565b9350506123dc6040860161213b565b915060608501356123ec81612377565b939692955090935050565b6000806040838503121561240a57600080fd5b6124138361213b565b91506020830135801515811461242857600080fd5b809150509250929050565b6000806000806080858703121561244957600080fd5b6124528561213b565b93506124606020860161213b565b925060408501359150606085013567ffffffffffffffff81111561248357600080fd5b8501601f8101871361249457600080fd5b6124a3878235602084016122c9565b91505092959194509250565b600080604083850312156124c257600080fd5b6124cb8361213b565b9150602083013567ffffffffffffffff8111156124e757600080fd5b6124f385828601612307565b9150509250929050565b6060815260006125106060830186612098565b60ff9490941660208301525060400152919050565b6000806040838503121561253857600080fd5b6125418361213b565b915061254f6020840161213b565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c908216806125a157607f821691505b602082108114156125c257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000825161264181846020870161206c565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561267b5761267b61264b565b500290565b60006001600160801b038083168185168083038211156126a2576126a261264b565b01949350505050565b600082198211156126be576126be61264b565b500190565b600060ff821660ff8114156126da576126da61264b565b60010192915050565b6000806000606084860312156126f857600080fd5b835167ffffffffffffffff81111561270f57600080fd5b8401601f8101861361272057600080fd5b805161272e6122d7826122a1565b81815287602083850101111561274357600080fd5b61275482602083016020860161206c565b809550505050602084015161276881612377565b80925050604084015190509250925092565b6000835161278c81846020880161206c565b8351908301906126a281836020880161206c565b6000828210156127b2576127b261264b565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060001982141561281d5761281d61264b565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261284957612849612824565b500490565b60008261285d5761285d612824565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061289590830184612098565b9695505050505050565b6000602082840312156128b157600080fd5b81516115618161202056fea26469706673582212208111219178e61d62a71c21b616cfa99386246c87185782e10e244864f292eaee64736f6c634300080b0033";

type GMKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GMKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GMKeys__factory extends ContractFactory {
  constructor(...args: GMKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GMKeys";
  }

  deploy(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GMKeys> {
    return super.deploy(
      _baseTokenURI,
      _price,
      overrides || {}
    ) as Promise<GMKeys>;
  }
  getDeployTransaction(
    _baseTokenURI: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseTokenURI, _price, overrides || {});
  }
  attach(address: string): GMKeys {
    return super.attach(address) as GMKeys;
  }
  connect(signer: Signer): GMKeys__factory {
    return super.connect(signer) as GMKeys__factory;
  }
  static readonly contractName: "GMKeys";
  public readonly contractName: "GMKeys";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GMKeysInterface {
    return new utils.Interface(_abi) as GMKeysInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GMKeys {
    return new Contract(address, _abi, signerOrProvider) as GMKeys;
  }
}
